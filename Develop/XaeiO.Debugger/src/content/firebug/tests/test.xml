<?xml version="1.0"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<script><![CDATA[

console.log("eh?");

function logit()
{
    console.log("This is a call to log with multiple arguments.", document.body, 42);
}

function debugit()
{
    console.debug('This is just debugging text!');
}

function informit()
{
    console.info('This is some information.');
}

function warnit()
{
    console.warn('This is a warning.');
}

function errit()
{
    console.error('This is an error!');
}

function loadXML()
{
    var req = new XMLHttpRequest();
    req.onreadystatechange = function()
    {
        //if (req.readyState == 4)
            //alert(req.responseText);
    }
    
    req.open("GET", "test.html", true);
    req.send(null);
}

function loadXMLSync()
{
    var req = new XMLHttpRequest();
    req.onreadystatechange = function()
    {
        alert("hi!");
    }
    req.open("GET", "test.html");
    req.send(null);
}

function postXML()
{
    var req = new XMLHttpRequest();
    req.onreadystatechange = function()
    {
        //if (req.readyState == 4)
            //alert(req.responseText);
    }
    
    req.open("POST", "test.html", true);
    req.setRequestHeader("Content-Type", "text/xml");
    req.send("<foo></foo>");
}

function loadXMLNaughty()
{
    var req = new XMLHttpRequest();
    req.onreadystatechange = function()
    {
    }
    
    req.open("GET", "http://www13.meebo.com/mcmd/start", true);
    req.send(null);
}

function loadJSONDebugger()
{
    var req = new XMLHttpRequest();
    req.onreadystatechange = function()
    {
        eval(req.responseText);
        var f = 8;
        var g = 9;
    }
    
    req.open("GET", "breakpoint.js", true);
    req.send(null);
}

function loadScriptDebugger()
{
    var script = document.createElement("script");
    script.setAttribute("src", "breakpoint.js");
    document.body.appendChild(script);
}

function loadScript()
{
    var script = document.createElement("script");
    script.setAttribute("src", "stuff.js");
    document.body.appendChild(script);
}

function explode()
{
    for (var i = 0; i < 1000; ++i)
        setTimeout(new Function("b" + i + "();"), 0);
}

function countit()
{
    console.count();
    console.count("foo");
}

function timeStart()
{
    console.time("foo");
}

function timeEnd()
{
    console.timeEnd("foo");
}

function traceit()
{
    traceit2();
}

function traceit2()
{
    traceit3();
}

function traceit3()
{
    console.trace();
}

function breakit()
{
    var foo = "poo";
    debugger;
}

function breakdeep()
{
    var foo = 42;
    breakdeep2();
}

function breakdeep2()
{
    var fun = "no";
    breakdeep3();
    fun = "yes";
    var stuff = 88;
}

function breakdeep3()
{
    var bar = "hello";
    var baz = document.body;
    //ftrace();
    debugger;
    blah();
}

function breaksimple()
{
    debugger;
}

function throwit()
{
    throw "hi";
}

function badStuff()
{
/*foo*/                    B3();
}

function blah()
{
    var a = 100;
    warnit();
}

function onassert(message, source)
{
}

]]></script>

<script src="prototype.js"></script>

<style type="text/css">@import "styles.css";</style>

</head>

<body onload="console.log('Welcome')">

    <h1>log Tests</h1>
    <div>
        <button onclick="logit()">log</button>
        <button onclick="console.log('This is some %s. %o!! %s!!!', 'formatted text', document.body, 42)">log formatted</button>
        <button onclick="debugit()">debug</button>
        <button onclick="informit()">info</button>
        <button onclick="warnit()">warn</button>
        <button onclick="errit()">error</button>
    </div>    
    <div>
        <button onclick="console.assert(0)">assert</button>
        <button onclick="console.assertEquals(document.body, document.documentElement)">assertEquals</button>
        <button onclick="console.assertEquals(3, 4, 'This is bad!')">assertEquals+msg</button>
        <button onclick="console.fail('This is bad!')">fail</button>
    </div>

    <div>    
        <button onclick="console.log('%x', document.documentElement)">log("%x")</button>
        <button onclick="console.log('%1.x', document.documentElement)">log("%1.x")</button>
        <button onclick="console.log('%2.x', document.documentElement)">log("%2.x")</button>
        <button onclick="console.log('%.x', document.documentElement)">log("%.x")</button>
    </div>

    <div>    
        <button onclick="console.log('%o', document)">log("%o")</button>
        <button onclick="console.log('%1.o', document)">log("%1.o")</button>
        <button onclick="console.log('%2.o', document)">log("%2.o")</button>
    </div>

    <div>
        <button onclick="traceit()">trace</button>
        <button onclick="countit()">count</button>
        <button onclick="timeStart()">time</button>
        <button onclick="timeEnd()">timeEnd</button>
    </div>
    
    <h1>Error Tests</h1>
    <div>
        <button onclick="2BeOrNot2Be(40)">Syntax Error</button>
        <button onclick="foops()">Shallow Error</button>
        <button onclick="badStuff()">Deep Error</button>
        <button onclick="throwit()">Throw</button>
        <button onclick="explode()">A Thousand Errors</button>
    </div>

    <h1>Breakpoint Tests</h1>
    <div>
        <button onclick="breaksimple()">debugger Keyword</button>
        <button onclick="breakit()">debugger Shallow</button>
        <button onclick="breakdeep()">debugger Deep</button>
        <button onclick="loadJSONDebugger()">debugger in JSON</button>
        <button onclick="loadScriptDebugger()">debugger in script</button>
    </div>

    <h1>XMLHttpRequest Tests</h1>
    <div>
        <button onclick="loadXML()">Load XML</button>
        <button onclick="loadXMLSync()">Load XML Sync</button>
        <button onclick="postXML()">Post XML</button>
        <button onclick="loadXMLNaughty()">Load External XML</button>
        <button onclick="loadScript()">Load Script</button>
    </div>
    
    <h1>Stuff to Inspect</h1>

    <div>
        <input id="input" type="text"/>
        <a href="foo" class="funLink" title="hi" style="font-style: italic">Just a link</a>
        <h2 style="display: none">Hidden</h2>
        
        <span>Blah</span>
    </div>

    <div>
        This is some text.
        <span>This is a span.</span>
        And here is some more text.
    </div>

    <iframe src="frame.html"/>    
</body>
</html>
