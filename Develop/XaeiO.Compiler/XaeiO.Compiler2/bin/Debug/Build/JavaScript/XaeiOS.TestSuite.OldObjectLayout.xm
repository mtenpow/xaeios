var $$=[

/************
Object image OSCorlib - Code: 0	Data: 0
**********/

function($ep,$end,$rv,$pc,$f,r0)
// 0: System.String System.Object::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[94](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*$rv = System.Reflection.ReflectionHelpers::GetType(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_1.1 = $rv*/;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = V_1.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 1: System.Int32 System.Object::GetHashCode()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[409](this)/*V_0.1 = System.Runtime.CompilerServices.RuntimeHelpers::NativeGetHashCode(this)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 2: System.Boolean System.Object::Equals(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return (this == $f[2])/*this ValueEquality o*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 3: System.Type System.Object::GetType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this.$/*$t5 = this.get_VTable()*/;
                    $rv = r0.c/*$rv = $t5.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_2.1 = $rv*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_3.1 = $rv*/;
                    return r0/*V_3.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 4: System.Void System.Object::Finalize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 5: System.Void System.Object::.ctor()
{
    return;

},
function($ep,$end,$rv,$pc,$f)
// 6: System.Void System.Attribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 7: System.Void System.Runtime.InteropServices.GuidAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 8: System.String System.Exception::get_Message()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._message*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 9: System.Exception System.Exception::get_InnerException()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._innerException*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r1,r0)
// 10: System.Exception System.Exception::GetBaseException()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r2 = this[2]/*V_5.1 = this._innerException*/;
                    r0 = r2/*V_0.1 = V_5.1*/;
                    r1 = this/*V_1.1 = this*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!(r0 == null)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    return r1/*V_1.3*/;
                }
                case 4:
                {
                    r1 = r0/*V_1.2 = V_0.3*/;
                    r2 = r0[2]/*V_4.1 = V_0.3._innerException*/;
                    r0 = r2/*V_0.2 = V_4.1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 11: System.String System.Exception::get_HelpLink()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 12: System.Void System.Exception::set_HelpLink(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 13: System.String System.Exception::get_Source()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 14: System.Void System.Exception::set_Source(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 15: System.String System.Exception::get_StackTrace()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*$t1 = this._stackTrace*/;
                    if((!(r0 == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = $$[601](this)/*$t10 = XaeiOS.SystemCalls::GetStackTrace(this)*/;
                    this[3] = r0/*this._stackTrace = $t10*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = this[3]/*V_0.1 = this._stackTrace*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 16: System.String System.Exception::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this.$/*$t13 = this.get_VTable()*/;
                    $rv = r0.c/*$rv = $t13.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_3.1 = $rv*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*V_4.1 = $rv*/;
                    r1 = this[1]/*V_2.1 = this._message*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$rv = System.String::SafeToString(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3 = $rv/*$t7 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,": "])/*$rv = System.String::SafeToString(": ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = $rv/*$t9 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::SafeToString(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = $rv/*$t11 = $rv*/;
                    r0 = (r3 + r2 + r0)/*V_1.1 = System.String::Concat($t7, $t9, $t11)*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 17: System.Void System.Exception::.ctor()
{
    $$[19].call(this,"",null)/*this..ctor("", null)*/;
    return;

},
function(a0/*message*/)
 // 18: System.Void System.Exception::.ctor(System.String)
{
    $$[19].call(this,a0,null)/*this..ctor(message, null)*/;
    return;

},
function(a0/*message*/,a1/*innerException*/)
 // 19: System.Void System.Exception::.ctor(System.String,System.Exception)
{
    $$[5].call(this)/*this..ctor()*/;
    this[1] = a0/*this._message = message*/;
    this[2] = a1/*this._innerException = innerException*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 20: System.Void System.MulticastNotSupportedException::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[18].call(this,$f[2])/*this..ctor(message)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 21: System.Void System.MulticastNotSupportedException::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[20].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Multicast not supported"])/*this..ctor("Multicast not supported")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 22: System.Object System.Delegate::get_Target()
{
    var r0;
    r0 = this[0]/*V_0.1 = this._target*/;
    return r0/*V_0.1*/;

},
function()
 // 23: System.NativeFunction System.Delegate::get_Function()
{
    var r0;
    r0 = this[1]/*V_0.1 = this._function*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f)
// 24: System.Object System.Delegate::Invoke(System.Object[])
{
    return this[1].apply(this[0], [0,$end,null,$pc,[null,null].concat($f[2])]);
},
function($ep,$end,$rv,$pc,$f)
// 25: System.Object System.Delegate::InvokeNative(System.Object[])
{
    if(typeof(this) == 'function'){return this.apply(null, arguments);}else{return this[1].apply(this[0], arguments);}
},
function($ep,$end,$rv,$pc,$f,r0)
// 26: System.Void System.Delegate::InternalCombine(System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[8],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.MulticastNotSupportedException::.ctor()()*/;
                    $$[21].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 27: System.Object System.Delegate::DynamicInvoke(System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[4].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = this.Invoke(args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*target*/,a1/*function*/)
 // 28: System.Delegate System.Delegate::Create(System.Object,System.NativeFunction)
{
    var r0;
    r0 = {$:_[9],0:null,1:null}/*$t2 = new System.Void System.Delegate::.ctor(System.Object,System.NativeFunction)(target, function)*/;
    $$[36].call(r0,a0,a1)/*$t2..ctor(target, function)*/;
    return r0/*$t2*/;

},
function(a0/*d*/,a1/*target*/,a2/*function*/)
 // 29: System.Void System.Delegate::InternalCreate(System.Delegate,System.Object,System.NativeFunction)
{
    a0[0] = a1/*d._target = target*/;
    a0[1] = a2/*d._function = function*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0)
// 30: System.Delegate System.Delegate::BrokenCombine(System.Delegate,System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = $f[3]/*V_1.1 = b*/;
                    $ep = 10;
                    continue $ctrl;
                }
                case 3:
                {
                    if((!($f[3] == null)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = $f[2]/*V_1.2 = a*/;
                    $ep = 10;
                    continue $ctrl;
                }
                case 5:
                {
                    r1 = $$[411]($f[2],_[10])/*V_0.1 = a is System.MulticastDelegate*/;
                    if((!($$[411]($f[2],_[10]) == null)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r3 = $f[2][0]/*$t25 = a._target*/;
                    r2 = $f[2][1]/*$t27 = a._function*/;
                    r4 = {$:_[10],0:null,1:null,2:null,3:null}/*$t32 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)($t25, $t27)*/;
                    $$[42].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0],[null,null,r3,r2])/*$t32..ctor($t25, $t27)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r1 = r4/*V_0.2 = $t32*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1.$[6].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0],[null,null,$f[3]])/*V_0.3.InternalCombine(b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r0 = r1/*V_1.3 = V_0.3*/;
                    $ep = 10;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    return r0/*V_1.4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0)
// 31: System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = $f[3]/*V_1.1 = b*/;
                    $ep = 11;
                    continue $ctrl;
                }
                case 3:
                {
                    if((!($f[3] == null)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = $f[2]/*V_1.2 = a*/;
                    $ep = 11;
                    continue $ctrl;
                }
                case 5:
                {
                    if((!($$[411]($f[2],_[10]) == null)))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = $f[2][0]/*$t25 = a._target*/;
                    r1 = $f[2][1]/*$t27 = a._function*/;
                    r3 = {$:_[10],0:null,1:null,2:null,3:null}/*$t33 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)($t25, $t27)*/;
                    $$[42].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r2,r1])/*$t33..ctor($t25, $t27)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r3.$[6].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,$f[3]])/*$t33.InternalCombine(b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = r3/*V_1.4 = $t33*/;
                    $ep = 11;
                    continue $ctrl;
                }
                case 9:
                {
                    $ep = 10;
                    $$[411]($f[2],_[10]).$[6].call($$[411]($f[2],_[10]),0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,$f[3]])/*a is System.MulticastDelegate.InternalCombine(b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r0 = $$[411]($f[2],_[10])/*V_1.3 = a is System.MulticastDelegate*/;
                    $ep = 11;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    return r0/*V_1.5*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 32: System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[8],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.MulticastNotSupportedException::.ctor(System.String)("Delegate::Remove not yet implemented")*/;
                    $$[20].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Delegate::Remove not yet implemented"])/*$t1..ctor("Delegate::Remove not yet implemented")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 33: System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 34: System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 35: System.Void System.Delegate::.ctor()
{
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function(a0/*target*/,a1/*function*/)
 // 36: System.Void System.Delegate::.ctor(System.Object,System.NativeFunction)
{
    $$[5].call(this)/*this..ctor()*/;
    $$[29](this,a0,a1)/*System.Delegate::InternalCreate(this, target, function)*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 37: System.Object System.MulticastDelegate::Invoke(System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[24].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0],[null,null,$f[2]])/*$rv = this.Invoke(args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    r1 = this[2]/*$t4 = this._next*/;
                    if((r1 == null))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = this[2]/*$t9 = this._next*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0],[null,null,$f[2]])/*$rv = $t9.Invoke(args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.2 = $rv*/;
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 38: System.Object System.MulticastDelegate::InvokeNative(System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[8],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.MulticastNotSupportedException::.ctor(System.String)("Native multicast delegates are not supported")*/;
                    $$[20].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Native multicast delegates are not supported"])/*$t1..ctor("Native multicast delegates are not supported")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0)
// 39: System.Void System.MulticastDelegate::InternalCombine(System.Delegate)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this/*V_0.1 = this*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r2 = r0[2]/*$t1 = V_0.3._next*/;
                    if((!(r2 == null)))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r1 = $$[411]($f[2],_[10])/*V_1.1 = d is System.MulticastDelegate*/;
                    if((!($$[411]($f[2],_[10]) == null)))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3 = $$[22].call($f[2])/*$t17 = d.get_Target()*/;
                    $rv = $$[23].call($f[2])/*$rv = d.get_Function()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = $rv/*$t19 = $rv*/;
                    r4 = {$:_[10],0:null,1:null,2:null,3:null}/*$t20 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)($t17, $t19)*/;
                    $$[42].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0],[null,null,r3,r2])/*$t20..ctor($t17, $t19)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r1 = r4/*V_1.2 = $t20*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $$[40].call($$[411]($f[2],_[10]),0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0],[null,null])/*$rv = d is System.MulticastDelegate.Clone()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r1 = $rv/*V_1.3 = $rv*/;
                    r0[2] = r1/*V_0.3._next = V_1.4*/;
                    r1[3] = r0/*V_1.4._prev = V_0.3*/;
                    return;
                }
                case 9:
                {
                    r0 = r0[2]/*V_0.2 = V_0.3._next*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r3,r4,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5)
// 40: System.MulticastDelegate System.MulticastDelegate::Clone()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r3 = $$[22].call(this)/*$t1 = this.get_Target()*/;
                    $rv = $$[23].call(this)/*$rv = this.get_Function()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*$t3 = $rv*/;
                    r5 = {$:_[10],0:null,1:null,2:null,3:null}/*$t4 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)($t1, $t3)*/;
                    $$[42].call(r5,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5],[null,null,r3,r2])/*$t4..ctor($t1, $t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = r5/*V_1.1 = $t4*/;
                    r1 = r5[2]/*V_2.1 = $t4._next*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((!(r1 == null)))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    return r5/*$t4*/;
                }
                case 6:
                {
                    $ep = 7;
                    r3 = $$[22].call(r1)/*$t12 = V_2.3.get_Target()*/;
                    $rv = $$[23].call(r1)/*$rv = V_2.3.get_Function()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r2 = $rv/*$t13 = $rv*/;
                    r4 = {$:_[10],0:null,1:null,2:null,3:null}/*$t14 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)($t12, $t13)*/;
                    $$[42].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5],[null,null,r3,r2])/*$t14..ctor($t12, $t13)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r4[3] = r0/*$t14._prev = V_1.3*/;
                    r0 = r4/*V_1.2 = $t14*/;
                    r1 = r1[2]/*V_2.2 = V_2.3._next*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 41: System.MulticastDelegate System.MulticastDelegate::InternalCreate(System.Object,System.NativeFunction)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[10],0:null,1:null,2:null,3:null}/*$t2 = new System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)(target, function)*/;
                    $$[42].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],$f[3]])/*$t2..ctor(target, function)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*$t2*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 42: System.Void System.MulticastDelegate::.ctor(System.Object,System.NativeFunction)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[36].call(this,$f[2],$f[3])/*this..ctor(target, function)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 43: System.String XaeiOS.Process.ImageFormat.AssemblyName::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._name*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 44: System.Void XaeiOS.Process.ImageFormat.AssemblyName::set_Name(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this._name = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 45: System.String XaeiOS.Process.ImageFormat.AssemblyName::get_Version()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._version*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 46: System.Void XaeiOS.Process.ImageFormat.AssemblyName::set_Version(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this._version = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 47: System.String XaeiOS.Process.ImageFormat.AssemblyName::get_Culture()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._culture*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 48: System.Void XaeiOS.Process.ImageFormat.AssemblyName::set_Culture(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[2] = $f[2]/*this._culture = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 49: System.Void XaeiOS.Process.ImageFormat.AssemblyName::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 50: System.Void System.Reflection.MemberInfo::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 51: System.String System.Type::get_FullName()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[7].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Namespace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t1 = $rv*/;
                    $rv = this.$[5].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    r0 = (r1 + "." + r0)/*V_0.1 = System.String::Concat($t1, ".", $t4)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 52: System.RuntimeTypeHandle System.Type::get_TypeHandle()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._typeHandle*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 53: System.String System.Type::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[7].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Namespace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t1 = $rv*/;
                    $rv = this.$[5].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    r0 = (r1 + "." + r0)/*V_0.1 = System.String::Concat($t1, ".", $t4)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 54: System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $f[2].c/*$t5 = handle.get_Class()*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_2.1 = $rv*/;
                    return r0/*V_2.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 55: System.Type System.Type::GetType(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[96](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Reflection.ReflectionHelpers::GetTypeByName(typeName)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 56: System.Void System.Type::.ctor(System.RuntimeTypeHandle)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[50].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._typeHandle = typeHandle*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 57: System.Type System.Reflection.RuntimeType::get_DeclaringType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[7]/*V_0.1 = this._declaringType*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 58: System.String System.Reflection.RuntimeType::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this._class*/;
                    $rv = $$[188].call(r0)/*$rv = $t1.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 59: System.String System.Reflection.RuntimeType::get_Namespace()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this._class*/;
                    $rv = $$[190].call(r0)/*$rv = $t1.get_Namespace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 60: System.Runtime.Class System.Reflection.RuntimeType::get_Class()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._class*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 61: System.Reflection.ConstructorInfo[] System.Reflection.RuntimeType::GetConstructors()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[66].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*this.LoadConstructorInfo()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = this[2]/*$t2 = this._constructors*/;
                    r2 = $$[422](_[77],r1.length)/*V_0.1 = new System.Reflection.ConstructorInfo[(System.Int32)$t2.Length]*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = this[2]/*$t8 = this._constructors*/;
                    if((r0 < r1.length))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r2/*V_0.1*/;
                }
                case 5:
                {
                    r1 = this[2]/*$t14 = this._constructors*/;
                    r2[r0] = r1[r0]/*V_0.1[V_1.3] = $t14[V_1.3]*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 62: System.Reflection.MethodInfo[] System.Reflection.RuntimeType::GetMethods()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[67].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*this.LoadMethodInfo()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = this[3]/*$t2 = this._methods*/;
                    r2 = $$[422](_[96],r1.length)/*V_0.1 = new System.Reflection.MethodInfo[(System.Int32)$t2.Length]*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = this[3]/*$t8 = this._methods*/;
                    if((r0 < r1.length))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r2/*V_0.1*/;
                }
                case 5:
                {
                    r1 = this[3]/*$t14 = this._methods*/;
                    r2[r0] = r1[r0]/*V_0.1[V_1.3] = $t14[V_1.3]*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 63: System.Reflection.PropertyInfo[] System.Reflection.RuntimeType::GetProperties()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[68].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*this.LoadPropertyInfo()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = this[4]/*$t2 = this._properties*/;
                    r2 = $$[422](_[61],r1.length)/*V_0.1 = new System.Reflection.PropertyInfo[(System.Int32)$t2.Length]*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = this[4]/*$t8 = this._properties*/;
                    if((r0 < r1.length))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r2/*V_0.1*/;
                }
                case 5:
                {
                    r1 = this[4]/*$t14 = this._properties*/;
                    r2[r0] = r1[r0]/*V_0.1[V_1.3] = $t14[V_1.3]*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 64: System.Boolean System.Reflection.RuntimeType::IsDefined(System.Type,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this._class*/;
                    $rv = $$[107](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::IsDefined($t1, attributeType, inherit)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 65: System.Object System.Reflection.RuntimeType::CreateInstance()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[11].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = this.get_TypeHandle()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t4 = $rv*/;
                    r0 = r0.c/*$t5 = $t4.get_Class()*/;
                    $rv = $$[104](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::CreateInstance($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0)
// 66: System.Void System.Reflection.RuntimeType::LoadConstructorInfo()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = this[2]/*$t1 = this._constructors*/;
                    if((r1 == null))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[1]/*$t7 = this._class*/;
                    $rv = $$[207].call(r1)/*$rv = $t7.get_Constructors()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = $rv/*$t8 = $rv*/;
                    r1 = r1.length/*$t9 = $t8.get_Length()*/;
                    r1 = $$[422](_[78],r1)/*$t10 = new System.Reflection.RuntimeConstructorInfo[$t9]*/;
                    this[2] = r1/*this._constructors = $t10*/;
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = this[1]/*$t13 = this._class*/;
                    $rv = $$[207].call(r1)/*$rv = $t13.get_Constructors()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = $rv/*$t14 = $rv*/;
                    r1 = r1.length/*$t15 = $t14.get_Length()*/;
                    if((r0 < r1))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    return;
                }
                case 7:
                {
                    $ep = 8;
                    r1 = this[1]/*$t19 = this._class*/;
                    $rv = $$[207].call(r1)/*$rv = $t19.get_Constructors()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = $rv/*$t20 = $rv*/;
                    r3 = r1[r0]/*V_1.1 = $t20.get_Item(V_0.3)*/;
                    r2 = this[2]/*$t24 = this._constructors*/;
                    r1 = {$:_[78],0:null,1:null}/*$t26 = new System.Void System.Reflection.RuntimeConstructorInfo::.ctor(System.Runtime.Constructor,System.Reflection.RuntimeType)(V_1.1, this)*/;
                    $$[134].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r3,this])/*$t26..ctor(V_1.1, this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2[r0] = r1/*$t24[V_0.3] = $t26*/;
                    r1 = this[6]/*$t28 = this._constructorToRuntimeConstructorInfoMap*/;
                    r2 = this[2]/*$t30 = this._constructors*/;
                    r1.$[6].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r3,r2[r0]])/*$t28.set_Item(V_1.1, $t30[V_0.3])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0)
// 67: System.Void System.Reflection.RuntimeType::LoadMethodInfo()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = this[3]/*$t1 = this._methods*/;
                    if((r1 == null))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[1]/*$t7 = this._class*/;
                    $rv = $$[206].call(r1)/*$rv = $t7.get_Methods()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = $rv/*$t8 = $rv*/;
                    r1 = r1.length/*$t9 = $t8.get_Length()*/;
                    r1 = $$[422](_[242],r1)/*$t10 = new System.Reflection.RuntimeMethodInfo[$t9]*/;
                    this[3] = r1/*this._methods = $t10*/;
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = this[1]/*$t13 = this._class*/;
                    $rv = $$[206].call(r1)/*$rv = $t13.get_Methods()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = $rv/*$t14 = $rv*/;
                    r1 = r1.length/*$t15 = $t14.get_Length()*/;
                    if((r0 < r1))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    return;
                }
                case 7:
                {
                    $ep = 8;
                    r1 = this[1]/*$t19 = this._class*/;
                    $rv = $$[206].call(r1)/*$rv = $t19.get_Methods()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = $rv/*$t20 = $rv*/;
                    r3 = r1[r0]/*V_1.1 = $t20.get_Item(V_0.3)*/;
                    r2 = this[3]/*$t24 = this._methods*/;
                    r1 = {$:_[242],0:null,1:null}/*$t26 = new System.Void System.Reflection.RuntimeMethodInfo::.ctor(System.Runtime.Method,System.Reflection.RuntimeType)(V_1.1, this)*/;
                    $$[444].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r3,this])/*$t26..ctor(V_1.1, this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2[r0] = r1/*$t24[V_0.3] = $t26*/;
                    r1 = this[5]/*$t28 = this._methodToRuntimeMethodInfoMap*/;
                    r2 = this[3]/*$t30 = this._methods*/;
                    r1.$[6].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r3,r2[r0]])/*$t28.set_Item(V_1.1, $t30[V_0.3])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0)
// 68: System.Void System.Reflection.RuntimeType::LoadPropertyInfo()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r3 = this[4]/*$t1 = this._properties*/;
                    if((r3 == null))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[67].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0],[null,null])/*this.LoadMethodInfo()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r3 = this[1]/*$t8 = this._class*/;
                    $rv = $$[208].call(r3)/*$rv = $t8.get_Properties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r3 = $rv/*$t9 = $rv*/;
                    r3 = r3.length/*$t10 = $t9.get_Length()*/;
                    r3 = $$[422](_[62],r3)/*$t11 = new System.Reflection.RuntimePropertyInfo[$t10]*/;
                    this[4] = r3/*this._properties = $t11*/;
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r3 = this[1]/*$t14 = this._class*/;
                    $rv = $$[208].call(r3)/*$rv = $t14.get_Properties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r3 = $rv/*$t15 = $rv*/;
                    r3 = r3.length/*$t16 = $t15.get_Length()*/;
                    if((r0 < r3))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 7:
                {
                    return;
                }
                case 8:
                {
                    $ep = 9;
                    r3 = this[1]/*$t20 = this._class*/;
                    $rv = $$[208].call(r3)/*$rv = $t20.get_Properties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r3 = $rv/*$t21 = $rv*/;
                    r5 = r3[r0]/*V_1.1 = $t21.get_Item(V_0.3)*/;
                    $rv = $$[280].call(r5)/*$rv = V_1.1.get_GetMethod()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r3 = $rv/*$t24 = $rv*/;
                    if((r3 == null))
                    {
                        $ep = 13;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r3 = this[5]/*$t29 = this._methodToRuntimeMethodInfoMap*/;
                    $rv = $$[280].call(r5)/*$rv = V_1.1.get_GetMethod()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 14;
                    r4 = $rv/*$t30 = $rv*/;
                    $rv = r3.$[5].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0],[null,null,r4])/*$rv = $t29.get_Item($t30)*/;
                    continue $ctrl;
                }
                case 13:
                {
                    r1 = null/*V_2.2 = null*/;
                    $ep = 14;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    r1 = $rv/*V_2.1 = $rv*/;
                    r3 = $$[282].call(r5)/*$t32 = V_1.1.get_SetMethod()*/;
                    if((r3 == null))
                    {
                        $ep = 15;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 16;
                        continue $ctrl;

                    }
                }
                case 15:
                {
                    r2 = null/*V_3.2 = null*/;
                    $ep = 18;
                    continue $ctrl;
                }
                case 16:
                {
                    $ep = 17;
                    r3 = this[5]/*$t37 = this._methodToRuntimeMethodInfoMap*/;
                    $rv = $$[282].call(r5)/*$rv = V_1.1.get_SetMethod()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r4 = $rv/*$t38 = $rv*/;
                    $rv = r3.$[5].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0],[null,null,r4])/*$rv = $t37.get_Item($t38)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $rv/*V_3.1 = $rv*/;
                    r4 = this[4]/*$t41 = this._properties*/;
                    r3 = {$:_[62],0:null,1:null,2:null,3:null}/*$t43 = new System.Void System.Reflection.RuntimePropertyInfo::.ctor(System.Runtime.Property,System.Reflection.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Reflection.RuntimeMethodInfo)(V_1.1, this, V_2.3, V_3.3)*/;
                    $$[119].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0],[null,null,r5,this,r1,r2])/*$t43..ctor(V_1.1, this, V_2.3, V_3.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    r4[r0] = r3/*$t41[V_0.3] = $t43*/;
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 5;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r3,r4,r2,r1,r5,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 69: System.Void System.Reflection.RuntimeType::.ctor(System.Runtime.Class,System.Reflection.RuntimeType)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t1 = new System.Void System.Collections.Generic.Dictionary`2<System.Runtime.Method,System.Reflection.RuntimeMethodInfo>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    this[5] = r0/*this._methodToRuntimeMethodInfoMap = $t1*/;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t3 = new System.Void System.Collections.Generic.Dictionary`2<System.Runtime.Constructor,System.Reflection.RuntimeConstructorInfo>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t3..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    this[6] = r0/*this._constructorToRuntimeConstructorInfoMap = $t3*/;
                    $rv = $$[195].call($f[2])/*$rv = klass.get_VTable()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t7 = $rv*/;
                    $$[56].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this..ctor($t7)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    this[1] = $f[2]/*this._class = klass*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 70: System.Void System.Threading.Lock::Acquire()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                }
                case 2:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = this[0]/*$t2 = this._owner*/;
                    if((!r0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;

                    }
                }
                case 3:
                {
                    r1 = this[0]/*$t4 = this._owner*/;
                    r0 = (!(r1 == r2))/*$ts0 = BooleanNot $t4 ValueEquality V_0.1*/;
                    $ep = 5;
                    continue $ctrl;
                }
                case 4:
                {
                    r0 = 0/*$ts0 = 0*/;
                    $ep = 5;
                }
                case 5:
                {
                    if(r0)
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;

                    }
                }
                case 6:
                {
                    this[0] = r2/*this._owner = V_0.1*/;
                    return;
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[1]/*$t12 = this._waitingOwners*/;
                    r0.push(r2)/*$t12.Push(V_0.1)*/;
                }
                case 8:
                {
                    $ep = 2;
                    $$[595](r2)/*XaeiOS.SystemCalls::BlockTask(V_0.1)*/;
                    $$[596](0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 71: System.Boolean System.Threading.Lock::TryAcquire()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r2 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    r1 = this[0]/*$t2 = this._owner*/;
                    if((!(r1 == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;

                    }
                }
                case 2:
                {
                    this[0] = r2/*this._owner = V_0.1*/;
                    r0 = 1/*V_1.1 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 3:
                {
                    r1 = this[0]/*$t12 = this._owner*/;
                    if((!(r1 == r2)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;

                    }
                }
                case 4:
                {
                    r0 = 1/*V_1.2 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 5:
                {
                    r0 = 0/*V_1.3 = 0*/;
                    $ep = 6;
                }
                case 6:
                {
                    return r0/*V_1.4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 72: System.Void System.Threading.Lock::Release()
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                r1 = this[0]/*$t2 = this._owner*/;
                if((!(r1 == r0)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                this[0] = null/*this._owner = null*/;
                r0 = this[1]/*$t11 = this._waitingOwners*/;
                r0 = r0.length/*$t12 = $t11.get_Length()*/;
                if((!(r0 > 0)))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                $ep = 4;
                r0 = this[1]/*$t21 = this._waitingOwners*/;
                r0 = r0.shift()/*$tf23 = $t21.Shift()*/;
                this[0] = r0/*this._owner = $tf23*/;
                $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($tf23)*/;
            }
            case 4:
            {
                return;
            }
            case 5:
            {
                r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t25 = new System.Void System.Exception::.ctor(System.String)("Cannot release lock.  Current thread is not owner")*/;
                $$[18].call(r0,"Cannot release lock.  Current thread is not owner")/*$t25..ctor("Cannot release lock.  Current thread is not owner")*/;
                throw r0/*$t25*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 73: System.Void System.Threading.Lock::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = null/*this._owner = null*/;
                    r0 = new Array()/*$t4 = new System.Void System.NativeArray`1<XaeiOS.TaskHandle>::.ctor()()*/;
                    this[1] = r0/*this._waitingOwners = $t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 74: System.Void System.OverflowException::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[17].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 75: System.IO.TextWriter System.IO.TextWriter::get_Null()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = _[25]/*V_0.1 = System.IO.TextWriter.<Null>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 76: System.Void System.IO.TextWriter::set_Null(System.IO.TextWriter)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    _[25] = $f[2]/*System.IO.TextWriter.<Null>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 77: System.Void System.IO.TextWriter::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[26]}/*$t0 = new System.Void System.IO.TextWriter/NullTextWriter::.ctor()()*/;
                    $$[80].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[76](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.IO.TextWriter::set_Null($t0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 78: System.Void System.IO.TextWriter::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 79: System.Void System.IO.TextWriter/NullTextWriter::Write(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 80: System.Void System.IO.TextWriter/NullTextWriter::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[78].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 81: System.String[] System.NativeObject::GetKeys()
{
    var r0;
    r0 = (function(obj){var keys = []; for(var i in obj){  if(i == "$"){ continue; } keys.push(i);}; return keys;})(this)/*V_0.1 = System.Runtime.CompilerServices.RuntimeHelpers::GetKeys(this)*/;
    return r0/*V_0.1*/;

},
function()
 // 82: System.String System.NativeObject::ToString()
{
    var r0;
    r0 = this.toString()/*V_0.1 = this.NativeToString()*/;
    return r0/*V_0.1*/;

},
function()
 // 83: System.Int32 System.NativeObject::GetHashCode()
{
    var r0;
    r0 = $$[409](this)/*V_0.1 = System.Runtime.CompilerServices.RuntimeHelpers::NativeGetHashCode(this)*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 84: System.String System.Runtime.CompilerServices.CLRConjugateAttribute::get_ConjugateName()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._conjugateName*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 85: System.Void System.Runtime.CompilerServices.CLRConjugateAttribute::set_ConjugateName(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this._conjugateName = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 86: System.Void System.Runtime.CompilerServices.CLRConjugateAttribute::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._conjugateName = conjugateName*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 87: System.Void System.Runtime.CompilerServices.CorlibCLRConjugateAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 88: System.Runtime.VTable System.Diagnostics.ObjectDebugger::GetSystemObjectVTable()
{
    var r0;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = _[52]/*$t0 = System.Diagnostics.ObjectDebugger._object*/;
                if((!(r0 == null)))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = {$:_[0]}/*$t7 = new System.Void System.Object::.ctor()()*/;
                $$[5].call(r0)/*$t7..ctor()*/;
                r0 = r0/*$t8 = System.Runtime.XaeiOSObject::ToXaeiOSObject($t7)*/;
                _[52] = r0/*System.Diagnostics.ObjectDebugger._object = $t8*/;
                $ep = 3;
            }
            case 3:
            {
                r0 = _[52]/*$t9 = System.Diagnostics.ObjectDebugger._object*/;
                r0 = r0.$/*V_0.1 = $t9.get_VTable()*/;
                return r0/*V_0.1*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 89: System.String System.Diagnostics.ObjectDebugger::GetTypeFullName(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $f[2].$/*$t5 = obj.get_VTable()*/;
                    $rv = r0.c/*$rv = $t5.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_2.1 = $rv*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*V_3.1 = $rv*/;
                    $rv = r0.$[7].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = V_3.1.get_Namespace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t3 = $rv*/;
                    $rv = r0.$[5].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = V_3.1.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    r0 = (r1 + "." + r0)/*V_1.1 = System.String::Concat($t3, ".", $t4)*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*obj*/)
 // 90: System.NativeObject System.Diagnostics.ObjectDebugger::DebugObject(System.Object)
{
    var r0,r1,r2;
    r2 = a0/*V_0.1 = System.Runtime.XaeiOSObject::ToXaeiOSObject(obj)*/;
    r1 = r2.$/*V_1.1 = V_0.1.get_VTable()*/;
    if((!(r1 == null)))
    {
        r0 = {$:_[53],0:0}/*$t11 = new System.Void System.Diagnostics.ObjectDebugger/IntRef::.ctor()()*/;
        $$[92].call(r0)/*$t11..ctor()*/;
        r0 = $$[91](r2,r1,r0)/*V_2.1 = System.Diagnostics.ObjectDebugger::BuildDebuggableObject(V_0.1, V_1.1, $t11)*/;
        return r0/*V_2.1*/;

    }
    else
    {
        r0 = new Error("ObjectDebugger can only debug managed objects.")/*$t10 = new System.Void System.NativeError::.ctor(System.String)("ObjectDebugger can only debug managed objects.")*/;
        throw r0/*$t10*/;

    }

},
function(a0/*xaeiosObject*/,a1/*vtable*/,a2/*fieldCounter*/)
 // 91: System.NativeObject System.Diagnostics.ObjectDebugger::BuildDebuggableObject(System.Runtime.XaeiOSObject,System.Runtime.VTable,System.Diagnostics.ObjectDebugger/IntRef)
{
    var r1,r2,r0,r3,r4;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r3 = new Object()/*$t0 = new System.Void System.NativeObject::.ctor()()*/;
                r1 = $$[88]()/*$t2 = System.Diagnostics.ObjectDebugger::GetSystemObjectVTable()*/;
                if((a1 == r1))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                r1 = a1.b/*$t8 = vtable.get_BaseVTable()*/;
                r1 = $$[91](a0,r1,a2)/*$t11 = System.Diagnostics.ObjectDebugger::BuildDebuggableObject(xaeiosObject, $t8, fieldCounter)*/;
                r3["Base"] = r1/*$t0.set_Item("Base", $t11)*/;
            }
            case 3:
            {
                r2 = a1.d/*V_1.1 = vtable.get_DebugInfo()*/;
                r1 = r2.FullName/*$t16 = V_1.1.get_FullName()*/;
                r3["FullName"] = r1/*$t0.set_Item("FullName", $t16)*/;
                r4 = r2.Fields/*V_2.1 = V_1.1.get_Fields()*/;
                r0 = 0/*V_3.1 = 0*/;
                $ep = 4;
            }
            case 4:
            {
                r1 = r4.length/*$t19 = V_2.1.get_Length()*/;
                if((r0 < r1))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                r2 = a2[0]/*$t24 = fieldCounter.Value*/;
                r1 = r4.length/*$t25 = V_2.1.get_Length()*/;
                a2[0] = (r2 + r1)/*fieldCounter.Value = $t24 Add $t25*/;
                return r3/*$t0*/;
            }
            case 6:
            {
                r2 = r4[r0]/*$t28 = V_2.1.get_Item(V_3.3)*/;
                r1 = a2[0]/*$t31 = fieldCounter.Value*/;
                r1 = a0[(r1 + r0)]/*$t34 = xaeiosObject.get_Item($t31 Add V_3.3)*/;
                r3[r2] = r1/*$t0.set_Item($t28, $t34)*/;
                r0 = (r0 + 1)/*V_3.2 = V_3.3 Add 1*/;
                $ep = 4;
                continue $ctrl;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function()
 // 92: System.Void System.Diagnostics.ObjectDebugger/IntRef::.ctor()
{
    $$[5].call(this)/*this..ctor()*/;
    this[0] = 0/*this.Value = 0*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 93: System.Void System.Reflection.ReflectionHelpers::Initialize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t0 = new System.Void System.Collections.Generic.Dictionary`2<System.Runtime.Class,System.Reflection.RuntimeType>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[56] = r0/*System.Reflection.ReflectionHelpers._runtimeTypeCache = $t0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 94: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::GetType(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $f[2].$/*$t3 = obj.get_VTable()*/;
                    $rv = r0.c/*$rv = $t3.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_1.1 = $rv*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_2.1 = $rv*/;
                    return r0/*V_2.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 95: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::GetTypeFromHandle(System.RuntimeTypeHandle)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $f[2].c/*$t3 = handle.get_Class()*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1)
// 96: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::GetTypeByName(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = _[55]/*$t1 = System.Reflection.ReflectionHelpers._runtimeAssemblies*/;
                    $rv = r2.length/*$rv = $t1.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = $rv/*$t2 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r1 = null/*V_3.1 = null*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r2 = _[55]/*$t6 = System.Reflection.ReflectionHelpers._runtimeAssemblies*/;
                    r2 = r2[r0]/*V_1.1 = $t6.get_Item(V_0.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $rv = $$[97](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null,$f[2],r2])/*$rv = System.Reflection.ReflectionHelpers::GetClassFromAssembly(fullName, V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r2 = $rv/*V_2.1 = $rv*/;
                    if((r2 == null))
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null,r2])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r1 = $rv/*V_3.2 = $rv*/;
                    return r1/*V_3.3*/;
                }
                case 10:
                {
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r3,r1)
// 97: System.Runtime.Class System.Reflection.ReflectionHelpers::GetClassFromAssembly(System.String,System.Runtime.Assembly)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $$[353].call($f[3])/*$t2 = assembly.get_Classes()*/;
                    $rv = r2.length/*$rv = $t2.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = $rv/*$t3 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r1 = null/*V_2.1 = null*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r2 = $$[353].call($f[3])/*$t8 = assembly.get_Classes()*/;
                    r3 = r2[r0]/*V_1.1 = $t8.get_Item(V_0.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = $$[205].call(r3)/*$t11 = V_1.1.get_FullName()*/;
                    r2 = (r2 == $f[2])/*$t13 = System.String::op_Equality($t11, fullName)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    if((!r2))
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    r1 = r3/*V_2.2 = V_1.1*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return r1/*V_2.3*/;
                }
                case 10:
                {
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 98: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::GetTypeFromClass(System.Runtime.Class)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = _[56]/*$t0 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r1.$[8].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,$f[2]])/*$rv = $t0.ContainsKey(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*V_3.1 = $rv*/;
                    if(r1)
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r1 = $$[192].call($f[2])/*$t4 = klass.get_DeclaringClass()*/;
                    if((r1 == null))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 6;
                    r1 = $$[192].call($f[2])/*$t9 = klass.get_DeclaringClass()*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,r1])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass($t9)*/;
                    continue $ctrl;
                }
                case 5:
                {
                    r0 = null/*V_0.2 = null*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*V_0.1 = $rv*/;
                    r2 = {$:_[19],0:0,1:null,2:null,3:null,4:null,5:null,6:null,7:null}/*$t12 = new System.Void System.Reflection.RuntimeType::.ctor(System.Runtime.Class,System.Reflection.RuntimeType)(klass, V_0.3)*/;
                    $$[69].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,$f[2],r0])/*$t12..ctor(klass, V_0.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = _[56]/*$t13 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    r1.$[6].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,$f[2],r2])/*$t13.set_Item(klass, $t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = _[56]/*$t15 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r1.$[5].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,$f[2]])/*$rv = $t15.get_Item(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r1 = $rv/*V_2.1 = $rv*/;
                    return r1/*V_2.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 99: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::BrokenGetTypeFromClass(System.Runtime.Class)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[56]/*$t0 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r0.$[8].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[2]])/*$rv = $t0.ContainsKey(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_2.1 = $rv*/;
                    if(r0)
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r0 = $$[192].call($f[2])/*$t5 = klass.get_DeclaringClass()*/;
                    if(r0)
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r1 = null/*$ts0 = null*/;
                    r0 = r2/*$ts1 = $t3*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $$[192].call($f[2])/*$t14 = klass.get_DeclaringClass()*/;
                    r1 = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$ts0 = System.Reflection.ReflectionHelpers::GetTypeFromClass($t14)*/;
                    r0 = r3/*$ts1 = $t6*/;
                    $f[2]/*klass*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = {$:_[19],0:0,1:null,2:null,3:null,4:null,5:null,6:null,7:null}/*$t7 = new System.Void System.Reflection.RuntimeType::.ctor(System.Runtime.Class,System.Reflection.RuntimeType)($ts0, $ts1)*/;
                    $$[69].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1,r0])/*$t7..ctor($ts0, $ts1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = _[56]/*$t8 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    r0.$[6].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[2],r2])/*$t8.set_Item(klass, $t7)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = _[56]/*$t10 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r0.$[5].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[2]])/*$rv = $t10.get_Item(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0)
// 100: System.Reflection.RuntimeType System.Reflection.ReflectionHelpers::BrokenGetType(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $f[2].$/*$t3 = obj.get_VTable()*/;
                    $rv = r1.c/*$rv = $t3.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*V_1.1 = $rv*/;
                    r1 = _[56]/*$t5 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r1.$[8].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r2])/*$rv = $t5.ContainsKey(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = $rv/*$t6 = $rv*/;
                    if((!r1))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 8;
                    r1 = _[56]/*$t10 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    $rv = r1.$[5].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r2])/*$rv = $t10.get_Item(V_1.1)*/;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r3 = {$:_[19],0:0,1:null,2:null,3:null,4:null,5:null,6:null,7:null}/*$t13 = new System.Void System.Reflection.RuntimeType::.ctor(System.Runtime.Class,System.Reflection.RuntimeType)(V_1.1, null)*/;
                    $$[69].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r2,null])/*$t13..ctor(V_1.1, null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = _[56]/*$t14 = System.Reflection.ReflectionHelpers._runtimeTypeCache*/;
                    r1.$[6].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0],[null,null,r2,r3])/*$t14.set_Item(V_1.1, $t13)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = r3/*V_3.2 = $t13*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = $rv/*V_3.1 = $rv*/;
                    return r0/*V_3.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 101: System.Object System.Reflection.ReflectionHelpers::TrampolineInvokeMethod(System.Runtime.Method,System.Object,System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $$[235].call($f[2])/*$t1 = method.get_Function()*/;
                    r0 = (r0 != null)/*$t3 = System.NativeFunction::op_Inequality($t1, null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!r0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 13;
                    r0 = $$[235].call($f[2])/*$t8 = method.get_Function()*/;
                    return r0.call($f[3],0,$end,null,$pc,[null,null].concat($f[4]))/*System.Reflection.ReflectionHelpers::TempHackGenerateCodeForTrampolineInvokeMethod($t8, self, args)*/;
                    continue $ctrl;
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $$[228].call($f[2])/*$t18 = method.get_DeclaringClass()*/;
                    $rv = $$[199].call(r0)/*$rv = $t18.get_IsInterface()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*$t19 = $rv*/;
                    if((!r0))
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    r0 = $$[320].call($f[2])/*$t24 = method.get_VTableSlot()*/;
                    if((!(r0 == -1)))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = {$:_[167],0:null,1:null,2:null,3:null}/*$t32 = new System.Void System.ExecutionEngineException::.ctor(System.String)("No vtable slot!")*/;
                    $$[327].call(r0,"No vtable slot!")/*$t32..ctor("No vtable slot!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    throw r0/*$t32*/;
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $$[228].call($f[2])/*$t35 = method.get_DeclaringClass()*/;
                    $rv = $$[197].call(r0)/*$rv = $t35.get_VTableDataPointer()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t36 = $rv*/;
                    r0 = $$[320].call($f[2])/*$t38 = method.get_VTableSlot()*/;
                    return $f[3].$.i[r1][r0].call($f[3],0,$end,null,$pco,[null,null].concat($f[4]))/*System.Reflection.ReflectionHelpers::TempHackGenerateCodeForTrampolineInvokeInterfaceMethod(self, $t36, $t38, args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t42 = new System.Void System.NotImplementedException::.ctor(System.String)("Method invocation through reflection is not yet implemented.  Though, the temp property hack is in place!")*/;
                    $$[260].call(r0,"Method invocation through reflection is not yet implemented.  Though, the temp property hack is in place!")/*$t42..ctor("Method invocation through reflection is not yet implemented.  Though, the temp property hack is in place!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    throw r0/*$t42*/;
                }
                case 13:
                {
                    $ep = 14;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Trampoline for method "])/*$rv = System.String::SafeToString("Trampoline for method ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r2 = $rv/*$t44 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(method)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r1 = $rv/*$t46 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," failed"])/*$rv = System.String::SafeToString(" failed")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r0 = $rv/*$t48 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_2.1 = System.String::Concat($t44, $t46, $t48)*/;
                    r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t16 = new System.Void System.ExecutionEngineException::.ctor(System.String)(V_2.1)*/;
                    $$[327].call(r1,r0)/*$t16..ctor(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    throw r1/*$t16*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 102: System.Object System.Reflection.ReflectionHelpers::TrampolineInvokeConstructor(System.Runtime.Constructor,System.Object,System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $$[235].call($f[2])/*$t1 = constructor.get_Function()*/;
                    return r0.call($f[3],0,$end,null,$pc,[null,null].concat($f[4]))/*System.Reflection.ReflectionHelpers::TempHackGenerateCodeForTrampolineInvokeMethod($t1, self, args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Trampoline for constructor "])/*$rv = System.String::SafeToString("Trampoline for constructor ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t11 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(constructor)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t13 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," failed"])/*$rv = System.String::SafeToString(" failed")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t15 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_1.1 = System.String::Concat($t11, $t13, $t15)*/;
                    r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.ExecutionEngineException::.ctor(System.String)(V_1.1)*/;
                    $$[327].call(r1,r0)/*$t9..ctor(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    throw r1/*$t9*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 103: System.Object System.Reflection.ReflectionHelpers::CreateInstance(System.Reflection.RuntimeType)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[11].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = type.get_TypeHandle()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    r0 = r0.c/*$t3 = $t2.get_Class()*/;
                    $rv = $$[104](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::CreateInstance($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 104: System.Object System.Reflection.ReflectionHelpers::CreateInstance(System.Runtime.Class)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[105](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.Reflection.ReflectionHelpers::GetDefaultConstructor(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*V_0.1 = $rv*/;
                    if((!(r1 == null)))
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Creating object through reflection: ",r1])/*$rv = System.String::Concat("Creating object through reflection: ", V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t15 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t15)*/;
                    $rv = $$[228].call(r1)/*$rv = V_0.1.get_DeclaringClass()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t17 = $rv*/;
                    r0 = $$[195].call(r0)/*$t18 = $t17.get_VTable()*/;
                    r2 = {$:r0}/*V_3.1 = System.Reflection.ReflectionHelpers::GenerateCodeForNewObject($t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $$[422](_[0],0)/*$t22 = new System.Object[0]*/;
                    $$[102](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1,r2,r0])/*System.Reflection.ReflectionHelpers::TrampolineInvokeConstructor(V_0.1, V_3.1, $t22)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return r2/*V_3.1*/;
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"No default constructor found in type "])/*$rv = System.String::SafeToString("No default constructor found in type ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t25 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(klass)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t27 = $rv*/;
                    r0 = (r0 + r1)/*V_5.1 = System.String::Concat($t25, $t27)*/;
                    r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.ExecutionEngineException::.ctor(System.String)(V_5.1)*/;
                    $$[327].call(r1,r0)/*$t11..ctor(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    throw r1/*$t11*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1)
// 105: System.Runtime.Constructor System.Reflection.ReflectionHelpers::GetDefaultConstructor(System.Runtime.Class)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r4 = $$[207].call($f[2])/*V_0.1 = klass.get_Constructors()*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r2 = r4.length/*$t3 = V_0.1.get_Length()*/;
                    if((r0 < r2))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r1 = null/*V_3.1 = null*/;
                    $ep = 7;
                    continue $ctrl;
                }
                case 4:
                {
                    $ep = 5;
                    r3 = r4[r0]/*V_2.1 = V_0.1.get_Item(V_1.3)*/;
                    r2 = r3[0]/*V_5.1 = V_2.1._parameters*/;
                    $rv = r2.length/*$rv = V_5.1.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r2 = $rv/*$t10 = $rv*/;
                    if((!(r2 == 0)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    r1 = r3/*V_3.2 = V_2.1*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return r1/*V_3.3*/;
                }
                case 8:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 106: System.Object System.Reflection.ReflectionHelpers::CreateInstance(System.Runtime.Constructor)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Creating object through reflection: "])/*$rv = System.String::SafeToString("Creating object through reflection: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t17 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = System.String::SafeToString(constructor)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t19 = $rv*/;
                    r0 = (r1 + r0)/*V_3.1 = System.String::Concat($t17, $t19)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $$[228].call($f[2])/*$t4 = constructor.get_DeclaringClass()*/;
                    $rv = $$[195].call(r0)/*$rv = $t4.get_VTable()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t5 = $rv*/;
                    r1 = {$:r0}/*V_0.1 = System.Reflection.ReflectionHelpers::GenerateCodeForNewObject($t5)*/;
                    r0 = $$[422](_[0],0)/*$t9 = new System.Object[0]*/;
                    $$[102](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2],r1,r0])/*System.Reflection.ReflectionHelpers::TrampolineInvokeConstructor(constructor, V_0.1, $t9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return r1/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r3,r1)
// 107: System.Boolean System.Reflection.ReflectionHelpers::IsDefined(System.Runtime.ICustomAttributeProvider,System.Type,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!$f[4]))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = {$:_[123],0:null,1:null,2:null,3:null}/*$t5 = new System.Void System.NotImplementedException::.ctor(System.String)("Checking for inherited attributes is not yet implemented")*/;
                    $$[260].call(r2,"Checking for inherited attributes is not yet implemented")/*$t5..ctor("Checking for inherited attributes is not yet implemented")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r2/*$t5*/;
                }
                case 4:
                {
                    if((!($f[3] == null)))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = {$:_[133],0:null,1:null,2:null,3:null}/*$t14 = new System.Void System.ArgumentException::.ctor(System.String)("attributeType cannot be null")*/;
                    $$[286].call(r2,"attributeType cannot be null")/*$t14..ctor("attributeType cannot be null")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    throw r2/*$t14*/;
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $f[3].$[11].call($f[3],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r1],[null,null])/*$rv = attributeType.get_TypeHandle()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r3 = r2.c/*V_1.1 = V_0.1.get_Class()*/;
                    r0 = 0/*V_2.1 = 0*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $f[2].$.i[98][0].call($f[2])/*$t21 = attributeProvider.get_CustomAttributes()*/;
                    $rv = r2.length/*$rv = $t21.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r2 = $rv/*$t22 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    r1 = 0/*V_4.1 = 0*/;
                    $ep = 16;
                    continue $ctrl;
                }
                case 12:
                {
                    $ep = 13;
                    r2 = $f[2].$.i[98][0].call($f[2])/*$t27 = attributeProvider.get_CustomAttributes()*/;
                    r2 = r2[r0]/*V_3.1 = $t27.get_Item(V_2.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r2 = $$[290].call(r2)/*$t30 = V_3.1.get_Constructor()*/;
                    $rv = $$[228].call(r2)/*$rv = $t30.get_DeclaringClass()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    r2 = $rv/*$t31 = $rv*/;
                    if((!(r2 == r3)))
                    {
                        $ep = 17;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 15;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 15:
                {
                    r1 = 1/*V_4.2 = 1*/;
                    $ep = 16;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    return r1/*V_4.3*/;
                }
                case 17:
                {
                    r0 = (r0 + 1)/*V_2.2 = V_2.3 Add 1*/;
                    $ep = 9;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r3,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 108: System.String System.NativeFunction::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.toString()/*$rv = this.NativeToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*self*/)
 // 109: System.NativeFunction System.NativeFunction::Bind(System.var)
{
    var r0,r1;
    r1 = this/*V_0.1 = System.NativeFunction::GenerateCodeForThis()*/;
    r0 = arguments/*$t1 = System.NativeFunction::GetArguments()*/;
    if((!(r0.length == 1)))
    {
        r0 = new Error("Not yet implemented")/*$t13 = new System.Void System.NativeError::.ctor(System.String)("Not yet implemented")*/;
        throw r0/*$t13*/;

    }
    else
    {
        r0 = function(){ return r1.apply(a0, arguments); }/*V_1.1 = System.NativeFunction::GenerateCodeForBoundNativeFunctionSimple(V_0.1, self)*/;
        return r0/*V_1.1*/;

    }

},
function(a0/*d*/)
 // 110: System.NativeFunction System.NativeFunction::op_Explicit(System.Delegate)
{
    var r0;
    r0 = typeof(a0)/*$t2 = d.TypeOf()*/;
    r0 = (r0 == "function")/*$t4 = System.String::op_Equality($t2, "function")*/;
    if((!r0))
    {
        r0 = {$:_[145],0:null,1:null,2:null,3:null}/*$t10 = new System.Void System.InvalidCastException::.ctor(System.String)("Cannot cast non native delegate to a native function")*/;
        $$[307].call(r0,"Cannot cast non native delegate to a native function")/*$t10..ctor("Cannot cast non native delegate to a native function")*/;
        throw r0/*$t10*/;

    }
    else
    {
        return a0/*d*/;

    }

},
function($ep,$end,$rv,$pc,$f,r0)
// 111: System.Void System.NativeArray`1::RemoveAt(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 112: System.Void System.Array::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 113: System.Void System.Reflection.PropertyInfo::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[50].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 114: System.Type System.Reflection.RuntimePropertyInfo::get_DeclaringType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._declaringType*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 115: System.Reflection.MethodInfo System.Reflection.RuntimePropertyInfo::get_GetMethod()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._getMethod*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 116: System.Reflection.MethodInfo System.Reflection.RuntimePropertyInfo::get_SetMethod()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*V_0.1 = this._setMethod*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 117: System.String System.Reflection.RuntimePropertyInfo::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._property*/;
                    $rv = $$[277].call(r0)/*$rv = $t1.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 118: System.Boolean System.Reflection.RuntimePropertyInfo::IsDefined(System.Type,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._property*/;
                    $rv = $$[107](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::IsDefined($t1, attributeType, inherit)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 119: System.Void System.Reflection.RuntimePropertyInfo::.ctor(System.Runtime.Property,System.Reflection.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Reflection.RuntimeMethodInfo)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[113].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._property = property*/;
                    this[1] = $f[3]/*this._declaringType = declaringType*/;
                    this[2] = $f[4]/*this._getMethod = getMethod*/;
                    this[3] = $f[5]/*this._setMethod = setMethod*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 120: System.Object System.Activator::CreateInstance(System.Type)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($$[411]($f[2],_[19]) == null)))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[411]($f[2],_[19]).$[11].call($$[411]($f[2],_[19]),0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = type is System.Reflection.RuntimeType.get_TypeHandle()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t13 = $rv*/;
                    r0 = r0.c/*$t14 = $t13.get_Class()*/;
                    $rv = $$[104](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::CreateInstance($t14)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_3.1 = $rv*/;
                    return r0/*V_3.1*/;
                }
                case 5:
                {
                    $ep = 6;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Invalid type: "])/*$rv = System.String::SafeToString("Invalid type: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = $rv/*$t16 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = System.String::SafeToString(type)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t18 = $rv*/;
                    r0 = (r1 + r0)/*V_4.1 = System.String::Concat($t16, $t18)*/;
                    r1 = {$:_[133],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.ArgumentException::.ctor(System.String)(V_4.1)*/;
                    $$[286].call(r1,r0)/*$t11..ctor(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    throw r1/*$t11*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 120: T System.Activator::CreateInstance(System.Type)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[120](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Activator::CreateInstance(type)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t1 = $rv*/;
                    return r0.valueOf()/*XaeiO.Compiler.CodeModel.UnboxExpression*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 122: System.Void System.Reflection.MethodBase::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[50].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 123: System.Void System.Threading.Semaphore::Acquire()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[124].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,1])/*this.Acquire(1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 124: System.Void System.Threading.Semaphore::Acquire(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] < 0)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.ArgumentException::.ctor(System.String)("Cannot acquire a negative number of resources")*/;
                    $$[286].call(r0,"Cannot acquire a negative number of resources")/*$t8..ctor("Cannot acquire a negative number of resources")*/;
                }
                case 3:
                {
                    throw r0/*$t8*/;
                }
                case 4:
                {
                    r0 = this[0]/*$t10 = this._resources*/;
                    if((!((r0 - $f[2]) < 0)))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    this[0] = 0/*this._resources = 0*/;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                }
                case 6:
                {
                    $ep = 7;
                    r3 = $rv/*V_1.1 = $rv*/;
                    r1 = this[2]/*$t23 = this._waitingTasks*/;
                    r2 = {$:_[75],0:null,1:0}/*$t25 = new System.Void System.Threading.Semaphore/WaitingTask::.ctor(XaeiOS.TaskHandle,System.Int32)(V_1.1, Negate $t10 Subtract resources)*/;
                    $$[128].call(r2,0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r3,(-(r0 - $f[2]))])/*$t25..ctor(V_1.1, Negate $t10 Subtract resources)*/;
                }
                case 7:
                {
                    $ep = 8;
                    r1.push(r2)/*$t23.Push($t25)*/;
                    $$[595](r3)/*XaeiOS.SystemCalls::BlockTask(V_1.1)*/;
                }
                case 8:
                {
                    $ep = 10;
                    $$[596](0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    continue $ctrl;
                }
                case 9:
                {
                    this[0] = (r0 - $f[2])/*this._resources = $t10 Subtract resources*/;
                    $ep = 10;
                }
                case 10:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 125: System.Void System.Threading.Semaphore::Release()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[126].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,1])/*this.Release(1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 126: System.Void System.Threading.Semaphore::Release(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] < 0)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.ArgumentException::.ctor(System.String)("Cannot release a negative number of resources")*/;
                    $$[286].call(r0,"Cannot release a negative number of resources")/*$t8..ctor("Cannot release a negative number of resources")*/;
                }
                case 3:
                {
                    throw r0/*$t8*/;
                }
                case 4:
                {
                    r1 = this[0]/*$t11 = this._resources*/;
                    r0 = this[1]/*$t14 = this._totalResources*/;
                    if((!(($f[2] + r1) > r0)))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t21 = new System.Void System.ArgumentException::.ctor(System.String)("Cannot release more resources this semaphore holds")*/;
                    $$[286].call(r0,"Cannot release more resources this semaphore holds")/*$t21..ctor("Cannot release more resources this semaphore holds")*/;
                }
                case 6:
                {
                    throw r0/*$t21*/;
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[2]/*$t23 = this._waitingTasks*/;
                    $rv = r0.length/*$rv = $t23.get_Length()*/;
                }
                case 8:
                {
                    r0 = $rv/*$t24 = $rv*/;
                    if((!(r0 > 0)))
                    {
                        $ep = 16;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = this[2]/*$t32 = this._waitingTasks*/;
                    r1 = r0[0]/*V_0.1 = $t32.get_Item(0)*/;
                }
                case 10:
                {
                    r0 = r1[1]/*$t36 = V_0.1.Resources*/;
                    if((r0 > $f[2]))
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = this[2]/*$t41 = this._waitingTasks*/;
                    r0.shift()/*$t41.Shift()*/;
                }
                case 12:
                {
                    $ep = 13;
                    r0 = r1[1]/*$t44 = V_0.1.Resources*/;
                    $f[2] = ($f[2] - r0)/*resources = resources Subtract $t44*/;
                    r0 = r1[0]/*$t46 = V_0.1.Task*/;
                    $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($t46)*/;
                }
                case 13:
                {
                    $ep = 14;
                    r0 = this[2]/*$t48 = this._waitingTasks*/;
                    $rv = r0.length/*$rv = $t48.get_Length()*/;
                }
                case 14:
                {
                    r0 = $rv/*$t49 = $rv*/;
                    if((r0 > 0))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 17;
                        continue $ctrl;

                    }
                }
                case 15:
                {
                    r0 = r1[1]/*$t54 = V_0.1.Resources*/;
                    r1[1] = (r0 - $f[2])/*V_0.1.Resources = $t54 Subtract resources*/;
                    $ep = 17;
                    continue $ctrl;
                }
                case 16:
                {
                    r0 = this[0]/*$t59 = this._resources*/;
                    this[0] = (r0 + $f[2])/*this._resources = $t59 Add resources*/;
                    $ep = 17;
                }
                case 17:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 127: System.Void System.Threading.Semaphore::.ctor(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    if((!($f[2] < 1)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.ArgumentException::.ctor(System.String)("Must have at least 1 resource for a semaphore")*/;
                    $$[286].call(r0,"Must have at least 1 resource for a semaphore")/*$t9..ctor("Must have at least 1 resource for a semaphore")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t9*/;
                }
                case 4:
                {
                    this[0] = $f[2]/*this._resources = resources*/;
                    this[1] = $f[2]/*this._totalResources = resources*/;
                    r0 = new Array()/*$t15 = new System.Void System.NativeArray`1<System.Threading.Semaphore/WaitingTask>::.ctor()()*/;
                    this[2] = r0/*this._waitingTasks = $t15*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 128: System.Void System.Threading.Semaphore/WaitingTask::.ctor(XaeiOS.TaskHandle,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this.Task = task*/;
                    this[1] = $f[3]/*this.Resources = resources*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 129: System.Void System.Reflection.ConstructorInfo::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[122].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 130: System.Type System.Reflection.RuntimeConstructorInfo::get_DeclaringType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._declaringType*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 131: System.String System.Reflection.RuntimeConstructorInfo::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._constructor*/;
                    $rv = $$[232].call(r0)/*$rv = $t1.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 132: System.Object System.Reflection.RuntimeConstructorInfo::Invoke(System.Object,System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[5].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = this.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    r0 = ("Invoking method through reflection: " + r0)/*$t3 = System.String::Concat("Invoking method through reflection: ", $t2)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[0]/*$t5 = this._constructor*/;
                    $rv = $$[102](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::TrampolineInvokeConstructor($t5, self, args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 133: System.Boolean System.Reflection.RuntimeConstructorInfo::IsDefined(System.Type,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._constructor*/;
                    $rv = $$[107](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::IsDefined($t1, attributeType, inherit)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 134: System.Void System.Reflection.RuntimeConstructorInfo::.ctor(System.Runtime.Constructor,System.Reflection.RuntimeType)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[129].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._constructor = constructor*/;
                    this[1] = $f[3]/*this._declaringType = declaringType*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 135: XaeiOS.TaskHandle System.Threading.Thread::get_Task()
{
    var r0;
    r0 = this[10]/*V_0.1 = this.<Task>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 136: System.Void System.Threading.Thread::set_Task(XaeiOS.TaskHandle)
{
    this[10] = a0/*this.<Task>k__BackingField = value*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 137: XaeiOS.SIP System.Threading.Thread::get_SIP()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._sip*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 138: System.Threading.ThreadPriority System.Threading.Thread::get_Priority()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*V_0.1 = this._priority*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 139: System.Exception System.Threading.Thread::get_UnhandledException()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[7]/*V_0.1 = this._unhandledException*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 140: System.Threading.ThreadCallback System.Threading.Thread::get_Callback()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[11]/*V_0.1 = this.<Callback>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 141: System.Void System.Threading.Thread::set_Callback(System.Threading.ThreadCallback)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[11] = $f[2]/*this.<Callback>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 142: System.String System.Threading.Thread::get_Name()
{
    var r0;
    r0 = this[8]/*V_0.1 = this._name*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 143: System.Void System.Threading.Thread::set_Name(System.String)
{
    this[8] = a0/*this._name = value*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 144: System.Boolean System.Threading.Thread::get_IsBackground()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[9]/*V_0.1 = this._isBackground*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 145: System.Void System.Threading.Thread::set_IsBackground(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[9] = $f[2]/*this._isBackground = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*priority*/,a1/*sip*/,a2/*kernelTask*/,a3/*name*/)
 // 146: System.Threading.Thread System.Threading.Thread::CreateSystemThread(System.Threading.ThreadPriority,XaeiOS.SIP,XaeiOS.TaskHandle,System.String)
{
    var r0;
    r0 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t0 = new System.Void System.Threading.Thread::.ctor()()*/;
    $$[163].call(r0)/*$t0..ctor()*/;
    $$[136].call(r0,a2)/*$t0.set_Task(kernelTask)*/;
    r0[3] = a0/*$t0._priority = priority*/;
    r0[0] = a1/*$t0._sip = sip*/;
    r0[8] = a3/*$t0._name = name*/;
    return r0/*$t0*/;

},
function()
 // 147: System.Void System.Threading.Thread::Start()
{
    var r0,r1,r2,r3;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = this[1]/*$t1 = this._threadStart*/;
                if((!(r0 == null)))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.NotSupportedException::.ctor(System.String)("The thread start delegate was parametized.  Cannot start this thread without a parameter.")*/;
                $$[305].call(r0,"The thread start delegate was parametized.  Cannot start this thread without a parameter.")/*$t9..ctor("The thread start delegate was parametized.  Cannot start this thread without a parameter.")*/;
                throw r0/*$t9*/;
            }
            case 3:
            {
                r0 = this[8]/*$t11 = this._name*/;
                if((!(r0 == null)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                r0 = _[82]/*$tf21 = System.Threading.Thread._idCounter*/;
                _[82] = (r0 + 1)/*System.Threading.Thread._idCounter = $tf21 Add 1*/;
                r0 = $$[251](0,Number.POSITIVE_INFINITY,null,[],[null,null,"[anonymous ",new Number(r0),"]"])/*$t26 = System.String::Concat("[anonymous ", box(System.Int32,$tf21), "]")*/;
                this[8] = r0/*this._name = $t26*/;
                $ep = 5;
            }
            case 5:
            {
                r0 = this[0]/*$t28 = this._sip*/;
                if((!(r0 == null)))
                {
                    $ep = 7;
                    continue $ctrl;

                }
                else
                {
                    $ep = 6;

                }
            }
            case 6:
            {
                r0 = $$[517]()/*$t36 = XaeiOS.SIP::get_CurrentSIP()*/;
                this[0] = r0/*this._sip = $t36*/;
                $ep = 7;
            }
            case 7:
            {
                r0 = this[1]/*$t40 = this._threadStart*/;
                r3 = $$[109].call($$[24],r0)/*$t42 = new System.Void XaeiOS.TaskFunction::.ctor(System.Object,System.IntPtr)($t40, System.Threading.ThreadStart::Invoke)*/;
                /*$t42..ctor($t40, System.Threading.ThreadStart::Invoke)*/r2 = $$[109].call($$[152],this)/*$t45 = new System.Void XaeiOS.TaskCallback::.ctor(System.Object,System.IntPtr)(this, System.Threading.Thread::InternalCallback)*/;
                /*$t45..ctor(this, System.Threading.Thread::InternalCallback)*/r1 = this[3]/*$t47 = this._priority*/;
                r0 = this[8]/*$t49 = this._name*/;
                r0 = $$[600](null,r3,r2,r1,r0)/*$t50 = XaeiOS.SystemCalls::CreateTask(null, $t42, $t45, $t47, $t49)*/;
                $$[136].call(this,r0)/*this.set_Task($t50)*/;
                r1 = $$[422](_[0],6)/*V_1.1 = new System.Object[6]*/;
                r1[0] = "Thread "/*V_1.1[0] = "Thread "*/;
                r0 = this[8]/*$t57 = this._name*/;
                r1[1] = r0/*V_1.1[1] = $t57*/;
                r1[2] = " is a child of "/*V_1.1[2] = " is a child of "*/;
                r0 = this[0]/*$t62 = this._sip*/;
                r1[3] = r0/*V_1.1[3] = $t62*/;
                r1[4] = ".  Task: "/*V_1.1[4] = ".  Task: "*/;
                r0 = $$[135].call(this)/*$t67 = this.get_Task()*/;
                r0 = r0.$[0].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t68 = $t67.ToString()*/;
                r1[5] = r0/*V_1.1[5] = $t68*/;
                r0 = $$[253](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*$t69 = System.String::Concat(V_1.1)*/;
                LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t69)*/;
                $$[213](0,Number.POSITIVE_INFINITY,null,[],[null,null,this])/*System.Threading.ThreadManager::RegisterThread(this)*/;
                this[4] = 1/*this._running = 1*/;
                r0 = $$[135].call(this)/*$t74 = this.get_Task()*/;
                $$[593](r0)/*XaeiOS.SystemCalls::StartTask($t74)*/;
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 148: System.Void System.Threading.Thread::Start(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*$t1 = this._parametizedThreadStart*/;
                    if((!(r0 == null)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.NotSupportedException::.ctor(System.String)("The thread start delegate was not parametized.  Cannot start this thread with a parameter.")*/;
                    $$[305].call(r0,"The thread start delegate was not parametized.  Cannot start this thread with a parameter.")/*$t9..ctor("The thread start delegate was not parametized.  Cannot start this thread with a parameter.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t9*/;
                }
                case 4:
                {
                    r0 = this[8]/*$t11 = this._name*/;
                    if((!(r0 == null)))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    this[8] = "Thread: anonymous"/*this._name = "Thread: anonymous"*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = this[0]/*$t21 = this._sip*/;
                    if((!(r0 == null)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 7:
                {
                    r0 = $$[517]()/*$t29 = XaeiOS.SIP::get_CurrentSIP()*/;
                    this[0] = r0/*this._sip = $t29*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    this[6] = $f[2]/*this._parameter = parameter*/;
                    r3 = $$[109].call($$[151],this)/*$t36 = new System.Void XaeiOS.TaskFunction::.ctor(System.Object,System.IntPtr)(this, System.Threading.Thread::ParametizedTaskFunction)*/;
                    /*$t36..ctor(this, System.Threading.Thread::ParametizedTaskFunction)*/if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $$[109].call($$[152],this)/*$t39 = new System.Void XaeiOS.TaskCallback::.ctor(System.Object,System.IntPtr)(this, System.Threading.Thread::InternalCallback)*/;
                    /*$t39..ctor(this, System.Threading.Thread::InternalCallback)*/if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = this[3]/*$t41 = this._priority*/;
                    r0 = this[8]/*$t43 = this._name*/;
                    $rv = $$[600](null,r3,r2,r1,r0)/*$rv = XaeiOS.SystemCalls::CreateTask(null, $t36, $t39, $t41, $t43)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = $rv/*$t44 = $rv*/;
                    $$[136].call(this,r0)/*this.set_Task($t44)*/;
                    $$[213](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*System.Threading.ThreadManager::RegisterThread(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    this[4] = 1/*this._running = 1*/;
                    $rv = $$[135].call(this)/*$rv = this.get_Task()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    r0 = $rv/*$t49 = $rv*/;
                    $$[593](r0)/*XaeiOS.SystemCalls::StartTask($t49)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 149: System.Void System.Threading.Thread::Abort()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[150].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,null])/*this.Abort(null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 150: System.Void System.Threading.Thread::Abort(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[4]/*V_0.1 = this._running*/;
                    if(r0)
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.NotSupportedException::.ctor(System.String)("Cannot abort a thread that is not running.")*/;
                    $$[305].call(r0,"Cannot abort a thread that is not running.")/*$t3..ctor("Cannot abort a thread that is not running.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t3*/;
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $$[135].call(this)/*$t6 = this.get_Task()*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Aborting task: "])/*$rv = System.String::SafeToString("Aborting task: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = $rv/*$t15 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::SafeToString($t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t17 = $rv*/;
                    r0 = (r1 + r0)/*V_1.1 = System.String::Concat($t15, $t17)*/;
                    LogWrite("TRACE", r0)/*System.Diagnostics.Logging::Trace(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = $$[135].call(this)/*$t9 = this.get_Task()*/;
                    r0 = {$:_[260],0:null,1:null,2:null,3:null,4:null}/*$t11 = new System.Void System.Threading.ThreadAbortException::.ctor(System.Object)(exceptionState)*/;
                    $$[448].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$t11..ctor(exceptionState)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[602](r1,r0)/*XaeiOS.SystemCalls::InjectException($t9, $t11)*/;
                    $rv = $$[135].call(this)/*$rv = this.get_Task()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r0 = $rv/*$t13 = $rv*/;
                    $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($t13)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 151: System.Void System.Threading.Thread::ParametizedTaskFunction()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[2]/*$t1 = this._parametizedThreadStart*/;
                    r1 = this[6]/*$t3 = this._parameter*/;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,[r1]])/*$t1.Invoke($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*task*/,a1/*taskName*/,a2/*returnValue*/,a3/*exitStatus*/)
 // 152: System.Void System.Threading.Thread::InternalCallback(XaeiOS.TaskHandle,System.String,System.var,XaeiOS.TaskExitStatus)
{
    var r0,r1,r2;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                this[4] = 0/*this._running = 0*/;
                $$[214](0,Number.POSITIVE_INFINITY,null,[],[null,null,this])/*System.Threading.ThreadManager::UnregisterThread(this)*/;
                r0 = $$[140].call(this,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t4 = this.get_Callback()*/;
                if((r0 == null))
                {
                    $ep = 7;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                if((!(a3 == 1)))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                this[7] = $$[411](a2,_[7])/*this._unhandledException = returnValue is System.Exception*/;
                $ep = 6;
                continue $ctrl;
            }
            case 4:
            {
                if((!(a3 == 3)))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                r0 = a2.toString()/*$t39 = returnValue.NativeToString()*/;
                r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t40 = new System.Void System.ExecutionEngineException::.ctor(System.String)($t39)*/;
                $$[327].call(r1,r0)/*$t40..ctor($t39)*/;
                this[7] = r1/*this._unhandledException = $t40*/;
                $ep = 6;
            }
            case 6:
            {
                $ep = 7;
                r0 = $$[140].call(this,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t20 = this.get_Callback()*/;
                r1 = {$:_[84],0:null,1:null,2:null,3:null}/*$t22 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t20, System.Threading.ThreadCallback::Invoke)*/;
                $$[29](r1,r0,$$[24])/*$t22..ctor($t20, System.Threading.ThreadCallback::Invoke)*/;
                r0 = this[0]/*$t25 = this._sip*/;
                r2 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t26 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP)($t22, 1, $t25)*/;
                $$[166].call(r2,r1,1,r0)/*$t26..ctor($t22, 1, $t25)*/;
                r0 = $$[250](0,Number.POSITIVE_INFINITY,null,[],[null,null,"Thread callback: ",this])/*$t29 = System.String::Concat("Thread callback: ", this)*/;
                $$[143].call(r2,r0)/*$t26.set_Name($t29)*/;
                $$[147].call(r2)/*$t26.Start()*/;
            }
            case 7:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 153: System.Void System.Threading.Thread::InternalSleep(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[5]/*$t1 = this._unblockTimeoutId*/;
                    clearTimeout(r0)/*System.Global::ClearTimeout($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $$[135].call(this)/*$t3 = this.get_Task()*/;
                    $$[595](r0)/*XaeiOS.SystemCalls::BlockTask($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $$[109].call($$[156],this)/*$t7 = new System.Void System.NativeVoidDelegate::.ctor(System.Object,System.IntPtr)(this, System.Threading.Thread::WakeUp)*/;
                    /*$t7..ctor(this, System.Threading.Thread::WakeUp)*/if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $$[110](r0)/*$t8 = System.NativeFunction::op_Explicit($t7)*/;
                    r0 = setTimeout(r0, $f[2])/*$t11 = System.Global::SetTimeout($t8, (System.Int64)milliseconds)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    this[5] = r0/*this._unblockTimeoutId = $t11*/;
                    $$[596](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 154: System.Void System.Threading.Thread::InternalSleep()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[5]/*$t1 = this._unblockTimeoutId*/;
                    clearTimeout(r0)/*System.Global::ClearTimeout($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $$[135].call(this)/*$t3 = this.get_Task()*/;
                    $$[595](r0)/*XaeiOS.SystemCalls::BlockTask($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[596](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 155: System.Void System.Threading.Thread::HandleAbortException()
{
    var r0;
    r0 = this[5]/*$t1 = this._unblockTimeoutId*/;
    clearTimeout(r0)/*System.Global::ClearTimeout($t1)*/;
    return;

},
function()
 // 156: System.Void System.Threading.Thread::WakeUp()
{
    var r0;
    r0 = this[5]/*$t1 = this._unblockTimeoutId*/;
    clearTimeout(r0)/*System.Global::ClearTimeout($t1)*/;
    r0 = $$[135].call(this)/*$t3 = this.get_Task()*/;
    $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($t3)*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 157: System.String System.Threading.Thread::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $$[135].call(this)/*$t1 = this.get_Task()*/;
                    r1 = this[8]/*$t4 = this._name*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$rv = System.String::SafeToString($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3 = $rv/*$t7 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,": "])/*$rv = System.String::SafeToString(": ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t9 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::SafeToString($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t11 = $rv*/;
                    r0 = (r3 + r2 + r0)/*V_1.1 = System.String::Concat($t7, $t9, $t11)*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 158: System.Threading.Thread System.Threading.Thread::get_CurrentThread()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[212](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = System.Threading.ThreadManager::get_CurrentThread()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 159: System.Void System.Threading.Thread::Sleep(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[102]/*$t3 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t4 = $rv*/;
                    r0 = r0[r1]/*V_2.1 = $t3.get_Item($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    $$[153].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*V_2.1.InternalSleep(milliseconds)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                case 5:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r1 = $f.$e/*$t2 = $e*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$e = null/*Frame.Exception = null*/;
                    $$[155].call(r0)/*V_0.HandleAbortException()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    throw r1/*$t2*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 160: System.Void System.Threading.Thread::Sleep()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[102]/*$t2 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t3 = $rv*/;
                    r0 = r0[r1]/*V_2.1 = $t2.get_Item($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    $$[154].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*V_2.1.InternalSleep()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                case 5:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r1 = $f.$e/*$t1 = $e*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$e = null/*Frame.Exception = null*/;
                    $$[155].call(r0)/*V_0.HandleAbortException()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    throw r1/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 161: System.Threading.Thread[] System.Threading.Thread::GetThreads()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[216](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = System.Threading.ThreadManager::GetThreads()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 162: System.Void System.Threading.Thread::Initialize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    _[82] = 1/*System.Threading.Thread._idCounter = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 163: System.Void System.Threading.Thread::.ctor()
{
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function(a0/*threadStart*/)
 // 164: System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)
{
    $$[165].call(this,a0,3)/*this..ctor(threadStart, 3)*/;
    return;

},
function(a0/*threadStart*/,a1/*priority*/)
 // 165: System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)
{
    $$[166].call(this,a0,a1,null)/*this..ctor(threadStart, priority, null)*/;
    return;

},
function(a0/*threadStart*/,a1/*priority*/,a2/*sip*/)
 // 166: System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP)
{
    $$[167].call(this,a0,a1,a2,null)/*this..ctor(threadStart, priority, sip, null)*/;
    return;

},
function(a0/*threadStart*/,a1/*priority*/,a2/*sip*/,a3/*task*/)
 // 167: System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP,XaeiOS.TaskHandle)
{
    $$[5].call(this)/*this..ctor()*/;
    $$[136].call(this,a3)/*this.set_Task(task)*/;
    this[1] = a0/*this._threadStart = threadStart*/;
    this[3] = a1/*this._priority = priority*/;
    this[0] = a2/*this._sip = sip*/;
    return;

},
function(a0/*threadStart*/,a1/*priority*/)
 // 168: System.Void System.Threading.Thread::.ctor(System.Threading.ParametizedThreadStart,System.Threading.ThreadPriority)
{
    $$[5].call(this)/*this..ctor()*/;
    $$[136].call(this,null)/*this.set_Task(null)*/;
    this[2] = a0/*this._parametizedThreadStart = threadStart*/;
    this[3] = a1/*this._priority = priority*/;
    return;

},
function()
 // 169: System.Void System.SystemException::.ctor()
{
    $$[17].call(this)/*this..ctor()*/;
    return;

},
function(a0/*message*/)
 // 170: System.Void System.SystemException::.ctor(System.String)
{
    $$[18].call(this,a0)/*this..ctor(message)*/;
    return;

},
function(a0/*message*/,a1/*innerException*/)
 // 171: System.Void System.SystemException::.ctor(System.String,System.Exception)
{
    $$[19].call(this,a0,a1)/*this..ctor(message, innerException)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 172: System.Int32 System.NativeNumber::GetHashCode()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return this/*this*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 173: System.String System.NativeNumber::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.toString()/*$rv = this.NativeToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 174: System.Void System.NullReferenceException::.ctor()
{
    $$[169].call(this)/*this..ctor()*/;
    return;

},
function(a0/*message*/)
 // 175: System.Void System.NullReferenceException::.ctor(System.String)
{
    $$[170].call(this,a0)/*this..ctor(message)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 176: System.Void System.NullReferenceException::.ctor(System.String,System.Exception)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[171].call(this,$f[2],$f[3])/*this..ctor(message, innerException)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 177: System.Boolean System.Runtime.InteropServices.IntrinsicAttribute::get_UseGlobalNamespace()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._useGlobalNamespace*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 178: System.Void System.Runtime.InteropServices.IntrinsicAttribute::set_UseGlobalNamespace(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this._useGlobalNamespace = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 179: System.Boolean System.Runtime.InteropServices.IntrinsicAttribute::get_SetVTable()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._setVTable*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 180: System.Void System.Runtime.InteropServices.IntrinsicAttribute::set_SetVTable(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this._setVTable = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 181: System.String System.Runtime.InteropServices.IntrinsicAttribute::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._name*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 182: System.Void System.Runtime.InteropServices.IntrinsicAttribute::set_Name(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[2] = $f[2]/*this._name = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 183: System.Void System.Runtime.InteropServices.IntrinsicAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[1] = 0/*this._setVTable = 0*/;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 184: System.Void System.Runtime.InteropServices.IntrinsicAttribute::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[1] = 0/*this._setVTable = 0*/;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[2] = $f[2]/*this._name = name*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 185: System.Void System.Reflection.MethodInfo::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[122].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 186: System.Runtime.Assembly System.Runtime.Class::get_Assembly()
{
    var r0;
    r0 = this[4]/*V_0.1 = this.<Assembly>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 187: System.Void System.Runtime.Class::set_Assembly(System.Runtime.Assembly)
{
    this[4] = a0/*this.<Assembly>k__BackingField = value*/;
    return;

},
function()
 // 188: System.String System.Runtime.Class::get_Name()
{
    var r0;
    r0 = this[5]/*V_0.1 = this.<Name>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 189: System.Void System.Runtime.Class::set_Name(System.String)
{
    this[5] = a0/*this.<Name>k__BackingField = value*/;
    return;

},
function()
 // 190: System.String System.Runtime.Class::get_Namespace()
{
    var r0;
    r0 = this[6]/*V_0.1 = this.<Namespace>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 191: System.Void System.Runtime.Class::set_Namespace(System.String)
{
    this[6] = a0/*this.<Namespace>k__BackingField = value*/;
    return;

},
function()
 // 192: System.Runtime.Class System.Runtime.Class::get_DeclaringClass()
{
    var r0;
    r0 = this[7]/*V_0.1 = this.<DeclaringClass>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 193: System.Void System.Runtime.Class::set_DeclaringClass(System.Runtime.Class)
{
    this[7] = a0/*this.<DeclaringClass>k__BackingField = value*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 194: System.Runtime.Class System.Runtime.Class::get_BaseClass()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $$[195].call(this)/*$t1 = this.get_VTable()*/;
                    $rv = r1.b/*$rv = $t1.get_BaseVTable()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t2 = $rv*/;
                    if((!(r1 == null)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r0 = null/*V_0.1 = null*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $$[195].call(this)/*$t11 = this.get_VTable()*/;
                    $rv = r1.b/*$rv = $t11.get_BaseVTable()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = $rv/*$t12 = $rv*/;
                    $rv = r1.c/*$rv = $t12.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = $rv/*V_0.2 = $rv*/;
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 195: System.Runtime.VTable System.Runtime.Class::get_VTable()
{
    var r0;
    r0 = this[8]/*V_0.1 = this.<VTable>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 196: System.Void System.Runtime.Class::set_VTable(System.Runtime.VTable)
{
    this[8] = a0/*this.<VTable>k__BackingField = value*/;
    return;

},
function()
 // 197: System.UIntPtr System.Runtime.Class::get_VTableDataPointer()
{
    var r0;
    r0 = this[9]/*V_0.1 = this.<VTableDataPointer>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 198: System.Void System.Runtime.Class::set_VTableDataPointer(System.UIntPtr)
{
    this[9] = a0/*this.<VTableDataPointer>k__BackingField = value*/;
    return;

},
function()
 // 199: System.Boolean System.Runtime.Class::get_IsInterface()
{
    var r0;
    r0 = this[10]/*V_0.1 = this.<IsInterface>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 200: System.Void System.Runtime.Class::set_IsInterface(System.Boolean)
{
    this[10] = a0/*this.<IsInterface>k__BackingField = value*/;
    return;

},
function()
 // 201: System.Boolean System.Runtime.Class::get_IsArray()
{
    var r0;
    r0 = this[11]/*V_0.1 = this.<IsArray>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 202: System.Void System.Runtime.Class::set_IsArray(System.Boolean)
{
    this[11] = a0/*this.<IsArray>k__BackingField = value*/;
    return;

},
function()
 // 203: System.Runtime.Class System.Runtime.Class::get_ElementClass()
{
    var r0;
    r0 = this[12]/*V_0.1 = this.<ElementClass>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 204: System.Void System.Runtime.Class::set_ElementClass(System.Runtime.Class)
{
    this[12] = a0/*this.<ElementClass>k__BackingField = value*/;
    return;

},
function()
 // 205: System.String System.Runtime.Class::get_FullName()
{
    var r0,r1,r2;
    r0 = $$[192].call(this)/*$t1 = this.get_DeclaringClass()*/;
    if(r0)
    {
        r0 = $$[192].call(this)/*$t9 = this.get_DeclaringClass()*/;
        r2 = $$[205].call(r0)/*$ts0 = $t9.get_FullName()*/;
        r1/*$t3*/;

    }
    else
    {
        r2 = $$[190].call(this)/*$ts0 = this.get_Namespace()*/;

    }
    r0 = $$[188].call(this)/*$t6 = this.get_Name()*/;
    r0 = (r2 + "." + r0)/*V_0.1 = System.String::Concat($ts0, ".", $t6)*/;
    return r0/*V_0.1*/;

},
function()
 // 206: System.NativeArray`1<System.Runtime.Method> System.Runtime.Class::get_Methods()
{
    var r0;
    r0 = this[0]/*V_0.1 = this._methods*/;
    return r0/*V_0.1*/;

},
function()
 // 207: System.NativeArray`1<System.Runtime.Constructor> System.Runtime.Class::get_Constructors()
{
    var r0;
    r0 = this[1]/*V_0.1 = this._constructors*/;
    return r0/*V_0.1*/;

},
function()
 // 208: System.NativeArray`1<System.Runtime.Property> System.Runtime.Class::get_Properties()
{
    var r0;
    r0 = this[2]/*V_0.1 = this._properties*/;
    return r0/*V_0.1*/;

},
function()
 // 209: System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Class::get_CustomAttributes()
{
    var r0;
    r0 = this[3]/*V_0.1 = this._customAttributes*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 210: System.String System.Runtime.Class::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[205].call(this)/*V_0.1 = this.get_FullName()*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 211: System.Void System.Runtime.Class::.ctor()
{
    var r0;
    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.Runtime.Method>::.ctor()()*/;
    this[0] = r0/*this._methods = $t1*/;
    r0 = new Array()/*$t3 = new System.Void System.NativeArray`1<System.Runtime.Constructor>::.ctor()()*/;
    this[1] = r0/*this._constructors = $t3*/;
    r0 = new Array()/*$t5 = new System.Void System.NativeArray`1<System.Runtime.Property>::.ctor()()*/;
    this[2] = r0/*this._properties = $t5*/;
    r0 = new Array()/*$t7 = new System.Void System.NativeArray`1<System.Runtime.CustomAttribute>::.ctor()()*/;
    this[3] = r0/*this._customAttributes = $t7*/;
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 212: System.Threading.Thread System.Threading.ThreadManager::get_CurrentThread()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[102]/*$t0 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t1 = $rv*/;
                    r0 = r0[r1]/*V_0.1 = $t0.get_Item($t1)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 213: System.Void System.Threading.ThreadManager::RegisterThread(System.Threading.Thread)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[102]/*$t0 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[135].call($f[2])/*$rv = thread.get_Task()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t2 = $rv*/;
                    r0[r1] = $f[2]/*$t0.set_Item($t2, thread)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 214: System.Void System.Threading.ThreadManager::UnregisterThread(System.Threading.Thread)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[102]/*$t0 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[135].call($f[2])/*$rv = thread.get_Task()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t2 = $rv*/;
                    delete r0[r1]/*$t0.Remove($t2)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 215: System.Void System.Threading.ThreadManager::Initialize()
{
    var r0;
    r0 = {$:_[103]}/*$t0 = new System.Void System.Threading.ThreadManager/ThreadsByTask::.ctor()()*/;
    $$[217].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t0..ctor()*/;
    _[102] = r0/*System.Threading.ThreadManager._threadsByTask = $t0*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r1,r0,r2,r3)
// 216: System.Threading.Thread[] System.Threading.ThreadManager::GetThreads()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = _[102]/*$t0 = System.Threading.ThreadManager._threadsByTask*/;
                    $rv = $$[81].call(r1)/*$rv = $t0.GetKeys()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r3 = $rv/*V_0.1 = $rv*/;
                    r2 = $$[422](_[81],r3.length)/*V_1.1 = new System.Threading.Thread[(System.Int32)V_0.1.Length]*/;
                    r0 = 0/*V_2.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if((r0 < r3.length))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r2/*V_1.1*/;
                }
                case 5:
                {
                    $ep = 6;
                    r1 = _[102]/*$t10 = System.Threading.ThreadManager._threadsByTask*/;
                    r1 = r1[r3[r0]]/*$t13 = $t10.get_Item(V_0.1[V_2.3])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r2[r0] = r1/*V_1.1[V_2.3] = $t13*/;
                    r0 = (r0 + 1)/*V_2.2 = V_2.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 217: System.Void System.Threading.ThreadManager/ThreadsByTask::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 218: System.Boolean System.AttributeUsageAttribute::get_AllowMultiple()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._allowMultiple*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 219: System.Void System.AttributeUsageAttribute::set_AllowMultiple(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this._allowMultiple = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 220: System.Boolean System.AttributeUsageAttribute::get_Inherited()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._inherited*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 221: System.Void System.AttributeUsageAttribute::set_Inherited(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this._inherited = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 222: System.AttributeTargets System.AttributeUsageAttribute::get_ValidOn()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._validOn*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 223: System.Void System.AttributeUsageAttribute::.ctor(System.AttributeTargets)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[2] = $f[2]/*this._validOn = validOn*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 224: System.Void System.AttributeUsageAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[223].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,32767])/*this..ctor(32767)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 225: System.Void System.AttributeUsageAttribute::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[107],0:0,1:0,2:0}/*$t0 = new System.Void System.AttributeUsageAttribute::.ctor()()*/;
                    $$[224].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[108] = r0/*System.AttributeUsageAttribute.Default = $t0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 226: System.Void System.Runtime.VTable::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 227: System.Void System.Runtime.VTableDebugInfo::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 228: System.Runtime.Class System.Runtime.MethodBase::get_DeclaringClass()
{
    var r0;
    r0 = this[2]/*V_0.1 = this.<DeclaringClass>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 229: System.Void System.Runtime.MethodBase::set_DeclaringClass(System.Runtime.Class)
{
    this[2] = a0/*this.<DeclaringClass>k__BackingField = value*/;
    return;

},
function()
 // 230: System.Runtime.Class System.Runtime.MethodBase::get_ReturnType()
{
    var r0;
    r0 = this[3]/*V_0.1 = this.<ReturnType>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 231: System.Void System.Runtime.MethodBase::set_ReturnType(System.Runtime.Class)
{
    this[3] = a0/*this.<ReturnType>k__BackingField = value*/;
    return;

},
function()
 // 232: System.String System.Runtime.MethodBase::get_Name()
{
    var r0;
    r0 = this[4]/*V_0.1 = this.<Name>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 233: System.Void System.Runtime.MethodBase::set_Name(System.String)
{
    this[4] = a0/*this.<Name>k__BackingField = value*/;
    return;

},
function()
 // 234: System.String System.Runtime.MethodBase::get_FullName()
{
    var r0,r1;
    r0 = $$[228].call(this)/*$t1 = this.get_DeclaringClass()*/;
    r1 = $$[205].call(r0)/*$t2 = $t1.get_FullName()*/;
    r0 = $$[232].call(this)/*$t5 = this.get_Name()*/;
    r0 = (r1 + "::" + r0)/*V_0.1 = System.String::Concat($t2, "::", $t5)*/;
    return r0/*V_0.1*/;

},
function()
 // 235: System.NativeFunction System.Runtime.MethodBase::get_Function()
{
    var r0;
    r0 = this[5]/*V_0.1 = this.<Function>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 236: System.Void System.Runtime.MethodBase::set_Function(System.NativeFunction)
{
    this[5] = a0/*this.<Function>k__BackingField = value*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 237: System.NativeArray`1<System.Runtime.Parameter> System.Runtime.MethodBase::get_Parameters()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._parameters*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 238: System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes()
{
    var r0;
    r0 = this[1]/*V_0.1 = this._customAttributes*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 239: System.String System.Runtime.MethodBase::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[234].call(this)/*V_0.1 = this.get_FullName()*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 240: System.Void System.Runtime.MethodBase::.ctor()
{
    var r0;
    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.Runtime.Parameter>::.ctor()()*/;
    this[0] = r0/*this._parameters = $t1*/;
    r0 = new Array()/*$t3 = new System.Void System.NativeArray`1<System.Runtime.CustomAttribute>::.ctor()()*/;
    this[1] = r0/*this._customAttributes = $t3*/;
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function()
 // 241: System.Void System.Runtime.Constructor::.ctor()
{
    $$[240].call(this)/*this..ctor()*/;
    return;

},
function()
 // 242: System.Void System.Runtime.Parameter::.ctor()
{
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function()
 // 243: System.String System.var::ToString()
{
    var r0;
    r0 = this.toString()/*V_0.1 = this.NativeToString()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f)
// 244: System.Void System.var::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 245: System.String[] System.String::Split(System.Char[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2].length > 1)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t9..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t9*/;
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $f[2][0]/*$t14 = separator[0].ToString()*/;
                    $rv = this.split(r0)/*$rv = this.Split($t14)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*prefix*/)
 // 246: System.Boolean System.String::StartsWith(System.String)
{
    var r1,r2,r0;
    r2 = a0.length/*$t1 = prefix.get_Length()*/;
    r1 = this.length/*$t3 = this.get_Length()*/;
    if((!(r2 > r1)))
    {
        r1 = a0.length/*$t13 = prefix.get_Length()*/;
        r1 = this.substr(0,r1)/*$t14 = this.Substr(0, $t13)*/;
        r0 = (r1 == a0)/*V_0.2 = System.String::op_Equality($t14, prefix)*/;

    }
    else
    {
        r0 = 0/*V_0.1 = 0*/;

    }
    return r0/*V_0.3*/;

},
function(a0/*suffix*/)
 // 247: System.Boolean System.String::EndsWith(System.String)
{
    var r0;
    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.Exception::.ctor(System.String)("Not yet implemented")*/;
    $$[18].call(r0,"Not yet implemented")/*$t1..ctor("Not yet implemented")*/;
    throw r0/*$t1*/;

},
function()
 // 248: System.String System.String::ToString()
{
    return this/*this*/;

},
function(a0/*needle*/)
 // 249: System.Boolean System.String::Contains(System.String)
{
    var r0;
    r0 = this.indexOf(a0)/*$t2 = this.IndexOf(needle)*/;
    return (!(r0 == -1))/*BooleanNot $t2 ValueEquality -1*/;

},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 250: System.String System.String::Concat(System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = System.String::SafeToString(obj0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t1 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[3]])/*$rv = System.String::SafeToString(obj1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    r0 = (r1 + r0)/*V_0.1 = System.String::Concat($t1, $t3)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 251: System.String System.String::Concat(System.Object,System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(obj0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*$t1 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[3]])/*$rv = System.String::SafeToString(obj1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = $rv/*$t3 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[4]])/*$rv = System.String::SafeToString(obj2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t5 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_0.1 = System.String::Concat($t1, $t3, $t5)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 252: System.String System.String::Concat(System.Object,System.Object,System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[2]])/*$rv = System.String::SafeToString(obj0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3 = $rv/*$t1 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[3]])/*$rv = System.String::SafeToString(obj1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t3 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[4]])/*$rv = System.String::SafeToString(obj2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t5 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[5]])/*$rv = System.String::SafeToString(obj3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    r0 = [r3, r2, r1, r0].join('')/*V_0.1 = System.String::Concat($t1, $t3, $t5, $t7)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 253: System.String System.String::Concat(System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r2 = $$[422](_[118],$f[2].length)/*V_0.1 = new System.String[(System.Int32)objs.Length]*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((r0 < $f[2].length))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r1 = r2.join('')/*V_2.1 = System.String::Concat(V_0.1)*/;
                    return r1/*V_2.1*/;
                }
                case 4:
                {
                    $ep = 5;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,$f[2][r0]])/*$rv = System.String::SafeToString(objs[V_1.3])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = $rv/*$t13 = $rv*/;
                    r2[r0] = r1/*V_0.1[V_1.3] = $t13*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*objs*/)
 // 254: System.String System.String::NativeConcat(System.String[])
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r1 = new Array()/*$t0 = new System.Void System.NativeArray`1<System.String>::.ctor()()*/;
                r0 = 0/*V_1.1 = 0*/;
                $ep = 2;
            }
            case 2:
            {
                if((r0 < a0.length))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                r1 = r1.join("")/*V_2.1 = $t0.Join("")*/;
                return r1/*V_2.1*/;
            }
            case 4:
            {
                r1.push(a0[r0])/*$t0.Push(objs[V_1.3])*/;
                r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                $ep = 2;
                continue $ctrl;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 255: System.String System.String::SafeToString(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = "null"/*V_0.1 = "null"*/;
                    $ep = 4;
                    continue $ctrl;
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $f[2].$[0].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = obj.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.2 = $rv*/;
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 256: System.Int32 System.String::Compare(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = ($f[2] > $f[3])/*$t2 = System.String::GreaterThan(strA, strB)*/;
                    if((!r1))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = 1/*V_0.1 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 3:
                {
                    r1 = ($f[2] == $f[3])/*$t9 = System.String::op_Equality(strA, strB)*/;
                    if((!r1))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = 0/*V_0.2 = 0*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 5:
                {
                    r0 = -1/*V_0.3 = -1*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return r0/*V_0.4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 257: System.Boolean System.String::IsNullOrEmpty(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!$f[2]))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 5;
                    $rv = "".$[2].call("",0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = "".Equals(str)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 4;
                    r1 = $rv/*$ts0 = $rv*/;
                    continue $ctrl;
                }
                case 3:
                {
                    r1 = 1/*$ts0 = 1*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return r1/*$ts0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 258: System.Void System.String::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 259: System.Void System.NotImplementedException::.ctor()
{
    $$[169].call(this)/*this..ctor()*/;
    return;

},
function(a0/*message*/)
 // 260: System.Void System.NotImplementedException::.ctor(System.String)
{
    $$[170].call(this,a0)/*this..ctor(message)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 261: System.Void System.InvalidOperationException::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[170].call(this,$f[2])/*this..ctor(message)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 262: System.Void System.Resources.ResourceManager::Initialize()
{
    var r0;
    r0 = {$:_[169],0:null,1:null,2:null}/*$t0 = new System.Void System.Collections.Generic.Dictionary`2<System.Int32,System.NativeArray`1<System.IDisposable>>::.ctor()()*/;
    $$[337].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t0..ctor()*/;
    _[129] = r0/*System.Resources.ResourceManager._resourceMap = $t0*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 263: System.Void System.Resources.ResourceManager::RegisterSIP(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[129]/*$t0 = System.Resources.ResourceManager._resourceMap*/;
                    r1 = $f[2][5]/*V_5.1 = sip._pid*/;
                    $rv = r0.$[8].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$rv = $t0.ContainsKey(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    if((!r0))
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Registering SIP with ResourceManager: "])/*$rv = System.String::SafeToString("Registering SIP with ResourceManager: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t23 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(sip)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t24 = $rv*/;
                    r0 = (r1 + r0)/*V_2.1 = System.String::Concat($t23, $t24)*/;
                    LogWrite("TRACE", r0)/*System.Diagnostics.Logging::Trace(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = _[129]/*$t17 = System.Resources.ResourceManager._resourceMap*/;
                    r2 = $f[2][5]/*V_1.1 = sip._pid*/;
                    r1 = new Array()/*$t20 = new System.Void System.NativeArray`1<System.IDisposable>::.ctor()()*/;
                    r0.$[6].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2,r1])/*$t17.set_Item(V_1.1, $t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                case 8:
                {
                    $ep = 9;
                    r0 = $f[2][5]/*V_4.1 = sip._pid*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"SIP "])/*$rv = System.String::SafeToString("SIP ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $rv/*$t25 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,new Number(r0)])/*$rv = System.String::SafeToString(box(System.Int32,V_4.1))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t26 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"is already registered with ResourceManager"])/*$rv = System.String::SafeToString("is already registered with ResourceManager")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = $rv/*$t27 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_3.1 = System.String::Concat($t25, $t26, $t27)*/;
                    r1 = {$:_[7],0:null,1:null,2:null,3:null}/*$t13 = new System.Void System.Exception::.ctor(System.String)(V_3.1)*/;
                    $$[18].call(r1,r0)/*$t13..ctor(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    throw r1/*$t13*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0,r3)
// 264: System.Void System.Resources.ResourceManager::CleanupAndUnregisterSIP(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,"Cleaning up SIP: "])/*$rv = System.String::SafeToString("Cleaning up SIP: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*$t35 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,$f[2]])/*$rv = System.String::SafeToString(sip)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = $rv/*$t36 = $rv*/;
                    r1 = (r2 + r1)/*V_6.1 = System.String::Concat($t35, $t36)*/;
                    LogWrite("INFO", r1)/*System.Diagnostics.Logging::Info(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = _[129]/*$t3 = System.Resources.ResourceManager._resourceMap*/;
                    r2 = $f[2][5]/*V_5.1 = sip._pid*/;
                    $rv = r1.$[5].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$rv = $t3.get_Item(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r3 = $rv/*V_0.1 = $rv*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r1 = r3.length/*$t8 = V_0.1.get_Length()*/;
                    if((r0 < r1))
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r2 = $$[422](_[0],4)/*V_2.1 = new System.Object[4]*/;
                    r2[0] = "Freeing resource "/*V_2.1[0] = "Freeing resource "*/;
                    r1 = r3[r0]/*$t21 = V_0.1.get_Item(V_1.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r2[1] = r1/*V_2.1[1] = $t21*/;
                    r2[2] = " left by SIP: "/*V_2.1[2] = " left by SIP: "*/;
                    r2[3] = $f[2]/*V_2.1[3] = sip*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$rv = System.String::Concat(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r1 = $rv/*$t26 = $rv*/;
                    LogWrite("INFO", r1)/*System.Diagnostics.Logging::Info($t26)*/;
                    r1 = r3[r0]/*$t28 = V_0.1.get_Item(V_1.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1.$.i[73][0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null])/*$t28.Dispose()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 12:
                {
                    $ep = 13;
                    r1 = _[129]/*$t11 = System.Resources.ResourceManager._resourceMap*/;
                    r2 = $f[2][5]/*V_4.1 = sip._pid*/;
                    r1.$[10].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$t11.Remove(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 265: System.Void System.Resources.ResourceManager::RegisterResource(System.IDisposable)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = _[129]/*$t0 = System.Resources.ResourceManager._resourceMap*/;
                    $rv = $$[517]()/*$rv = XaeiOS.SIP::get_CurrentSIP()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t5 = $rv*/;
                    r0 = r0[5]/*V_1.1 = $t5._pid*/;
                    $rv = r1.$[5].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = $t0.get_Item(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    r0.push($f[2])/*V_0.1.Push(resource)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 266: System.Void System.Resources.ResourceManager::FreeResource(System.IDisposable)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 267: System.Void XaeiOS.Boot.BootMethod::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 268: System.Void System.Threading.ManualResetEvent::Set()
{
    this[0] = 1/*this._set = 1*/;
    $$[271].call(this)/*this.Signal()*/;
    return;

},
function()
 // 269: System.Void System.Threading.ManualResetEvent::Reset()
{
    this[0] = 0/*this._set = 0*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 270: System.Void System.Threading.ManualResetEvent::WaitOne()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_1.1 = this._set*/;
                    if(r0)
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    r0 = this[1]/*$t4 = this._waitingList*/;
                    r0.push(r1)/*$t4.Push(V_0.1)*/;
                }
                case 3:
                {
                    $ep = 4;
                    $$[595](r1)/*XaeiOS.SystemCalls::BlockTask(V_0.1)*/;
                    $$[596](0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 271: System.Void System.Threading.ManualResetEvent::Signal()
{
    var r1,r0;
    r0 = 0/*V_0.1 = 0*/;
    r1 = this[1]/*$t2 = this._waitingList*/;
    r1 = r1.length/*$t3 = $t2.get_Length()*/;
    if((r0 < r1))
    {
        r1 = this[1]/*$t10 = this._waitingList*/;
        r1 = r1[r0]/*$t12 = $t10.get_Item(V_0.3)*/;
        $$[594](r1)/*XaeiOS.SystemCalls::ScheduleTask($t12)*/;
        r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;

    }
    else
    {
        r1 = this[1]/*$t7 = this._waitingList*/;
        r1.length = 0/*$t7.set_Length(0)*/;
        return;

    }

},
function($ep,$end,$rv,$pc,$f,r0)
// 272: System.Void System.Threading.ManualResetEvent::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    r0 = new Array()/*$t2 = new System.Void System.NativeArray`1<XaeiOS.TaskHandle>::.ctor()()*/;
                    this[1] = r0/*this._waitingList = $t2*/;
                    this[0] = 0/*this._set = 0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 273: System.Runtime.Class System.Runtime.Property::get_DeclaringClass()
{
    var r0;
    r0 = this[1]/*V_0.1 = this.<DeclaringClass>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 274: System.Void System.Runtime.Property::set_DeclaringClass(System.Runtime.Class)
{
    this[1] = a0/*this.<DeclaringClass>k__BackingField = value*/;
    return;

},
function()
 // 275: System.Runtime.Class System.Runtime.Property::get_Type()
{
    var r0;
    r0 = this[2]/*V_0.1 = this.<Type>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 276: System.Void System.Runtime.Property::set_Type(System.Runtime.Class)
{
    this[2] = a0/*this.<Type>k__BackingField = value*/;
    return;

},
function()
 // 277: System.String System.Runtime.Property::get_Name()
{
    var r0;
    r0 = this[3]/*V_0.1 = this.<Name>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 278: System.Void System.Runtime.Property::set_Name(System.String)
{
    this[3] = a0/*this.<Name>k__BackingField = value*/;
    return;

},
function()
 // 279: System.String System.Runtime.Property::get_FullName()
{
    var r0,r1;
    r0 = $$[273].call(this)/*$t1 = this.get_DeclaringClass()*/;
    r1 = $$[205].call(r0)/*$t2 = $t1.get_FullName()*/;
    r0 = $$[277].call(this)/*$t5 = this.get_Name()*/;
    r0 = (r1 + "::" + r0)/*V_0.1 = System.String::Concat($t2, "::", $t5)*/;
    return r0/*V_0.1*/;

},
function()
 // 280: System.Runtime.Method System.Runtime.Property::get_GetMethod()
{
    var r0;
    r0 = this[4]/*V_0.1 = this.<GetMethod>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 281: System.Void System.Runtime.Property::set_GetMethod(System.Runtime.Method)
{
    this[4] = a0/*this.<GetMethod>k__BackingField = value*/;
    return;

},
function()
 // 282: System.Runtime.Method System.Runtime.Property::get_SetMethod()
{
    var r0;
    r0 = this[5]/*V_0.1 = this.<SetMethod>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 283: System.Void System.Runtime.Property::set_SetMethod(System.Runtime.Method)
{
    this[5] = a0/*this.<SetMethod>k__BackingField = value*/;
    return;

},
function()
 // 284: System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Property::get_CustomAttributes()
{
    var r0;
    r0 = this[0]/*V_0.1 = this._customAttributes*/;
    return r0/*V_0.1*/;

},
function()
 // 285: System.Void System.Runtime.Property::.ctor()
{
    var r0;
    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.Runtime.CustomAttribute>::.ctor()()*/;
    this[0] = r0/*this._customAttributes = $t1*/;
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function(a0/*message*/)
 // 286: System.Void System.ArgumentException::.ctor(System.String)
{
    $$[18].call(this,a0)/*this..ctor(message)*/;
    return;

},
function(a0/*message*/)
 // 287: System.Void System.ArgumentOutOfRangeException::.ctor(System.String)
{
    $$[286].call(this,a0)/*this..ctor(message)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 288: System.Void System.Collections.Generic.KeyValuePair`2::.ctor(K,V)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this.Key = key*/;
                    this[1] = $f[3]/*this.Value = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 289: System.Void System.Runtime.CompilerServices.RequiredAttributeAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 290: System.Runtime.Method System.Runtime.CustomAttribute::get_Constructor()
{
    var r0;
    r0 = this[0]/*V_0.1 = this.<Constructor>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 291: System.Void System.Runtime.CustomAttribute::set_Constructor(System.Runtime.Method)
{
    this[0] = a0/*this.<Constructor>k__BackingField = value*/;
    return;

},
function()
 // 292: System.Void System.Runtime.CustomAttribute::.ctor()
{
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 293: System.Void System.Diagnostics.Debug::Assert(System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if($f[3])
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = ("Assertion failed: " + $f[2])/*$t3 = System.String::Concat("Assertion failed: ", message)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t5 = new System.Void System.Exception::.ctor(System.String)(message)*/;
                    $$[18].call(r0,$f[2])/*$t5..ctor(message)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r0/*$t5*/;
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 294: System.IO.TextWriter System.Console::get_Out()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[517]()/*V_0.1 = XaeiOS.SIP::get_CurrentSIP()*/;
                    if((!(r0 == null)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[167],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.ExecutionEngineException::.ctor(System.String)("No process currently running")*/;
                    $$[327].call(r0,"No process currently running")/*$t8..ctor("No process currently running")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t8*/;
                }
                case 4:
                {
                    r0 = r0[12]/*V_3.1 = V_0.1.<Output>k__BackingField*/;
                    return r0/*V_3.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 295: System.String System.Console::ReadLine()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 296: System.Int32 System.Console::Read()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 297: System.String System.Console::get_Title()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotSupportedException::.ctor()()*/;
                    $$[304].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 298: System.Void System.Console::set_Title(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotSupportedException::.ctor()()*/;
                    $$[304].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 299: System.Void System.Console::Write(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[294](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = System.Console::get_Out()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t0 = $rv*/;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t0.Write(s)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 300: System.Void System.Console::WriteLine(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = ($f[2] + "\n")/*$t2 = System.String::Concat(s, "
")*/;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.Console::Write($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 301: System.Void System.Console::WriteLine(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,new Number($f[2])])/*$rv = System.String::SafeToString(box(System.Int32,value))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t4 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"\n"])/*$rv = System.String::SafeToString("
")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t5 = $rv*/;
                    r0 = (r1 + r0)/*V_0.1 = System.String::Concat($t4, $t5)*/;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*System.Console::Write(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 302: System.Void System.Console::WriteLine()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"\n"])/*System.Console::Write("
")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 303: System.Void System.Console::SetOut(System.IO.TextWriter)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[517]()/*V_0.1 = XaeiOS.SIP::get_CurrentSIP()*/;
                    if((!(r0 == null)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[167],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.ExecutionEngineException::.ctor(System.String)("No process currently running")*/;
                    $$[327].call(r0,"No process currently running")/*$t8..ctor("No process currently running")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t8*/;
                }
                case 4:
                {
                    $ep = 5;
                    $$[493].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*V_0.1.set_Output(writer)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 304: System.Void System.NotSupportedException::.ctor()
{
    $$[169].call(this)/*this..ctor()*/;
    return;

},
function(a0/*message*/)
 // 305: System.Void System.NotSupportedException::.ctor(System.String)
{
    $$[170].call(this,a0)/*this..ctor(message)*/;
    return;

},
function(a0/*message*/,a1/*innerException*/)
 // 306: System.Void System.NotSupportedException::.ctor(System.String,System.Exception)
{
    $$[171].call(this,a0,a1)/*this..ctor(message, innerException)*/;
    return;

},
function(a0/*message*/)
 // 307: System.Void System.InvalidCastException::.ctor(System.String)
{
    $$[18].call(this,a0)/*this..ctor(message)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 308: System.Void System.EventArgs::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 309: System.Void System.EventArgs::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[146]}/*$t0 = new System.Void System.EventArgs::.ctor()()*/;
                    $$[308].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[147] = r0/*System.EventArgs.Empty = $t0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 310: System.String System.Decimal::ToString()
{
    var r0;
    r0 = this.toString()/*V_0.1 = this.ToString()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 311: System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplAttribute::get_Options()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._options*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 312: System.Void System.Runtime.CompilerServices.MethodImplAttribute::.ctor(System.Int16)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.NotSupportedException::.ctor()()*/;
                    $$[304].call(r0)/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 313: System.Void System.Runtime.CompilerServices.MethodImplAttribute::.ctor(System.Runtime.CompilerServices.MethodImplOptions)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._options = options*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 314: System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.XaeiOSMethodImplAttribute::get_Options()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._options*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 315: System.String System.Runtime.CompilerServices.XaeiOSMethodImplAttribute::get_Implementation()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._implementation*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 316: System.Void System.Runtime.CompilerServices.XaeiOSMethodImplAttribute::set_Implementation(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this._implementation = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 317: System.Void System.Runtime.CompilerServices.XaeiOSMethodImplAttribute::.ctor(System.Runtime.CompilerServices.MethodImplOptions)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._options = options*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 318: System.String System.Reflection.DefaultMemberAttribute::get_MemberName()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this.member_name*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 319: System.Void System.Reflection.DefaultMemberAttribute::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this.member_name = member_name*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 320: System.Int32 System.Runtime.Method::get_VTableSlot()
{
    var r0;
    r0 = this[6]/*V_0.1 = this.<VTableSlot>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 321: System.Void System.Runtime.Method::set_VTableSlot(System.Int32)
{
    this[6] = a0/*this.<VTableSlot>k__BackingField = value*/;
    return;

},
function()
 // 322: System.Void System.Runtime.Method::.ctor()
{
    $$[240].call(this)/*this..ctor()*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 323: System.Void System.FlagsAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 324: System.NativeObject XaeiOS.Process.ImageFormat.ObjectImage::GetMetadata()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this.Header*/;
                    r0 = r0["Metadata"]/*V_0.1 = $t1.get_Item("Metadata")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 325: System.NativeArray XaeiOS.Process.ImageFormat.ObjectImage::GetFixups()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this.Header*/;
                    r0 = r0["Fixups"]/*V_0.1 = $t1.get_Item("Fixups")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 326: System.Void XaeiOS.Process.ImageFormat.ObjectImage::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*message*/)
 // 327: System.Void System.ExecutionEngineException::.ctor(System.String)
{
    $$[170].call(this,a0)/*this..ctor(message)*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 328: System.Int32 System.Collections.Generic.Dictionary`2::get_Count()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._keys*/;
                    $rv = r0.length/*$rv = $t1.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 329: V System.Collections.Generic.Dictionary`2::get_Item(K)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*V_0.1 = $rv*/;
                    r0 = this[2]/*$t3 = this._internalObject*/;
                    r0 = r1 in r0/*V_2.1 = $t3.ContainsKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if(r0)
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t7 = new System.Void System.Exception::.ctor(System.String)("Key not found")*/;
                    $$[18].call(r0,"Key not found")/*$t7..ctor("Key not found")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    throw r0/*$t7*/;
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[2]/*$t9 = this._internalObject*/;
                    r0 = r0[r1]/*V_1.1 = $t9.get_Item(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 330: System.Void System.Collections.Generic.Dictionary`2::set_Item(K,V)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = this[2]/*$t3 = this._internalObject*/;
                    r0 = r2 in r0/*V_1.1 = $t3.ContainsKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if(r0)
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = this[1]/*$t7 = this._keysToIndexMapping*/;
                    r0 = this[0]/*$t10 = this._keys*/;
                    $rv = r0.length/*$rv = $t10.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t12 = $rv*/;
                    r1[r2] = r0/*$t7.set_Item(V_0.1, $t12)*/;
                    r0 = this[0]/*$t14 = this._keys*/;
                    r0.push($f[2])/*$t14.Push(key)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[2]/*$t17 = this._internalObject*/;
                    r0[r2] = $f[3]/*$t17.set_Item(V_0.1, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 331: System.Collections.Generic.ICollection`1<K> System.Collections.Generic.Dictionary`2::get_Keys()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 332: System.Boolean System.Collections.Generic.Dictionary`2::ContainsKey(K)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[2]/*$t1 = this._internalObject*/;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t4 = $rv*/;
                    r0 = r1 in r0/*V_0.1 = $t1.ContainsKey($t4)*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 333: System.Boolean System.Collections.Generic.Dictionary`2::ContainsValue(V)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6)
// 334: System.Boolean System.Collections.Generic.Dictionary`2::Remove(K)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3 = $rv/*V_0.1 = $rv*/;
                    r2 = this[2]/*$t3 = this._internalObject*/;
                    r2 = r3 in r2/*V_7.1 = $t3.ContainsKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if(r2)
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = 0/*V_6.1 = 0*/;
                    $ep = 13;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r2 = this[1]/*$t8 = this._keysToIndexMapping*/;
                    r5 = r2[r3]/*V_1.1 = $t8.get_Item(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = this[1]/*$t13 = this._keysToIndexMapping*/;
                    delete r2[r3]/*$t13.RemoveKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r4 = new Array()/*$t15 = new System.Void System.NativeArray`1<K>::.ctor()()*/;
                    r2 = this[0]/*$t17 = this._keys*/;
                    r2.length/*$t17.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r2 = this[0]/*$t20 = this._keys*/;
                    $rv = r2.length/*$rv = $t20.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r6 = $rv/*$t21 = $rv*/;
                    r1 = 0/*V_5.1 = 0*/;
                    $ep = 10;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    if((r1 < (r6 - 1)))
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    $ep = 12;
                    this[0] = r4/*this._keys = $t15*/;
                    r2 = this[2]/*$t29 = this._internalObject*/;
                    delete r2[r3]/*$t29.RemoveKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    r0 = 1/*V_6.2 = 1*/;
                    $ep = 13;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    return r0/*V_6.3*/;
                }
                case 14:
                {
                    if((!(r1 == r5)))
                    {
                        $ep = 15;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 17;
                        continue $ctrl;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r2 = this[0]/*$t40 = this._keys*/;
                    r2 = r2[r1]/*$t42 = $t40.get_Item(V_5.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r4.push(r2)/*$t15.Push($t42)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    r1 = (r1 + 1)/*V_5.2 = V_5.3 Add 1*/;
                    $ep = 10;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 335: System.Void System.Collections.Generic.Dictionary`2::Clear()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<K>::.ctor()()*/;
                    this[0] = r0/*this._keys = $t1*/;
                    r0 = new Object()/*$t3 = new System.Void System.NativeObject::.ctor()()*/;
                    this[1] = r0/*this._keysToIndexMapping = $t3*/;
                    r0 = new Object()/*$t5 = new System.Void System.NativeObject::.ctor()()*/;
                    this[2] = r0/*this._internalObject = $t5*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2,r3)
// 336: V[] System.Collections.Generic.Dictionary`2::GetValues()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[2]/*$t1 = this._internalObject*/;
                    $rv = $$[81].call(r1)/*$rv = $t1.GetKeys()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r3 = $$[422](_[0],r2.length)/*V_1.1 = new V[(System.Int32)V_0.1.Length]*/;
                    r0 = 0/*V_2.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if((r0 < r2.length))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r3/*V_1.1*/;
                }
                case 5:
                {
                    $ep = 6;
                    r1 = this[2]/*$t12 = this._internalObject*/;
                    r1 = r1[r2[r0]]/*$t15 = $t12.get_Item(V_0.1[V_2.3])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r3[r0] = r1/*V_1.1[V_2.3] = $t15*/;
                    r0 = (r0 + 1)/*V_2.2 = V_2.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 337: System.Void System.Collections.Generic.Dictionary`2::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    r0 = new Array()/*$t2 = new System.Void System.NativeArray`1<K>::.ctor()()*/;
                    this[0] = r0/*this._keys = $t2*/;
                    r0 = new Object()/*$t4 = new System.Void System.NativeObject::.ctor()()*/;
                    this[1] = r0/*this._keysToIndexMapping = $t4*/;
                    r0 = new Object()/*$t6 = new System.Void System.NativeObject::.ctor()()*/;
                    this[2] = r0/*this._internalObject = $t6*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 338: System.Void System.Collections.Generic.Dictionary`2::.ctor(System.Collections.Generic.Dictionary`2<K,V>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[337].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 339: System.Void XaeiOS.OSCorlib::Initialize()
{
    var r0;
    r0 = _[172]/*$t0 = XaeiOS.OSCorlib._initializing*/;
    if((!r0))
    {
        r0 = _[171]/*$t6 = XaeiOS.OSCorlib._initialized*/;
        if((!r0))
        {
            _[172] = 1/*XaeiOS.OSCorlib._initializing = 1*/;
            $$[407](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*System.Runtime.CompilerServices.RuntimeHelpers::Initialize()*/;
            $$[162](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*System.Threading.Thread::Initialize()*/;
            $$[215]()/*System.Threading.ThreadManager::Initialize()*/;
            $$[465](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*XaeiOS.SIPManager::Initialize()*/;
            $$[262]()/*System.Resources.ResourceManager::Initialize()*/;
            $$[393](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*XaeiOS.Process.DynamicLinker::Initialize()*/;
            $$[93](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*System.Reflection.ReflectionHelpers::Initialize()*/;
            LogWrite("TRACE", "Done intitializing OSCorlib")/*System.Diagnostics.Logging::Trace("Done intitializing OSCorlib")*/;
            _[171] = 1/*XaeiOS.OSCorlib._initialized = 1*/;
            return;

        }
        else
        {
            r0 = new Error("OSCorlib already initialized")/*$t11 = new System.Void System.NativeError::.ctor(System.String)("OSCorlib already initialized")*/;
            throw r0/*$t11*/;

        }

    }
    else
    {
        r0 = new Error("OSCorlib already initializing")/*$t5 = new System.Void System.NativeError::.ctor(System.String)("OSCorlib already initializing")*/;
        throw r0/*$t5*/;

    }

},
function()
 // 340: System.Void System.Boolean::.cctor()
{
    _[176] = "False"/*System.Boolean.FalseString = "False"*/;
    _[177] = "True"/*System.Boolean.TrueString = "True"*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 341: System.Void System.Threading.Monitor::Enter(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[345](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Threading.Monitor::GetThreadSync(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t1 = $rv*/;
                    $$[346].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 342: System.Void System.Threading.Monitor::Exit(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[345](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Threading.Monitor::GetThreadSync(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t1 = $rv*/;
                    $$[348].call(r0)/*$t1.Release()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 343: System.Boolean System.Threading.Monitor::TryEnter(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[345](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Threading.Monitor::GetThreadSync(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t1 = $rv*/;
                    $rv = $$[347].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = $t1.TryAcquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 344: System.Void System.Threading.Monitor::Wait(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[345](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = System.Threading.Monitor::GetThreadSync(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_0.1 = $rv*/;
                    $$[348].call(r0)/*V_0.1.Release()*/;
                    $$[346].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*V_0.1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 345: System.Threading.Monitor/MonitorLock System.Threading.Monitor::GetThreadSync(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = $f[2]/*V_0.1 = System.Runtime.XaeiOSObject::ToXaeiOSObject(obj)*/;
                    $rv = r2.$t/*$rv = V_0.1.get_ThreadSync()*/;
                }
                case 2:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    r1 = r0 != undefined/*V_3.1 = V_1.1.IsDefined()*/;
                    if(r1)
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = {$:_[180],0:null,1:null,2:0}/*$t4 = new System.Void System.Threading.Monitor/MonitorLock::.ctor()()*/;
                    $$[349].call(r1,0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null])/*$t4..ctor()*/;
                }
                case 4:
                {
                    r2.$t = r1/*V_0.1.set_ThreadSync($t4)*/;
                    r0 = r1/*V_1.2 = $t4*/;
                    $ep = 5;
                }
                case 5:
                {
                    return r0/*V_1.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 346: System.Void System.Threading.Monitor/MonitorLock::Acquire()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                }
                case 2:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = this[0]/*$t2 = this._owner*/;
                    if((!r0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;

                    }
                }
                case 3:
                {
                    r1 = this[0]/*$t4 = this._owner*/;
                    r0 = (!(r1 == r2))/*$ts0 = BooleanNot $t4 ValueEquality V_0.1*/;
                    $ep = 5;
                    continue $ctrl;
                }
                case 4:
                {
                    r0 = 0/*$ts0 = 0*/;
                    $ep = 5;
                }
                case 5:
                {
                    if(r0)
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;

                    }
                }
                case 6:
                {
                    this[0] = r2/*this._owner = V_0.1*/;
                    r0 = this[2]/*$t13 = this._count*/;
                    this[2] = (r0 + 1)/*this._count = $t13 Add 1*/;
                    return;
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[1]/*$t17 = this._waitingOwners*/;
                    r0.push(r2)/*$t17.Push(V_0.1)*/;
                }
                case 8:
                {
                    $ep = 2;
                    $$[595](r2)/*XaeiOS.SystemCalls::BlockTask(V_0.1)*/;
                    $$[596](0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 347: System.Boolean System.Threading.Monitor/MonitorLock::TryAcquire()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r2 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    r1 = this[0]/*$t2 = this._owner*/;
                    if((!(r1 == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;

                    }
                }
                case 2:
                {
                    this[0] = r2/*this._owner = V_0.1*/;
                    r1 = this[2]/*$t12 = this._count*/;
                    this[2] = (r1 + 1)/*this._count = $t12 Add 1*/;
                    r0 = 1/*V_1.1 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 3:
                {
                    r1 = this[0]/*$t17 = this._owner*/;
                    if((!(r1 == r2)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;

                    }
                }
                case 4:
                {
                    r1 = this[2]/*$t25 = this._count*/;
                    this[2] = (r1 + 1)/*this._count = $t25 Add 1*/;
                    r0 = 1/*V_1.2 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 5:
                {
                    r0 = 0/*V_1.3 = 0*/;
                    $ep = 6;
                }
                case 6:
                {
                    return r0/*V_1.4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 348: System.Void System.Threading.Monitor/MonitorLock::Release()
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                r1 = this[0]/*$t2 = this._owner*/;
                if((!(r1 == r0)))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = this[2]/*$t10 = this._count*/;
                this[2] = (r0 - 1)/*this._count = $t10 Subtract 1*/;
                if((!((r0 - 1) == 0)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                this[0] = null/*this._owner = null*/;
                r0 = this[1]/*$t23 = this._waitingOwners*/;
                r0 = r0.length/*$t24 = $t23.get_Length()*/;
                if((!(r0 > 0)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                $ep = 5;
                r0 = this[1]/*$t33 = this._waitingOwners*/;
                r0 = r0.shift()/*$tf35 = $t33.Shift()*/;
                this[0] = r0/*this._owner = $tf35*/;
                $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($tf35)*/;
            }
            case 5:
            {
                return;
            }
            case 6:
            {
                r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t37 = new System.Void System.Exception::.ctor(System.String)("Cannot release lock.  Current thread is not owner")*/;
                $$[18].call(r0,"Cannot release lock.  Current thread is not owner")/*$t37..ctor("Cannot release lock.  Current thread is not owner")*/;
                throw r0/*$t37*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 349: System.Void System.Threading.Monitor/MonitorLock::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = null/*this._owner = null*/;
                    r0 = new Array()/*$t4 = new System.Void System.NativeArray`1<XaeiOS.TaskHandle>::.ctor()()*/;
                    this[1] = r0/*this._waitingOwners = $t4*/;
                    this[2] = 0/*this._count = 0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 350: System.Void System.Runtime.XaeiOSObject::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 351: System.String System.Runtime.Assembly::get_Name()
{
    var r0;
    r0 = this[2]/*V_0.1 = this.<Name>k__BackingField*/;
    return r0/*V_0.1*/;

},
function(a0/*value*/)
 // 352: System.Void System.Runtime.Assembly::set_Name(System.String)
{
    this[2] = a0/*this.<Name>k__BackingField = value*/;
    return;

},
function()
 // 353: System.NativeArray`1<System.Runtime.Class> System.Runtime.Assembly::get_Classes()
{
    var r0;
    r0 = this[0]/*V_0.1 = this._classes*/;
    return r0/*V_0.1*/;

},
function()
 // 354: System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Assembly::get_CustomAttributes()
{
    var r0;
    r0 = this[1]/*V_0.1 = this._customAttributes*/;
    return r0/*V_0.1*/;

},
function()
 // 355: System.Void System.Runtime.Assembly::.ctor()
{
    var r0;
    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.Runtime.Class>::.ctor()()*/;
    this[0] = r0/*this._classes = $t1*/;
    r0 = new Array()/*$t3 = new System.Void System.NativeArray`1<System.Runtime.CustomAttribute>::.ctor()()*/;
    this[1] = r0/*this._customAttributes = $t3*/;
    $$[5].call(this)/*this..ctor()*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0)
// 356: System.Int32 System.Collections.Queue::get_Count()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._internalArray*/;
                    $rv = r0.length/*$rv = $t1.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 357: System.Boolean System.Collections.Queue::get_IsSynchronized()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this.<IsSynchronized>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 358: System.Void System.Collections.Queue::set_IsSynchronized(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this.<IsSynchronized>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 359: System.Object System.Collections.Queue::get_SyncRoot()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this.<SyncRoot>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 360: System.Void System.Collections.Queue::set_SyncRoot(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[2] = $f[2]/*this.<SyncRoot>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 361: System.Void System.Collections.Queue::Clear()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.Object>::.ctor()()*/;
                    this[0] = r0/*this._internalArray = $t1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 362: System.Object System.Collections.Queue::Clone()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[184],0:null,1:0,2:null}/*$t1 = new System.Void System.Collections.Queue::.ctor(System.Collections.ICollection)(this)*/;
                    $$[373].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*$t1..ctor(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1)
// 363: System.Boolean System.Collections.Queue::Contains(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = this[0]/*$t2 = this._internalArray*/;
                    $rv = r2.length/*$rv = $t2.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = $rv/*$t3 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r1 = 0/*V_1.1 = 0*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r2 = this[0]/*$t8 = this._internalArray*/;
                    r2 = r2[r0]/*$t10 = $t8.get_Item(V_0.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $rv = r2.$[2].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null,$f[2]])/*$rv = $t10.Equals(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r2 = $rv/*$t12 = $rv*/;
                    if((!r2))
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    r1 = 1/*V_1.2 = 1*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return r1/*V_1.3*/;
                }
                case 10:
                {
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 364: System.Void System.Collections.Queue::CopyTo(System.Array,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 365: System.Object System.Collections.Queue::Dequeue()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._internalArray*/;
                    $rv = r0.shift()/*$rv = $t1.Shift()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 366: System.Void System.Collections.Queue::Enqueue(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._internalArray*/;
                    r0.push($f[2])/*$t1.Push(obj)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 367: System.Collections.IEnumerator System.Collections.Queue::GetEnumerator()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 368: System.Object System.Collections.Queue::Peek()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[4].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0],[null,null])/*$rv = this.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*$t1 = $rv*/;
                    if((!(r1 > 0)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 5;
                    r1 = this[0]/*$t9 = this._internalArray*/;
                    r0 = r1[0]/*V_0.1 = $t9.get_Item(0)*/;
                    continue $ctrl;
                }
                case 4:
                {
                    r0 = null/*V_0.2 = null*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 369: System.Collections.Queue System.Collections.Queue::Synchronized(System.Collections.Queue)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return $f[2]/*queue*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 370: System.Object[] System.Collections.Queue::ToArray()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 371: System.Void System.Collections.Queue::TrimToSize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 372: System.Void System.Collections.Queue::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    r0 = new Array()/*$t2 = new System.Void System.NativeArray`1<System.Object>::.ctor()()*/;
                    this[0] = r0/*this._internalArray = $t2*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 373: System.Void System.Collections.Queue::.ctor(System.Collections.ICollection)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[372].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 374: T System.Collections.Generic.List`1::get_Item(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if(($f[2] < 0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = this.$[11].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t5 = $rv*/;
                    r1 = ($f[2] < r0)/*$ts0 = index LessThan $t5*/;
                    $ep = 5;
                    continue $ctrl;
                }
                case 4:
                {
                    r1 = 0/*$ts0 = 0*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if(r1)
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[0]/*$t11 = this._array*/;
                    r0 = r0[$f[2]]/*V_0.1 = $t11.get_Item(index)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return r0/*V_0.1*/;
                }
                case 8:
                {
                    $ep = 9;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.ArgumentException::.ctor(System.String)("Argument out of range")*/;
                    $$[286].call(r0,"Argument out of range")/*$t9..ctor("Argument out of range")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    throw r0/*$t9*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 375: System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if(($f[2] < 0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = this.$[11].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = this.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t5 = $rv*/;
                    r1 = ($f[2] < r0)/*$ts0 = index LessThan $t5*/;
                    $ep = 5;
                    continue $ctrl;
                }
                case 4:
                {
                    r1 = 0/*$ts0 = 0*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if(r1)
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[0]/*$t11 = this._array*/;
                    r0[$f[2]] = $f[3]/*$t11.set_Item(index, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                case 8:
                {
                    $ep = 9;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.ArgumentException::.ctor(System.String)("Argument out of range")*/;
                    $$[286].call(r0,"Argument out of range")/*$t9..ctor("Argument out of range")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    throw r0/*$t9*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 376: System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[4].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = this.get_Item(index)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t2 = $rv*/;
                    return r0/*box(K,$t2)*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 377: System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this.$[5].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3].valueOf()])/*this.set_Item(index, XaeiO.Compiler.CodeModel.UnboxExpression)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 378: System.Void System.Collections.Generic.List`1::Clear()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[1] = 0/*this._count = 0*/;
                    r0 = this[0]/*$t3 = this._array*/;
                    r0.length = 0/*$t3.set_Length(0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 379: System.Void System.Collections.Generic.List`1::Add(T)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._array*/;
                    r1 = this[1]/*$tf5 = this._count*/;
                    this[1] = (r1 + 1)/*this._count = $tf5 Add 1*/;
                    r0[r1] = $f[2]/*$t1.set_Item($tf5, item)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 380: System.Void System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this.$[9].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2].valueOf()])/*this.Add(XaeiO.Compiler.CodeModel.UnboxExpression)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 381: System.Int32 System.Collections.Generic.List`1::get_Count()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._count*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 382: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.List`1::GetEnumerator()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[187],0:0,1:null}/*$t1 = new System.Void System.Collections.Generic.List`1/Enumerator<T>::.ctor(System.Collections.Generic.List`1<T>)(this)*/;
                    $$[390].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*$t1..ctor(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 383: System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[187],0:0,1:null}/*$t1 = new System.Void System.Collections.Generic.List`1/Enumerator<T>::.ctor(System.Collections.Generic.List`1<T>)(this)*/;
                    $$[390].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*$t1..ctor(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 384: System.Void System.Collections.Generic.List`1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<K>::.ctor()()*/;
                    this[0] = r0/*this._array = $t1*/;
                    $$[5].call(this)/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[1] = 0/*this._count = 0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 385: T System.Collections.Generic.List`1/Enumerator::get_Current()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this._list*/;
                    r1 = this[0]/*$t3 = this._currentIndex*/;
                    $rv = r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*$rv = $t1.get_Item($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 386: System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[385].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = this.get_Current()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t1 = $rv*/;
                    return r0/*box(K,$t1)*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 387: System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[0]/*$t2 = this._currentIndex*/;
                    this[0] = (r1 + 1)/*this._currentIndex = $t2 Add 1*/;
                    r0 = this[1]/*$t7 = this._list*/;
                    $rv = r0.$[11].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t7.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t8 = $rv*/;
                    return ((r1 + 1) < r0)/*$t2 Add 1 LessThan $t8*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 388: System.Void System.Collections.Generic.List`1/Enumerator::Reset()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = -1/*this._currentIndex = -1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 389: System.Void System.Collections.Generic.List`1/Enumerator::Dispose()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = null/*this._list = null*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 390: System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[1] = $f[2]/*this._list = list*/;
                    this[0] = -1/*this._currentIndex = -1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 391: System.Void System.Collections.ArrayList::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[384].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 392: System.String System.Char::ToString()
{
    return this/*this*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 393: System.Void XaeiOS.Process.DynamicLinker::Initialize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = _[212]/*$t0 = XaeiOS.Process.DynamicLinker._initialized*/;
                    if((!r0))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = new Error("DynamicLinker is already initialized")/*$t5 = new System.Void System.NativeError::.ctor(System.String)("DynamicLinker is already initialized")*/;
                    throw r0/*$t5*/;
                }
                case 3:
                {
                    r0 = _[213]/*$t6 = XaeiOS.Process.DynamicLinker._initializing*/;
                    if((!r0))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = new Error("DynamicLinker is already initializing")/*$t11 = new System.Void System.NativeError::.ctor(System.String)("DynamicLinker is already initializing")*/;
                    throw r0/*$t11*/;
                }
                case 5:
                {
                    _[213] = 1/*XaeiOS.Process.DynamicLinker._initializing = 1*/;
                    _[214] = null/*XaeiOS.Process.DynamicLinker._osCorlibObjectImageData = null*/;
                    _[212] = 1/*XaeiOS.Process.DynamicLinker._initialized = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 394: XaeiOS.Process.ImageFormat.AssemblyName XaeiOS.Process.DynamicLinker::LoadObjectImage(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.Exception::.ctor(System.String)("Not yet implemented")*/;
                    $$[18].call(r0,"Not yet implemented")/*$t1..ctor("Not yet implemented")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 395: System.Void XaeiOS.Process.DynamicLinker::SetEntryPointObjectImage(XaeiOS.Process.ImageFormat.AssemblyName)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this._entryPointImage = entryPointImage*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 396: System.Void XaeiOS.Process.DynamicLinker::Link()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 397: System.Void XaeiOS.Process.DynamicLinker::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*initFunction*/)
 // 398: System.Void XaeiOS.Boot.BootManager::Boot(System.NativeFunction)
{
    var r0,r1,r2;
    r0 = _[216]/*$t0 = XaeiOS.Boot.BootManager._booting*/;
    if((!r0))
    {
        r0 = _[217]/*$t6 = XaeiOS.Boot.BootManager._booted*/;
        if((!r0))
        {
            r0 = (a0 == null)/*$t14 = System.NativeFunction::op_Equality(initFunction, null)*/;
            if((!r0))
            {
                _[216] = 1/*XaeiOS.Boot.BootManager._booting = 1*/;
                LogWrite("TRACE", "Initializing kernel")/*System.Diagnostics.Logging::Trace("Initializing kernel")*/;
                $$[591]()/*XaeiOS.SystemCalls::InitializeKernel()*/;
                LogWrite("TRACE", "Initializing OSCorlib")/*System.Diagnostics.Logging::Trace("Initializing OSCorlib")*/;
                $$[339]()/*XaeiOS.OSCorlib::Initialize()*/;
                LogWrite("TRACE", "Starting kernel")/*System.Diagnostics.Logging::Trace("Starting kernel")*/;
                r0 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                r1 = $$[516](0,Number.POSITIVE_INFINITY,null,[],[null,null,"XaeiOS.Kernel"])/*V_1.1 = XaeiOS.SIP::CreateSystemSIP("XaeiOS.Kernel")*/;
                r0 = $$[146](5,r1,r0,"XaeiOS.Kernel")/*V_2.1 = System.Threading.Thread::CreateSystemThread(5, V_1.1, V_0.1, "XaeiOS.Kernel")*/;
                $$[507].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*V_1.1.InitializeThread(V_2.1)*/;
                $$[466](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*XaeiOS.SIPManager::RegisterSIP(V_1.1)*/;
                $$[213](0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*System.Threading.ThreadManager::RegisterThread(V_2.1)*/;
                $$[263](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*System.Resources.ResourceManager::RegisterSIP(V_1.1)*/;
                r0 = {$:_[291]}/*$t30 = new System.Void XaeiOS.Security.RootIdentity::.ctor()()*/;
                $$[543].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t30..ctor()*/;
                r2 = {$:_[292],0:null}/*$t31 = new System.Void XaeiOS.Security.RootPrincipal::.ctor(XaeiOS.Security.RootIdentity)($t30)*/;
                $$[547].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t31..ctor($t30)*/;
                $$[501].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r2])/*V_1.1.AddPrincipal($t31)*/;
                $$[592]()/*XaeiOS.SystemCalls::StartKernel()*/;
                LogWrite("TRACE", "Creating the External process")/*System.Diagnostics.Logging::Trace("Creating the External process")*/;
                r0 = $$[599]()/*V_3.1 = XaeiOS.SystemCalls::GetExternalTask()*/;
                r1 = $$[516](0,Number.POSITIVE_INFINITY,null,[],[null,null,"External"])/*V_5.1 = XaeiOS.SIP::CreateSystemSIP("External")*/;
                r0 = $$[146](5,r1,r0,"External")/*V_6.1 = System.Threading.Thread::CreateSystemThread(5, V_5.1, V_3.1, "External")*/;
                $$[466](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*XaeiOS.SIPManager::RegisterSIP(V_5.1)*/;
                $$[263](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*System.Resources.ResourceManager::RegisterSIP(V_5.1)*/;
                $$[213](0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*System.Threading.ThreadManager::RegisterThread(V_6.1)*/;
                r0 = {$:_[264]}/*$t38 = new System.Void XaeiOS.Security.ExternalIdentity::.ctor()()*/;
                $$[453].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t38..ctor()*/;
                r2 = {$:_[265],0:null}/*$t39 = new System.Void XaeiOS.Security.ExternalPrincipal::.ctor(XaeiOS.Security.ExternalIdentity)($t38)*/;
                $$[457].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t39..ctor($t38)*/;
                $$[501].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r2])/*V_5.1.AddPrincipal($t39)*/;
                LogWrite("TRACE", "Starting boot loader")/*System.Diagnostics.Logging::Trace("Starting boot loader")*/;
                _[218] = a0/*XaeiOS.Boot.BootManager._initFunction = initFunction*/;
                r1 = $$[401]/*$t45 = new System.Void XaeiOS.TaskFunction::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Boot.BootManager::CreateInitProcess)*/;
                /*$t45..ctor(null, XaeiOS.Boot.BootManager::CreateInitProcess)*/r0 = $$[400]/*$t48 = new System.Void XaeiOS.TaskCallback::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Boot.BootManager::BootCallback)*/;
                /*$t48..ctor(null, XaeiOS.Boot.BootManager::BootCallback)*/r0 = $$[600](null,r1,r0,3,"XaeiOS.Boot")/*V_7.1 = XaeiOS.SystemCalls::CreateTask(null, $t45, $t48, 3, "XaeiOS.Boot")*/;
                $$[593](r0)/*XaeiOS.SystemCalls::StartTask(V_7.1)*/;
                return;

            }
            else
            {
                r0 = new Error("Cannot boot with null init function.")/*$t19 = new System.Void System.NativeError::.ctor(System.String)("Cannot boot with null init function.")*/;
                throw r0/*$t19*/;

            }

        }
        else
        {
            r0 = new Error("XaeiOS already booted.")/*$t11 = new System.Void System.NativeError::.ctor(System.String)("XaeiOS already booted.")*/;
            throw r0/*$t11*/;

        }

    }
    else
    {
        r0 = new Error("XaeiOS already booting.")/*$t5 = new System.Void System.NativeError::.ctor(System.String)("XaeiOS already booting.")*/;
        throw r0/*$t5*/;

    }

},
function()
 // 399: System.Void XaeiOS.Boot.BootManager::BootModuleEntryPoint()
{
    var r0;
    r0 = __module__.EntryPoint/*$t0 = XaeiOS.Boot.BootManager::GetModuleEntryPoint()*/;
    $$[398](r0)/*XaeiOS.Boot.BootManager::Boot($t0)*/;
    return;

},
function(a0/*taskId*/,a1/*taskName*/,a2/*returnValue*/,a3/*exitStatus*/)
 // 400: System.Void XaeiOS.Boot.BootManager::BootCallback(XaeiOS.TaskHandle,System.String,System.var,XaeiOS.TaskExitStatus)
{
    var r1,r0;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r1 = _[217]/*V_1.1 = XaeiOS.Boot.BootManager._booted*/;
                if(r1)
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = "reason unknown"/*V_0.1 = "reason unknown"*/;
                if((!(a3 == 1)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                if((a2 == null))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                $ep = 5;
                r0 = $$[8].call(a2,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*V_0.2 = returnValue.get_Message()*/;
            }
            case 5:
            {
                r1 = ("XaeiOS.Boot process failed to boot: " + r0)/*$t17 = System.String::Concat("XaeiOS.Boot process failed to boot: ", V_0.3)*/;
                r1 = new Error(r1)/*$t18 = new System.Void System.NativeError::.ctor(System.String)($t17)*/;
                throw r1/*$t18*/;
            }
            case 6:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 401: System.Void XaeiOS.Boot.BootManager::CreateInitProcess()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = {$:_[293],0:null}/*$t0 = new System.Void XaeiOS.Boot.BootManager/<>c__DisplayClass1::.ctor()()*/;
                    $$[549].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Boot.BootManager::InvokeStaticConstructorsAndCallInitFunction)*/;
                    $$[29](r0,null,$$[402])/*$t3..ctor(null, XaeiOS.Boot.BootManager::InvokeStaticConstructorsAndCallInitFunction)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t6 = new System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String)($t3, 3, "XaeiOS.Init")*/;
                    $$[520].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0,3,"XaeiOS.Init"])/*$t6..ctor($t3, 3, "XaeiOS.Init")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2[0] = r1/*$t0.initProcess = $t6*/;
                    r0 = r2[0]/*$t7 = $t0.initProcess*/;
                    r1 = {$:_[11],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.Boot.BootManager/<>c__DisplayClass1::<CreateInitProcess>b__0)*/;
                    $$[29](r1,r2,$$[548])/*$t9..ctor($t0, XaeiOS.Boot.BootManager/<>c__DisplayClass1::<CreateInitProcess>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[488].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$t7.add_Exited($t9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = r2[0]/*$t10 = $t0.initProcess*/;
                    $$[499].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,1])/*$t10.Start(1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    _[217] = 1/*XaeiOS.Boot.BootManager._booted = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0,r3)
// 402: System.Void XaeiOS.Boot.BootManager::InvokeStaticConstructorsAndCallInitFunction()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r3 = __module__.StaticConstructors/*V_0.1 = XaeiOS.Boot.BootManager::GetModuleStaticConstructors()*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = r3.length/*$t2 = V_0.1.get_Length()*/;
                    if((r0 < r1))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = _[218]/*$t6 = XaeiOS.Boot.BootManager._initFunction*/;
                    $rv = $$[28](null,r1)/*$rv = System.Delegate::Create(null, $t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t7 = $rv*/;
                    r2 = $$[422](_[0],0)/*$t9 = new System.Object[0]*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$rv = $t7.Invoke($t9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = $rv/*V_4.1 = $rv*/;
                    return;
                }
                case 6:
                {
                    $ep = 7;
                    r1 = r3[r0]/*$t13 = V_0.1.get_Item(V_1.3)*/;
                    $rv = $$[28](null,r1)/*$rv = System.Delegate::Create(null, $t13)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = $rv/*$t14 = $rv*/;
                    r2 = $$[422](_[0],0)/*$t16 = new System.Object[0]*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$rv = $t14.Invoke($t16)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r1 = $rv/*V_3.1 = $rv*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 403: System.String System.Int32::ToString()
{
    var r0;
    r0 = this.toString()/*V_0.1 = this.ToString()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f)
// 404: System.Int32 System.Int32::GetHashCode()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return this/*this*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 405: System.String System.NativeError::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.toString()/*$rv = this.NativeToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 406: System.Void System.Runtime.InteropServices.NativeDelegateAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 407: System.Void System.Runtime.CompilerServices.RuntimeHelpers::Initialize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    _[231] = 1/*System.Runtime.CompilerServices.RuntimeHelpers._hashCodeCounter = 1*/;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t1 = new System.Void System.Collections.Generic.Dictionary`2<System.Runtime.Class,System.Runtime.Class>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[230] = r0/*System.Runtime.CompilerServices.RuntimeHelpers._arrayTypeCache = $t1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 408: System.Int32 System.Runtime.CompilerServices.RuntimeHelpers::GenerateHashCode()
{
    var r0;
    r0 = _[231]/*$tf1 = System.Runtime.CompilerServices.RuntimeHelpers._hashCodeCounter*/;
    _[231] = (r0 + 1)/*System.Runtime.CompilerServices.RuntimeHelpers._hashCodeCounter = $tf1 Add 1*/;
    return r0/*$tf1*/;

},
function(a0/*obj*/)
 // 409: System.Int32 System.Runtime.CompilerServices.RuntimeHelpers::NativeGetHashCode(System.Object)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r1 = a0/*V_0.1 = System.Runtime.XaeiOSObject::ToXaeiOSObject(obj)*/;
                r0 = r1.$h/*$t3 = V_0.1.get_HashCode()*/;
                r0 = r0 != undefined/*V_2.1 = System.var::IsDefined($t3)*/;
                if(r0)
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                r0 = $$[408]()/*$t5 = System.Runtime.CompilerServices.RuntimeHelpers::GenerateHashCode()*/;
                r1.$h = r0/*V_0.1.set_HashCode($t5)*/;
            }
            case 3:
            {
                r0 = r1.$h/*V_1.1 = V_0.1.get_HashCode()*/;
                return r0/*V_1.1*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*obj*/,a1/*typeVtable*/,a2/*throwError*/)
 // 410: System.Object System.Runtime.CompilerServices.RuntimeHelpers::Cast(System.Runtime.XaeiOSObject,System.Runtime.VTable,System.Boolean)
{
    var r2,r3,r0,r4,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                if((!(a0 == null)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                if((!a2))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                r2 = {$:_[145],0:null,1:null,2:null,3:null}/*$t12 = new System.Void System.InvalidCastException::.ctor(System.String)("Cannot cast null")*/;
                $$[307].call(r2,"Cannot cast null")/*$t12..ctor("Cannot cast null")*/;
                throw r2/*$t12*/;
            }
            case 4:
            {
                r1 = null/*V_2.1 = null*/;
                $ep = 21;
                continue $ctrl;
            }
            case 5:
            {
                if((!(a1 == null)))
                {
                    $ep = 7;
                    continue $ctrl;

                }
                else
                {
                    $ep = 6;

                }
            }
            case 6:
            {
                r2 = {$:_[167],0:null,1:null,2:null,3:null}/*$t22 = new System.Void System.ExecutionEngineException::.ctor(System.String)("Cannot cast to null type")*/;
                $$[327].call(r2,"Cannot cast to null type")/*$t22..ctor("Cannot cast to null type")*/;
                throw r2/*$t22*/;
            }
            case 7:
            {
                r4 = a1.f/*$t24 = typeVtable.get_Flags()*/;
                r0 = a0.$/*V_1.1 = obj.get_VTable()*/;
                if((!(r0 == null)))
                {
                    $ep = 9;
                    continue $ctrl;

                }
                else
                {
                    $ep = 8;

                }
            }
            case 8:
            {
                r2 = {$:_[167],0:null,1:null,2:null,3:null}/*$t42 = new System.Void System.ExecutionEngineException::.ctor(System.String)("Could not find vtable for object")*/;
                $$[327].call(r2,"Could not find vtable for object")/*$t42..ctor("Could not find vtable for object")*/;
                throw r2/*$t42*/;
            }
            case 9:
            {
                if((!(r0 == null)))
                {
                    $ep = 13;
                    continue $ctrl;

                }
                else
                {
                    $ep = 10;

                }
            }
            case 10:
            {
                if((!a2))
                {
                    $ep = 12;
                    continue $ctrl;

                }
                else
                {
                    $ep = 11;

                }
            }
            case 11:
            {
                r3 = $$[422](_[118],4)/*V_4.1 = new System.String[4]*/;
                r3[0] = "Cannot cast "/*V_4.1[0] = "Cannot cast "*/;
                r2 = r0.c/*$t58 = V_1.3.get_Class()*/;
                r2 = $$[205].call(r2)/*$t59 = $t58.get_FullName()*/;
                r3[1] = r2/*V_4.1[1] = $t59*/;
                r3[2] = " to type "/*V_4.1[2] = " to type "*/;
                r2 = a1.c/*$t64 = typeVtable.get_Class()*/;
                r2 = $$[205].call(r2)/*$t65 = $t64.get_FullName()*/;
                r3[3] = r2/*V_4.1[3] = $t65*/;
                r2 = $$[254](r3)/*$t66 = System.String::NativeConcat(V_4.1)*/;
                r3 = {$:_[145],0:null,1:null,2:null,3:null}/*$t67 = new System.Void System.InvalidCastException::.ctor(System.String)($t66)*/;
                $$[307].call(r3,r2)/*$t67..ctor($t66)*/;
                throw r3/*$t67*/;
            }
            case 12:
            {
                r1 = null/*V_2.2 = null*/;
                $ep = 21;
                continue $ctrl;
            }
            case 13:
            {
                if((!(r0 == a1)))
                {
                    $ep = 15;
                    continue $ctrl;

                }
                else
                {
                    $ep = 14;

                }
            }
            case 14:
            {
                r1 = a0/*V_2.3 = obj*/;
                $ep = 21;
                continue $ctrl;
            }
            case 15:
            {
                if((!(!((r4 & 1) == 0))))
                {
                    $ep = 17;
                    continue $ctrl;

                }
                else
                {
                    $ep = 16;

                }
            }
            case 16:
            {
                r3 = $$[412](r0,a1)/*$t77 = System.Runtime.CompilerServices.RuntimeHelpers::ImplementsInterface(V_1.3, typeVtable)*/;
                r2 = (!r3)/*$ts0 = BooleanNot $t77*/;
                $ep = 18;
                continue $ctrl;
            }
            case 17:
            {
                r2 = 1/*$ts0 = 1*/;
                $ep = 18;
            }
            case 18:
            {
                if(r2)
                {
                    $ep = 19;

                }
                else
                {
                    $ep = 20;
                    continue $ctrl;

                }
            }
            case 19:
            {
                $ep = 9;
                r0 = r0.b/*V_1.2 = V_1.3.get_BaseVTable()*/;
                continue $ctrl;
            }
            case 20:
            {
                r1 = a0/*V_2.4 = obj*/;
                $ep = 21;
            }
            case 21:
            {
                return r1/*V_2.5*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*obj*/,a1/*typeVTable*/)
 // 411: System.Object System.Runtime.CompilerServices.RuntimeHelpers::TryCast(System.Runtime.XaeiOSObject,System.Runtime.VTable)
{
    var r0;
    r0 = $$[410](a0,a1,0)/*V_0.1 = System.Runtime.CompilerServices.RuntimeHelpers::Cast(obj, typeVTable, 0)*/;
    return r0/*V_0.1*/;

},
function(a0/*vtable*/,a1/*interfaceVtable*/)
 // 412: System.Boolean System.Runtime.CompilerServices.RuntimeHelpers::ImplementsInterface(System.Runtime.VTable,System.Runtime.VTable)
{
    var r2,r0,r3,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r2 = a0.i/*V_0.1 = vtable.get_Interfaces()*/;
                r3 = (function(obj){var keys = []; for(var i in obj){  if(i == "$"){ continue; } keys.push(i);}; return keys;})(r2)/*V_1.1 = System.Runtime.CompilerServices.RuntimeHelpers::GetKeys(V_0.1)*/;
                r0 = 0/*V_2.1 = 0*/;
                $ep = 2;
            }
            case 2:
            {
                if((r0 < r3.length))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                r1 = 0/*V_3.1 = 0*/;
                $ep = 6;
                continue $ctrl;
            }
            case 4:
            {
                r2 = _[r3[r0]]/*$t10 = System.Runtime.CompilerServices.RuntimeHelpers::GenerateCodeToDereferenceVTableDataPointer(V_1.1[V_2.3])*/;
                if((!(r2 == a1)))
                {
                    $ep = 7;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                r1 = 1/*V_3.2 = 1*/;
                $ep = 6;
            }
            case 6:
            {
                return r1/*V_3.3*/;
            }
            case 7:
            {
                r0 = (r0 + 1)/*V_2.2 = V_2.3 Add 1*/;
                $ep = 2;
                continue $ctrl;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 413: System.Boolean System.Runtime.CompilerServices.RuntimeHelpers::TypesEqual(System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!$f[2]))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r2 = (!($f[3] == null))/*$ts0 = BooleanNot b ValueEquality null*/;
                    $ep = 4;
                    continue $ctrl;
                }
                case 3:
                {
                    r2 = 0/*$ts0 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if(r2)
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = $f[2]["$"]/*$t13 = a.get_Item("$")*/;
                    r2 = $f[3]["$"]/*$t18 = b.get_Item("$")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = (r1 == r2)/*V_0.2 = $t13 ValueEquality $t18*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 7:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 414: System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()
{
    var r0;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = _[55]/*$t0 = System.Reflection.ReflectionHelpers._runtimeAssemblies*/;
                if((!(r0 == null)))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = new Array()/*$t7 = new System.Void System.NativeArray`1<System.Runtime.Assembly>::.ctor()()*/;
                _[55] = r0/*System.Reflection.ReflectionHelpers._runtimeAssemblies = $t7*/;
                $ep = 3;
            }
            case 3:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*name*/)
 // 415: System.Runtime.Assembly System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly(System.String)
{
    var r0,r1;
    r1 = {$:_[183],0:null,1:null,2:null}/*$t0 = new System.Void System.Runtime.Assembly::.ctor()()*/;
    $$[355].call(r1)/*$t0..ctor()*/;
    $$[352].call(r1,a0)/*$t0.set_Name(name)*/;
    r0 = _[55]/*$t2 = System.Reflection.ReflectionHelpers._runtimeAssemblies*/;
    r0.push(r1)/*$t2.Push($t0)*/;
    return r1/*$t0*/;

},
function(a0/*ns*/,a1/*name*/,a2/*assembly*/,a3/*vtableDataPointer*/,a4/*elementClass*/,a5/*isInterface*/,a6/*isArray*/)
 // 416: System.Runtime.Class System.Runtime.CompilerServices.RuntimeHelpers::CreateClass(System.String,System.String,System.Runtime.Assembly,System.UIntPtr,System.Runtime.Class,System.Boolean,System.Boolean)
{
    var r0,r1;
    r1 = {$:_[99],0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:null,8:null,9:0,10:0,11:0,12:null}/*$t0 = new System.Void System.Runtime.Class::.ctor()()*/;
    $$[211].call(r1)/*$t0..ctor()*/;
    $$[189].call(r1,a1)/*$t0.set_Name(name)*/;
    $$[191].call(r1,a0)/*$t0.set_Namespace(ns)*/;
    $$[187].call(r1,a2)/*$t0.set_Assembly(assembly)*/;
    $$[198].call(r1,a3)/*$t0.set_VTableDataPointer(vtableDataPointer)*/;
    r0 = _[a3]/*V_1.1 = System.Runtime.CompilerServices.RuntimeHelpers::GenerateCodeToDereferenceVTableDataPointer(vtableDataPointer)*/;
    $$[196].call(r1,r0)/*$t0.set_VTable(V_1.1)*/;
    r0.c = r1/*V_1.1.set_Class($t0)*/;
    $$[204].call(r1,a4)/*$t0.set_ElementClass(elementClass)*/;
    $$[200].call(r1,a5)/*$t0.set_IsInterface(isInterface)*/;
    $$[202].call(r1,a6)/*$t0.set_IsArray(isArray)*/;
    r0 = $$[353].call(a2)/*$t11 = assembly.get_Classes()*/;
    r0.push(r1)/*$t11.Push($t0)*/;
    return r1/*$t0*/;

},
function(a0/*declaringType*/,a1/*name*/,a2/*function*/,a3/*vtableSlot*/)
 // 417: System.Runtime.Method System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(System.Runtime.Class,System.String,System.NativeFunction,System.Int32)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r1 = {$:_[155],0:null,1:null,2:null,3:null,4:null,5:null,6:0}/*$t0 = new System.Void System.Runtime.Method::.ctor()()*/;
                $$[322].call(r1)/*$t0..ctor()*/;
                $$[233].call(r1,a1)/*$t0.set_Name(name)*/;
                $$[236].call(r1,a2)/*$t0.set_Function(function)*/;
                $$[321].call(r1,a3)/*$t0.set_VTableSlot(vtableSlot)*/;
                r0 = (a2 != null)/*$t6 = System.NativeFunction::op_Inequality(function, null)*/;
                if((!r0))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                a2["m"] = r1/*function.set_Item("m", $t0)*/;
            }
            case 3:
            {
                $$[229].call(r1,a0)/*$t0.set_DeclaringClass(declaringType)*/;
                r0 = $$[206].call(a0)/*$t15 = declaringType.get_Methods()*/;
                r0.push(r1)/*$t15.Push($t0)*/;
                return r1/*$t0*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*declaringType*/,a1/*name*/,a2/*function*/)
 // 418: System.Runtime.Constructor System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(System.Runtime.Class,System.String,System.NativeFunction)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r1 = {$:_[115],0:null,1:null,2:null,3:null,4:null,5:null}/*$t0 = new System.Void System.Runtime.Constructor::.ctor()()*/;
                $$[241].call(r1)/*$t0..ctor()*/;
                $$[233].call(r1,a1)/*$t0.set_Name(name)*/;
                $$[236].call(r1,a2)/*$t0.set_Function(function)*/;
                r0 = (a2 != null)/*$t5 = System.NativeFunction::op_Inequality(function, null)*/;
                if((!r0))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                a2["m"] = r1/*function.set_Item("m", $t0)*/;
            }
            case 3:
            {
                $$[229].call(r1,a0)/*$t0.set_DeclaringClass(declaringType)*/;
                r0 = $$[207].call(a0)/*$t14 = declaringType.get_Constructors()*/;
                r0.push(r1)/*$t14.Push($t0)*/;
                return r1/*$t0*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*declaringType*/,a1/*name*/,a2/*getMethod*/,a3/*setMethod*/)
 // 419: System.Runtime.Property System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(System.Runtime.Class,System.String,System.Runtime.Method,System.Runtime.Method)
{
    var r0,r1;
    r1 = {$:_[132],0:null,1:null,2:null,3:null,4:null,5:null}/*$t0 = new System.Void System.Runtime.Property::.ctor()()*/;
    $$[285].call(r1)/*$t0..ctor()*/;
    $$[274].call(r1,a0)/*$t0.set_DeclaringClass(declaringType)*/;
    $$[278].call(r1,a1)/*$t0.set_Name(name)*/;
    $$[281].call(r1,a2)/*$t0.set_GetMethod(getMethod)*/;
    $$[283].call(r1,a3)/*$t0.set_SetMethod(setMethod)*/;
    r0 = $$[208].call(a0)/*$t6 = declaringType.get_Properties()*/;
    r0.push(r1)/*$t6.Push($t0)*/;
    return r1/*$t0*/;

},
function(a0/*attributeProvider*/,a1/*constructor*/)
 // 420: System.Runtime.CustomAttribute System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(System.Runtime.ICustomAttributeProvider,System.Runtime.Method)
{
    var r0,r1;
    r1 = {$:_[137],0:null}/*$t0 = new System.Void System.Runtime.CustomAttribute::.ctor()()*/;
    $$[292].call(r1)/*$t0..ctor()*/;
    $$[291].call(r1,a1)/*$t0.set_Constructor(constructor)*/;
    r0 = a0.$.i[98][0].call(a0)/*$t3 = attributeProvider.get_CustomAttributes()*/;
    r0.push(r1)/*$t3.Push($t0)*/;
    return r1/*$t0*/;

},
function(a0/*function*/)
 // 421: System.String System.Runtime.CompilerServices.RuntimeHelpers::GetMethodNameForStackTrace(System.NativeFunction)
{
    var r1,r0;
    r1 = (a0 == null)/*$t2 = System.NativeFunction::op_Equality(function, null)*/;
    if((!r1))
    {
        r1 = a0["m"]/*V_0.1 = function.get_Item("m")*/;
        if((!(r1 == null)))
        {
            r0 = $$[234].call(r1)/*V_2.2 = V_0.1.get_FullName()*/;

        }
        else
        {
            r1 = a0.toString()/*$t19 = function.NativeToString()*/;
            r1 = ("No function metadata available for function: " + r1)/*$t20 = System.String::Concat("No function metadata available for function: ", $t19)*/;
            LogWrite("DEBUG", r1)/*System.Diagnostics.Logging::Debug($t20)*/;
            r0 = null/*V_2.1 = null*/;

        }
        return r0/*V_2.3*/;

    }
    else
    {
        r1 = {$:_[133],0:null,1:null,2:null,3:null}/*$t7 = new System.Void System.ArgumentException::.ctor(System.String)("function cannot be null")*/;
        $$[286].call(r1,"function cannot be null")/*$t7..ctor("function cannot be null")*/;
        throw r1/*$t7*/;

    }

},
function(a0/*elementTypeVTable*/,a1/*length*/)
 // 422: System.Array System.Runtime.CompilerServices.RuntimeHelpers::CreateArray(System.Runtime.VTable,System.Int32)
{
    var r1,r2,r3,r4,r5,r0;
    r5 = a0.c/*V_0.1 = elementTypeVTable.get_Class()*/;
    r1 = _[230]/*$t2 = System.Runtime.CompilerServices.RuntimeHelpers._arrayTypeCache*/;
    r1 = r1.$[8].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r5])/*$t3 = $t2.ContainsKey(V_0.1)*/;
    if((!r1))
    {
        r1 = $$[54](0,Number.POSITIVE_INFINITY,null,[],[null,null,_[60]])/*$t17 = System.Type::GetTypeFromHandle(System.Array)*/;
        r1 = r1.$[11].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*V_2.1 = $t17.get_TypeHandle()*/;
        r4 = $$[190].call(r5)/*$t20 = V_0.1.get_Namespace()*/;
        r3 = $$[188].call(r5)/*$t21 = V_0.1.get_Name()*/;
        r2 = $$[186].call(r5)/*$t22 = V_0.1.get_Assembly()*/;
        r1 = r1.c/*$t23 = V_2.1.get_Class()*/;
        r1 = $$[197].call(r1)/*$t24 = $t23.get_VTableDataPointer()*/;
        r0 = $$[416](r4,r3,r2,r1,r5,0,1)/*V_1.2 = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass($t20, $t21, $t22, $t24, V_0.1, 0, 1)*/;
        r1 = _[230]/*$t28 = System.Runtime.CompilerServices.RuntimeHelpers._arrayTypeCache*/;
        r1.$[6].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r5,r0])/*$t28.set_Item(V_0.1, V_1.2)*/;

    }
    else
    {
        r1 = _[230]/*$t7 = System.Runtime.CompilerServices.RuntimeHelpers._arrayTypeCache*/;
        r0 = r1.$[5].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r5])/*V_1.1 = $t7.get_Item(V_0.1)*/;

    }
    r1 = new Array(a1)/*$t10 = new System.Void System.NativeArray::.ctor(System.Int32)(length)*/;
    r2 = $$[195].call(r0)/*$t13 = V_1.3.get_VTable()*/;
    r1.$ = r2/*$t10.set_VTable($t13)*/;
    return r1/*$t10*/;

},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 423: System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $$[422](_[0],4)/*V_4.1 = new System.Object[4]*/;
                    r0[0] = "Initializing array "/*V_4.1[0] = "Initializing array "*/;
                    r0[1] = $f[2]/*V_4.1[1] = array*/;
                    r0[2] = " with value "/*V_4.1[2] = " with value "*/;
                    r0[3] = $f[3]/*V_4.1[3] = box(System.RuntimeFieldHandle,fldHandle)*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.String::Concat(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t11 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t11)*/;
                    $rv = $f[2].$/*$rv = array.get_VTable()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t61 = $rv*/;
                    r0 = r0.c/*V_16.1 = $t61.get_Class()*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass(V_16.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*V_17.1 = $rv*/;
                    r0 = r1[1]/*V_15.1 = (System.Reflection.RuntimeType)V_17.1._class*/;
                    $rv = $$[201].call(r0)/*$rv = V_15.1.get_IsArray()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*V_5.1 = $rv*/;
                    if(r0)
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = r1[1]/*V_14.1 = (System.Reflection.RuntimeType)V_17.1._class*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Array was not marked with class that was an array.  Class: "])/*$rv = System.String::SafeToString("Array was not marked with class that was an array.  Class: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = $rv/*$t59 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.String::SafeToString(V_14.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = $rv/*$t60 = $rv*/;
                    r0 = (r1 + r0)/*V_13.1 = System.String::Concat($t59, $t60)*/;
                    r1 = {$:_[92],0:null,1:null,2:null,3:null}/*$t20 = new System.Void System.SystemException::.ctor(System.String)(V_13.1)*/;
                    $$[170].call(r1,r0)/*$t20..ctor(V_13.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    throw r1/*$t20*/;
                }
                case 10:
                {
                    $ep = 11;
                    r0 = r1[1]/*V_12.1 = (System.Reflection.RuntimeType)V_17.1._class*/;
                    $rv = $$[203].call(r0)/*$rv = V_12.1.get_ElementClass()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    r0 = $rv/*$t22 = $rv*/;
                    if((!(r0 == null)))
                    {
                        $ep = 16;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 12;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = r1[1]/*V_11.1 = (System.Reflection.RuntimeType)V_17.1._class*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Array was not marked with class that did not have an element class.  Class: "])/*$rv = System.String::SafeToString("Array was not marked with class that did not have an element class.  Class: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r1 = $rv/*$t57 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.String::SafeToString(V_11.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r0 = $rv/*$t58 = $rv*/;
                    r0 = (r1 + r0)/*V_10.1 = System.String::Concat($t57, $t58)*/;
                    r1 = {$:_[92],0:null,1:null,2:null,3:null}/*$t32 = new System.Void System.SystemException::.ctor(System.String)(V_10.1)*/;
                    $$[170].call(r1,r0)/*$t32..ctor(V_10.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    throw r1/*$t32*/;
                }
                case 16:
                {
                    $ep = 17;
                    r0 = r1[1]/*V_9.1 = (System.Reflection.RuntimeType)V_17.1._class*/;
                    $rv = $$[203].call(r0)/*$rv = V_9.1.get_ElementClass()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r0 = $rv/*$t34 = $rv*/;
                    r0 = $$[195].call(r0)/*$t36 = $t34.get_VTable()*/;
                    $rv = r0.c/*$rv = $t36.get_Class()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r0 = $rv/*$t56 = $rv*/;
                    $rv = $$[98](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.Reflection.ReflectionHelpers::GetTypeFromClass($t56)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r1 = $rv/*V_8.1 = $rv*/;
                    $rv = $$[96](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"System.Int32"])/*$rv = System.Reflection.ReflectionHelpers::GetTypeByName("System.Int32")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    r0 = $rv/*V_7.1 = $rv*/;
                    if((!(r1 == r0)))
                    {
                        $ep = 22;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 21;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 21:
                {
                    $$[424]($f[2],$f[3])/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeInt32Array(array, fldHandle)*/;
                    return;
                }
                case 22:
                {
                    $ep = 23;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Cannot initialize array of type: "])/*$rv = System.String::SafeToString("Cannot initialize array of type: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r2 = $rv/*$t54 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$rv = System.String::SafeToString(V_8.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r0 = $rv/*$t55 = $rv*/;
                    r0 = (r2 + r0)/*V_6.1 = System.String::Concat($t54, $t55)*/;
                    r1 = {$:_[92],0:null,1:null,2:null,3:null}/*$t53 = new System.Void System.SystemException::.ctor(System.String)(V_6.1)*/;
                    $$[170].call(r1,r0)/*$t53..ctor(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    throw r1/*$t53*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*intArray*/,a1/*initialValue*/)
 // 424: System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeInt32Array(System.Int32[],System.Byte[])
{
    
    var arrayIndex = 0;
    for (var i = 0; i < a1.length; i++)
    {
        var whichByte = i % 4;
        if (whichByte == 0)
        {
            a0[arrayIndex] = 0;
        }
        a0[arrayIndex] |= a1[i] << (whichByte * 8);
        if (whichByte == 3)
        {
            arrayIndex++;
        }
    }/*System.Runtime.CompilerServices.RuntimeHelpers::GenerateCodeToInitializeInt32Array(intArray, initialValue)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 425: System.Void System.IO.Stream::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 426: System.Int32 XaeiOS.TaskHandle::get_ID()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return this/*this*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 427: System.Void XaeiOS.TaskHandle::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 428: System.Void System.Threading.Condition::Signal()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._lock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = this[1]/*$t3 = this._waitingList*/;
                    $rv = r0.length/*$rv = $t3.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    if((!(r0 > 0)))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[1]/*$t12 = this._waitingList*/;
                    $rv = r0.shift()/*$rv = $t12.Shift()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t13 = $rv*/;
                    $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($t13)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[0]/*$t15 = this._lock*/;
                    $$[72].call(r0)/*$t15.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 429: System.Void System.Threading.Condition::Await()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._lock*/;
                    $$[72].call(r0)/*$t1.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $$[598]()/*V_0.1 = XaeiOS.SystemCalls::GetCurrentTask()*/;
                    r0 = this[1]/*$t4 = this._waitingList*/;
                    r0.push(r1)/*$t4.Push(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[595](r1)/*XaeiOS.SystemCalls::BlockTask(V_0.1)*/;
                    $$[596](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*XaeiOS.SystemCalls::Yield()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[0]/*$t6 = this._lock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t6.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 430: System.Void System.Threading.Condition::.ctor(System.Threading.Lock)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this._lock = l*/;
                    r0 = new Array()/*$t4 = new System.Void System.NativeArray`1<XaeiOS.TaskHandle>::.ctor()()*/;
                    this[1] = r0/*this._waitingList = $t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 431: System.Void System.Threading.TimedCondition::Await(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $end = Number.POSITIVE_INFINITY;
    $ctrl:
    do
    {
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = $$[109].call($$[432],this)/*$t3 = new System.Void System.NativeVoidDelegate::.ctor(System.Object,System.IntPtr)(this, System.Threading.TimedCondition::Unblock)*/;
                    /*$t3..ctor(this, System.Threading.TimedCondition::Unblock)*/}
                case 2:
                {
                    $ep = 3;
                    r0 = $$[110](r0)/*$t4 = System.NativeFunction::op_Explicit($t3)*/;
                    r0 = setTimeout(r0, $f[2])/*$t7 = System.Global::SetTimeout($t4, (System.Int64)timeoutMs)*/;
                }
                case 3:
                {
                    $ep = 4;
                    this[2] = r0/*this._timeoutId = $t7*/;
                    $rv = $$[598]()/*$rv = XaeiOS.SystemCalls::GetCurrentTask()*/;
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t9 = $rv*/;
                    this[3] = r0/*this._task = $t9*/;
                    this[4] = 0/*this._timedOut = 0*/;
                    $$[429].call(this,0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*this.Await()*/;
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[2]/*$t14 = this._timeoutId*/;
                    clearTimeout(r0)/*System.Global::ClearTimeout($t14)*/;
                }
                case 6:
                {
                    this[2] = null/*this._timeoutId = null*/;
                    this[3] = null/*this._task = null*/;
                    r0 = this[4]/*$t20 = this._timedOut*/;
                    if((!r0))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 7;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = {$:_[236],0:null,1:null,2:null,3:null}/*$t24 = new System.Void System.Threading.ConditionTimedOutException::.ctor()()*/;
                    $$[434].call(r0,0,Number.POSITIVE_INFINITY,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t24..ctor()*/;
                }
                case 8:
                {
                    throw r0/*$t24*/;
                }
                case 9:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 432: System.Void System.Threading.TimedCondition::Unblock()
{
    var r0;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = this[2]/*$t1 = this._timeoutId*/;
                if((r0 == null))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                this[4] = 1/*this._timedOut = 1*/;
                r0 = this[3]/*$t8 = this._task*/;
                $$[594](r0)/*XaeiOS.SystemCalls::ScheduleTask($t8)*/;
            }
            case 3:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 433: System.Void System.Threading.TimedCondition::.ctor(System.Threading.Lock)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[430].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*this..ctor(l)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[2] = null/*this._timeoutId = null*/;
                    this[3] = null/*this._task = null*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 434: System.Void System.Threading.ConditionTimedOutException::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[17].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 435: System.String System.Int64::ToString()
{
    var r0;
    r0 = this.toString()/*V_0.1 = this.ToString()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 436: System.Boolean System.WeakReference::get_IsAlive()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.NotSupportedException::.ctor(System.String)("WeakReference not supported")*/;
                    $$[305].call(r0,"WeakReference not supported")/*$t1..ctor("WeakReference not supported")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 437: System.Object System.WeakReference::get_Target()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t1 = new System.Void System.NotSupportedException::.ctor(System.String)("WeakReference not supported")*/;
                    $$[305].call(r0,"WeakReference not supported")/*$t1..ctor("WeakReference not supported")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 438: System.Void System.WeakReference::.ctor(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[5].call(this)/*this..ctor()*/;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t2 = new System.Void System.NotSupportedException::.ctor(System.String)("WeakReference not supported")*/;
                    $$[305].call(r0,"WeakReference not supported")/*$t2..ctor("WeakReference not supported")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t2*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 439: System.Void System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 440: System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._declaringType*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 441: System.String System.Reflection.RuntimeMethodInfo::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._method*/;
                    $rv = $$[232].call(r0)/*$rv = $t1.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 442: System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Object[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = this.$[5].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = this.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    r0 = ("Invoking method through reflection: " + r0)/*$t3 = System.String::Concat("Invoking method through reflection: ", $t2)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[0]/*$t5 = this._method*/;
                    $rv = $$[101](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::TrampolineInvokeMethod($t5, self, args)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 443: System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._method*/;
                    $rv = $$[107](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2],$f[3]])/*$rv = System.Reflection.ReflectionHelpers::IsDefined($t1, attributeType, inherit)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 444: System.Void System.Reflection.RuntimeMethodInfo::.ctor(System.Runtime.Method,System.Reflection.RuntimeType)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[185].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._method = method*/;
                    this[1] = $f[3]/*this._declaringType = declaringType*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 445: System.Boolean System.CLSCompliantAttribute::get_IsCompliant()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._isCompliant*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 446: System.Void System.CLSCompliantAttribute::.ctor(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[0] = $f[2]/*this._isCompliant = isCompliant*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 447: System.Object System.Threading.ThreadAbortException::get_ExceptionState()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[4]/*V_0.1 = this._exceptionState*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 448: System.Void System.Threading.ThreadAbortException::.ctor(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[169].call(this)/*this..ctor()*/;
                    this[4] = $f[2]/*this._exceptionState = exceptionState*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 449: System.Void System.Threading.ThreadAbortException::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[448].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,null])/*this..ctor(null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 450: System.String XaeiOS.Security.ExternalIdentity::get_AuthenticationType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return null/*null*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 451: System.Boolean XaeiOS.Security.ExternalIdentity::get_IsAuthenticated()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return 0/*0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 452: System.String XaeiOS.Security.ExternalIdentity::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return "External"/*"External"*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 453: System.Void XaeiOS.Security.ExternalIdentity::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 454: System.Security.Principal.IIdentity XaeiOS.Security.ExternalPrincipal::get_Identity()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this.<Identity>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 455: System.Void XaeiOS.Security.ExternalPrincipal::set_Identity(System.Security.Principal.IIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this.<Identity>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 456: System.Boolean XaeiOS.Security.ExternalPrincipal::IsInRole(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 457: System.Void XaeiOS.Security.ExternalPrincipal::.ctor(XaeiOS.Security.ExternalIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[5].call(this)/*this..ctor()*/;
                    $$[455].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*this.set_Identity(identity)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 458: System.Void System.Security.SecurityException::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[18].call(this,$f[2])/*this..ctor(message)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 459: XaeiOS.DataStructures.DoublyLinkedListItem`1<T> XaeiOS.DataStructures.DoublyLinkedList`1::get_Head()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._head*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 460: System.Int32 XaeiOS.DataStructures.DoublyLinkedList`1::get_Count()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[2]/*$t1 = this._lock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[3]/*V_0.1 = this._count*/;
                    r0 = this[2]/*$t5 = this._lock*/;
                    $$[72].call(r0)/*$t5.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return r1/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 461: System.Void XaeiOS.DataStructures.DoublyLinkedList`1::Add(T)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[2]/*$t1 = this._lock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = this[0]/*$t3 = this._head*/;
                    if((!(r0 == null)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[268],0:false,1:null,2:null}/*$t10 = new System.Void XaeiOS.DataStructures.DoublyLinkedListItem`1<T>::.ctor()()*/;
                    $$[464].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t10..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0[0] = $f[2]/*$t10.Data = item*/;
                    this[1] = r0/*this._tail = $t10*/;
                    this[0] = r0/*this._head = $t10*/;
                    $ep = 7;
                    continue $ctrl;
                }
                case 5:
                {
                    $ep = 6;
                    r1 = {$:_[268],0:false,1:null,2:null}/*$t22 = new System.Void XaeiOS.DataStructures.DoublyLinkedListItem`1<T>::.ctor()()*/;
                    $$[464].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t22..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r1[0] = $f[2]/*$t22.Data = item*/;
                    r0 = this[1]/*$t25 = this._tail*/;
                    r0[2] = r1/*$t25.Next = $t22*/;
                    r0 = this[1]/*$t27 = this._tail*/;
                    r1[1] = r0/*$t22.Previous = $t27*/;
                    this[1] = r1/*this._tail = $t22*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[3]/*$t17 = this._count*/;
                    this[3] = (r0 + 1)/*this._count = $t17 Add 1*/;
                    r0 = this[2]/*$t21 = this._lock*/;
                    $$[72].call(r0)/*$t21.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 462: System.Void XaeiOS.DataStructures.DoublyLinkedList`1::Remove(T)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[293](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,"Tried to remove null item from DoublyLinkedList",(!($f[2] == null))])/*System.Diagnostics.Debug::Assert("Tried to remove null item from DoublyLinkedList", BooleanNot box(K,item) ValueEquality null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[2]/*$t10 = this._lock*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null])/*$t10.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = this[0]/*V_0.1 = this._head*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((!(r0 == null)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = this[2]/*$t20 = this._lock*/;
                    $$[72].call(r1)/*$t20.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = {$:_[133],0:null,1:null,2:null,3:null}/*$t22 = new System.Void System.ArgumentException::.ctor(System.String)("Item is not in the list")*/;
                    $$[286].call(r1,"Item is not in the list")/*$t22..ctor("Item is not in the list")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    throw r1/*$t22*/;
                }
                case 8:
                {
                    $ep = 9;
                    r1 = r0[0]/*$t23 = V_0.3.Data*/;
                    $rv = r1.$[2].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,$f[2]])/*$rv = $t23.Equals(box(K,item))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r1 = $rv/*$t26 = $rv*/;
                    if((!r1))
                    {
                        $ep = 18;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 10;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 10:
                {
                    r1 = r0[1]/*V_1.1 = V_0.3.Previous*/;
                    r2 = r0[2]/*V_2.1 = V_0.3.Next*/;
                    if((!(r1 == null)))
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    this[0] = r2/*this._head = V_2.1*/;
                    $ep = 13;
                    continue $ctrl;
                }
                case 12:
                {
                    r1[2] = r2/*V_1.1.Next = V_2.1*/;
                    $ep = 13;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    if((!(r2 == null)))
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 14;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 14:
                {
                    this[1] = r1/*this._tail = V_1.1*/;
                    $ep = 16;
                    continue $ctrl;
                }
                case 15:
                {
                    r2[1] = r1/*V_2.1.Previous = V_1.1*/;
                    $ep = 16;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r1 = this[3]/*$t48 = this._count*/;
                    this[3] = (r1 - 1)/*this._count = $t48 Subtract 1*/;
                    r1 = this[2]/*$t52 = this._lock*/;
                    $$[72].call(r1)/*$t52.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    return;
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $$[422](_[0],4)/*V_4.1 = new System.Object[4]*/;
                    r1 = r0[0]/*$t56 = V_0.3.Data*/;
                    r2[0] = r1/*V_4.1[0] = box(K,$t56)*/;
                    r2[1] = " is not equal to "/*V_4.1[1] = " is not equal to "*/;
                    r2[2] = $f[2]/*V_4.1[2] = box(K,item)*/;
                    r2[3] = ".  Trying next guy"/*V_4.1[3] = ".  Trying next guy"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,r2])/*$rv = System.String::Concat(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    r1 = $rv/*$t65 = $rv*/;
                    LogWrite("TRACE", r1)/*System.Diagnostics.Logging::Trace($t65)*/;
                    r0 = r0[2]/*V_0.2 = V_0.3.Next*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 463: System.Void XaeiOS.DataStructures.DoublyLinkedList`1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[5].call(this)/*this..ctor()*/;
                    this[3] = 0/*this._count = 0*/;
                    this[1] = null/*this._tail = null*/;
                    this[0] = null/*this._head = null*/;
                    r0 = {$:_[21],0:null,1:null}/*$t8 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t8..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[2] = r0/*this._lock = $t8*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 464: System.Void XaeiOS.DataStructures.DoublyLinkedListItem`1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 465: System.Void XaeiOS.SIPManager::Initialize()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t0 = new System.Void System.Collections.Generic.Dictionary`2<System.Int32,XaeiOS.SIP>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[275] = r0/*XaeiOS.SIPManager._sips = $t0*/;
                    _[276] = 0/*XaeiOS.SIPManager._pidCounter = 0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 466: System.Void XaeiOS.SIPManager::RegisterSIP(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $f[2][5]/*V_2.1 = sip._pid*/;
                    if((r0 == -1))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $$[470]()/*V_0.1 = XaeiOS.SIPManager::GetPID()*/;
                    $$[472].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*sip.set_PID(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = _[275]/*$t9 = XaeiOS.SIPManager._sips*/;
                    r0.$[6].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1,$f[2]])/*$t9.set_Item(V_0.1, sip)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                case 5:
                {
                    $ep = 6;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.ArgumentException::.ctor(System.String)("SIP is already registered.")*/;
                    $$[286].call(r0,"SIP is already registered.")/*$t6..ctor("SIP is already registered.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    throw r0/*$t6*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 467: System.Void XaeiOS.SIPManager::UnregisterSIP(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[275]/*$t0 = XaeiOS.SIPManager._sips*/;
                    r1 = $f[2][5]/*V_0.1 = sip._pid*/;
                    r0.$[10].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*$t0.Remove(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 468: XaeiOS.SIP[] XaeiOS.SIPManager::GetSIPs()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[275]/*$t0 = XaeiOS.SIPManager._sips*/;
                    $rv = $$[336].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = $t0.GetValues()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 469: XaeiOS.SIP XaeiOS.SIPManager::GetSIP(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[275]/*$t0 = XaeiOS.SIPManager._sips*/;
                    $rv = r0.$[5].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$rv = $t0.get_Item(id)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 470: System.Int32 XaeiOS.SIPManager::GetPID()
{
    var r0;
    r0 = _[276]/*$tf1 = XaeiOS.SIPManager._pidCounter*/;
    _[276] = (r0 + 1)/*XaeiOS.SIPManager._pidCounter = $tf1 Add 1*/;
    return r0/*$tf1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 471: System.Int32 XaeiOS.SIP::get_PID()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[5]/*V_0.1 = this._pid*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 472: System.Void XaeiOS.SIP::set_PID(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[5] = $f[2]/*this._pid = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 473: System.String XaeiOS.SIP::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[6]/*V_0.1 = this._name*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 474: System.Boolean XaeiOS.SIP::get_IsDaemon()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[11]/*V_0.1 = this.<IsDaemon>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 475: System.Void XaeiOS.SIP::set_IsDaemon(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[11] = $f[2]/*this.<IsDaemon>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 476: System.Void XaeiOS.SIP::add_QuitSignal(XaeiOS.Process.SignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[7]/*$t5 = this._quitSignal*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[7] = $$[410](r0,_[283],true)/*this._quitSignal = (XaeiOS.Process.SignalHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 477: System.Void XaeiOS.SIP::remove_QuitSignal(XaeiOS.Process.SignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[7]/*$t5 = this._quitSignal*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[7] = $$[410](r0,_[283],true)/*this._quitSignal = (XaeiOS.Process.SignalHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 478: System.Void XaeiOS.SIP::add__quitSignal(XaeiOS.Process.SignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[7]/*$t2 = this._quitSignal*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[7] = $$[410](r0,_[283],true)/*this._quitSignal = (XaeiOS.Process.SignalHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 479: System.Void XaeiOS.SIP::remove__quitSignal(XaeiOS.Process.SignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[7]/*$t2 = this._quitSignal*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[7] = $$[410](r0,_[283],true)/*this._quitSignal = (XaeiOS.Process.SignalHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 480: System.Void XaeiOS.SIP::add_CustomSignal(XaeiOS.Process.CustomSignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[8]/*$t5 = this._customSignal*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[8] = $$[410](r0,_[284],true)/*this._customSignal = (XaeiOS.Process.CustomSignalHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 481: System.Void XaeiOS.SIP::remove_CustomSignal(XaeiOS.Process.CustomSignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[8]/*$t5 = this._customSignal*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[8] = $$[410](r0,_[284],true)/*this._customSignal = (XaeiOS.Process.CustomSignalHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 482: System.Void XaeiOS.SIP::add__customSignal(XaeiOS.Process.CustomSignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[8]/*$t2 = this._customSignal*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[8] = $$[410](r0,_[284],true)/*this._customSignal = (XaeiOS.Process.CustomSignalHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 483: System.Void XaeiOS.SIP::remove__customSignal(XaeiOS.Process.CustomSignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[8]/*$t2 = this._customSignal*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[8] = $$[410](r0,_[284],true)/*this._customSignal = (XaeiOS.Process.CustomSignalHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 484: System.Void XaeiOS.SIP::add_Exiting(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[9]/*$t5 = this._exiting*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[9] = $$[410](r0,_[11],true)/*this._exiting = (System.EventHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 485: System.Void XaeiOS.SIP::remove_Exiting(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[9]/*$t5 = this._exiting*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[9] = $$[410](r0,_[11],true)/*this._exiting = (System.EventHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 486: System.Void XaeiOS.SIP::add__exiting(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[9]/*$t2 = this._exiting*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[9] = $$[410](r0,_[11],true)/*this._exiting = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 487: System.Void XaeiOS.SIP::remove__exiting(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[9]/*$t2 = this._exiting*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[9] = $$[410](r0,_[11],true)/*this._exiting = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 488: System.Void XaeiOS.SIP::add_Exited(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[10]/*$t5 = this._exited*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[10] = $$[410](r0,_[11],true)/*this._exited = (System.EventHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 489: System.Void XaeiOS.SIP::remove_Exited(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    r0 = this[10]/*$t5 = this._exited*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t5, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    this[10] = $$[410](r0,_[11],true)/*this._exited = (System.EventHandler)$t7*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 490: System.Void XaeiOS.SIP::add__exited(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[10]/*$t2 = this._exited*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[10] = $$[410](r0,_[11],true)/*this._exited = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 491: System.Void XaeiOS.SIP::remove__exited(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[10]/*$t2 = this._exited*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[10] = $$[410](r0,_[11],true)/*this._exited = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 492: System.IO.TextWriter XaeiOS.SIP::get_Output()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[12]/*V_0.1 = this.<Output>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 493: System.Void XaeiOS.SIP::set_Output(System.IO.TextWriter)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[12] = $f[2]/*this.<Output>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 494: System.IO.TextWriter XaeiOS.SIP::get_Error()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[13]/*V_0.1 = this.<Error>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 495: System.Void XaeiOS.SIP::set_Error(System.IO.TextWriter)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[13] = $f[2]/*this.<Error>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 496: System.Object XaeiOS.SIP::get_SyncRoot()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[14]/*V_0.1 = this.<SyncRoot>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 497: System.Void XaeiOS.SIP::set_SyncRoot(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[14] = $f[2]/*this.<SyncRoot>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 498: System.Void XaeiOS.SIP::Start()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[499].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,0])/*this.Start(0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 499: System.Void XaeiOS.SIP::Start(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*$t1 = this._state*/;
                    if((r0 == 0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[144],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.NotSupportedException::.ctor(System.String)("SIP already started")*/;
                    $$[305].call(r0,"SIP already started")/*$t6..ctor("SIP already started")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t6*/;
                }
                case 4:
                {
                    $ep = 5;
                    $$[466](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*XaeiOS.SIPManager::RegisterSIP(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if($f[2])
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $$[517]()/*$t9 = XaeiOS.SIP::get_CurrentSIP()*/;
                    $$[506].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*$t9.AddChild(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = this[12]/*V_4.1 = this.<Output>k__BackingField*/;
                    if((!(r0 == null)))
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = {$:_[278]}/*$t20 = new System.Void XaeiOS.SIP/ConsoleTextWriter::.ctor()()*/;
                    $$[523].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t20..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[493].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.set_Output($t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r0 = this[13]/*V_3.1 = this.<Error>k__BackingField*/;
                    if((!(r0 == null)))
                    {
                        $ep = 13;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = {$:_[278]}/*$t30 = new System.Void XaeiOS.SIP/ConsoleTextWriter::.ctor()()*/;
                    $$[523].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t30..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $$[495].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.set_Error($t30)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $$[263](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,this])/*System.Resources.ResourceManager::RegisterSIP(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r0 = this[0]/*$t33 = this._threads*/;
                    r0 = r0[0]/*V_2.1 = $t33._head*/;
                    r0 = r0[0]/*V_0.1 = V_2.1.Data*/;
                    $$[147].call(r0)/*V_0.1.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    this[3] = 1/*this._state = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 500: System.Void XaeiOS.SIP::HandleSignal(XaeiOS.Process.Signal,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_2.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 11/*Frame.ExceptionCatchPointer = 11*/;
                    if((!($f[2] == 9)))
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                }
                case 3:
                {
                    if((!($f[2] == 3)))
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 4:
                {
                    if((!($f[2] == 16)))
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    r0 = this[8]/*$t36 = this._customSignal*/;
                    if((r0 == null))
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 11;
                    r0 = this[8]/*$t41 = this._customSignal*/;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,[$f[3]]])/*$t41.Invoke(data)*/;
                    continue $ctrl;
                }
                case 7:
                {
                    r0 = this[7]/*$t19 = this._quitSignal*/;
                    if((r0 == null))
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                }
                case 8:
                {
                    $ep = 11;
                    $$[513].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.Quit()*/;
                    continue $ctrl;
                }
                case 9:
                {
                    $ep = 11;
                    r0 = this[7]/*$t24 = this._quitSignal*/;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,[$f[2], $f[3]]])/*$t24.Invoke(signal, data)*/;
                    continue $ctrl;
                }
                case 10:
                {
                    $ep = 11;
                    $$[514].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.Kill()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 501: System.Void XaeiOS.SIP::AddPrincipal(System.Security.Principal.IPrincipal)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[14]/*V_1.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    r0 = this[4]/*$t4 = this._principals*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0.$[9].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$t4.Add(principal)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 502: System.Collections.Generic.List`1<System.Security.Principal.IPrincipal> XaeiOS.SIP::GetPrincipals()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[4]/*V_0.1 = this._principals*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 503: System.Int32 XaeiOS.SIP::GetHashCode()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[5]/*V_0.1 = this._pid*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 504: System.String XaeiOS.SIP::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[5]/*$t1 = this._pid*/;
                    r1 = this[6]/*$t5 = this._name*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,new Number(r0)])/*$rv = System.String::SafeToString(box(System.Int32,$t1))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3 = $rv/*$t7 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,": "])/*$rv = System.String::SafeToString(": ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t8 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::SafeToString($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*$t9 = $rv*/;
                    r0 = (r3 + r2 + r0)/*V_1.1 = System.String::Concat($t7, $t8, $t9)*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 505: System.Boolean XaeiOS.SIP::Equals(System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($$[411]($f[2],_[277]) == null)))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    continue $ctrl;
                }
                case 3:
                {
                    r2 = $$[411]($f[2],_[277])[5]/*$t9 = o is XaeiOS.SIP._pid*/;
                    r1 = this[5]/*$t11 = this._pid*/;
                    r0 = (r2 == r1)/*V_1.2 = $t9 ValueEquality $t11*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return r0/*V_1.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 506: System.Void XaeiOS.SIP::AddChild(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $f[2][1]/*$t1 = child._parent*/;
                    if((r0 == null))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[167],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.ExecutionEngineException::.ctor(System.String)("SIP already had a parent")*/;
                    $$[327].call(r0,"SIP already had a parent")/*$t6..ctor("SIP already had a parent")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t6*/;
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $$[422](_[0],4)/*V_1.1 = new System.Object[4]*/;
                    r0[0] = "Process "/*V_1.1[0] = "Process "*/;
                    r0[1] = $f[2]/*V_1.1[1] = child*/;
                    r0[2] = " is a child of process "/*V_1.1[2] = " is a child of process "*/;
                    r0[3] = this/*V_1.1[3] = this*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t17 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t17)*/;
                    r0 = this[2]/*$t19 = this._children*/;
                    $$[461].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t19.Add(child)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $f[2][1] = this/*child._parent = this*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 507: System.Void XaeiOS.SIP::InitializeThread(System.Threading.Thread)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = {$:_[294],0:null,1:null}/*$t0 = new System.Void XaeiOS.SIP/<>c__DisplayClass1::.ctor()()*/;
                    $$[551].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2[1] = $f[2]/*$t0.thread = thread*/;
                    r2[0] = this/*$t0.<>4__this = this*/;
                    r0 = this[0]/*$t4 = this._threads*/;
                    r1 = r2[1]/*$t5 = $t0.thread*/;
                    $$[461].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$t4.Add($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = r2[1]/*$t6 = $t0.thread*/;
                    r1 = {$:_[83],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.Threading.ThreadCallback::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.SIP/<>c__DisplayClass1::<InitializeThread>b__0)*/;
                    $$[29](r1,r2,$$[550])/*$t8..ctor($t0, XaeiOS.SIP/<>c__DisplayClass1::<InitializeThread>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[141].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$t6.set_Callback($t8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 508: System.Void XaeiOS.SIP::ThreadExited(System.Threading.Thread)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $f[2][7]/*V_9.1 = thread._unhandledException*/;
                    if((r0 == null))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $$[422](_[0],4)/*V_1.1 = new System.Object[4]*/;
                    r1[0] = "Got unhandled exception "/*V_1.1[0] = "Got unhandled exception "*/;
                    r0 = $f[2][7]/*V_8.1 = thread._unhandledException*/;
                    r1[1] = r0/*V_1.1[1] = V_8.1*/;
                    r1[2] = " - "/*V_1.1[2] = " - "*/;
                    r0 = $f[2][7]/*V_7.1 = thread._unhandledException*/;
                    $rv = r0.$[9].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = V_7.1.get_StackTrace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t17 = $rv*/;
                    r1[3] = r0/*V_1.1[3] = $t17*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t18 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t18)*/;
                    r1 = $$[422](_[0],4)/*V_1.2 = new System.Object[4]*/;
                    r1[0] = "An unhandled exception occurred in thread "/*V_1.2[0] = "An unhandled exception occurred in thread "*/;
                    r1[1] = $f[2]/*V_1.2[1] = thread*/;
                    r1[2] = ": "/*V_1.2[2] = ": "*/;
                    r0 = $f[2][7]/*V_6.1 = thread._unhandledException*/;
                    r1[3] = r0/*V_1.2[3] = V_6.1*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$rv = System.String::Concat(V_1.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t30 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*System.Console::WriteLine($t30)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $f[2][7]/*V_5.1 = thread._unhandledException*/;
                    $rv = r0.$[9].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = V_5.1.get_StackTrace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t33 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*System.Console::WriteLine($t33)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Thread "])/*$rv = System.String::SafeToString("Thread ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $rv/*$t56 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(thread)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t57 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," exited"])/*$rv = System.String::SafeToString(" exited")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = $rv/*$t58 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_4.1 = System.String::Concat($t56, $t57, $t58)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Removing thread "])/*$rv = System.String::SafeToString("Removing thread ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r2 = $rv/*$t53 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(thread)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r1 = $rv/*$t54 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," from thread list"])/*$rv = System.String::SafeToString(" from thread list")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = $rv/*$t55 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_3.1 = System.String::Concat($t53, $t54, $t55)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r0 = this[0]/*$t43 = this._threads*/;
                    $$[462].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$t43.Remove(thread)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Thread "])/*$rv = System.String::SafeToString("Thread ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $rv/*$t50 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(thread)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r1 = $rv/*$t51 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," removed from thread list"])/*$rv = System.String::SafeToString(" removed from thread list")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r0 = $rv/*$t52 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_2.1 = System.String::Concat($t50, $t51, $t52)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $$[510].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*this.TryExit()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 509: System.Void XaeiOS.SIP::ChildExited(XaeiOS.SIP)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Child process "])/*$rv = System.String::SafeToString("Child process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*$t8 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = System.String::SafeToString(child)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = $rv/*$t9 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," exited"])/*$rv = System.String::SafeToString(" exited")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t10 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_0.1 = System.String::Concat($t8, $t9, $t10)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[2]/*$t5 = this._children*/;
                    $$[462].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$t5.Remove(child)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[510].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*this.TryExit()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5)
// 510: System.Void XaeiOS.SIP::TryExit()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r5 = this[14]/*V_13.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,r5])/*System.Threading.Monitor::Enter(V_13.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 31/*Frame.ExceptionCatchPointer = 31*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,"Process "])/*$rv = System.String::SafeToString("Process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r3 = $rv/*$t77 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = $rv/*$t78 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null," trying to exit"])/*$rv = System.String::SafeToString(" trying to exit")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = $rv/*$t79 = $rv*/;
                    r1 = (r3 + r2 + r1)/*V_12.1 = System.String::Concat($t77, $t78, $t79)*/;
                    LogWrite("DEBUG", r1)/*System.Diagnostics.Logging::Debug(V_12.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r1 = this[11]/*V_11.1 = this.<IsDaemon>k__BackingField*/;
                    if(r1)
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,"Process "])/*$rv = System.String::SafeToString("Process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r3 = $rv/*$t65 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $rv/*$t66 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null," cannot exit because it is a daemon process"])/*$rv = System.String::SafeToString(" cannot exit because it is a daemon process")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 31;
                    r1 = $rv/*$t67 = $rv*/;
                    r1 = (r3 + r2 + r1)/*V_4.1 = System.String::Concat($t65, $t66, $t67)*/;
                    LogWrite("TRACE", r1)/*System.Diagnostics.Logging::Trace(V_4.1)*/;
                    continue $ctrl;
                }
                case 11:
                {
                    $ep = 12;
                    r2 = this[2]/*$t10 = this._children*/;
                    r1 = r2[2]/*$t75 = $t10._lock*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null])/*$t75.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r3 = r2[3]/*V_10.1 = $t10._count*/;
                    r1 = r2[2]/*$t76 = $t10._lock*/;
                    $$[72].call(r1)/*$t76.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    if((!(r3 == 0)))
                    {
                        $ep = 14;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 18;
                        continue $ctrl;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r4 = $$[422](_[0],5)/*V_3.1 = new System.Object[5]*/;
                    r4[0] = "Process "/*V_3.1[0] = "Process "*/;
                    r4[1] = this/*V_3.1[1] = this*/;
                    r4[2] = " cannot exit because it has "/*V_3.1[2] = " cannot exit because it has "*/;
                    r2 = this[2]/*$t55 = this._children*/;
                    r1 = r2[2]/*$t68 = $t55._lock*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null])/*$t68.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r3 = r2[3]/*V_5.1 = $t55._count*/;
                    r1 = r2[2]/*$t69 = $t55._lock*/;
                    $$[72].call(r1)/*$t69.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r4[3] = new Number(r3)/*V_3.1[3] = box(System.Int32,V_5.1)*/;
                    r4[4] = " child processes running"/*V_3.1[4] = " child processes running"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,r4])/*$rv = System.String::Concat(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 31;
                    r1 = $rv/*$t60 = $rv*/;
                    LogWrite("TRACE", r1)/*System.Diagnostics.Logging::Trace($t60)*/;
                    continue $ctrl;
                }
                case 18:
                {
                    $ep = 19;
                    r2 = this[0]/*$t19 = this._threads*/;
                    r1 = r2[2]/*$t73 = $t19._lock*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null])/*$t73.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r3 = r2[3]/*V_9.1 = $t19._count*/;
                    r1 = r2[2]/*$t74 = $t19._lock*/;
                    $$[72].call(r1)/*$t74.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    if((!(r3 == 0)))
                    {
                        $ep = 21;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 30;
                        continue $ctrl;

                    }
                }
                case 21:
                {
                    r1 = this[0]/*$t29 = this._threads*/;
                    r1 = r1[0]/*V_8.1 = $t29._head*/;
                    r0 = r1/*V_0.1 = V_8.1*/;
                    $ep = 22;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    if((!(r0 == null)))
                    {
                        $ep = 24;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 23;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 23:
                {
                    $ep = 31;
                    $$[512].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null])/*this.Exit()*/;
                    continue $ctrl;
                }
                case 24:
                {
                    r1 = r0[0]/*$t38 = V_0.3.Data*/;
                    r1 = r1[9]/*V_7.1 = $t38._isBackground*/;
                    if(r1)
                    {
                        $ep = 25;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 26;
                        continue $ctrl;

                    }
                }
                case 25:
                {
                    r0 = r0[2]/*V_0.2 = V_0.3.Next*/;
                    $ep = 22;
                    continue $ctrl;
                }
                case 26:
                {
                    $ep = 27;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,"Process "])/*$rv = System.String::SafeToString("Process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r3 = $rv/*$t70 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r2 = $rv/*$t71 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null," cannot exit because it has running, non-background threads."])/*$rv = System.String::SafeToString(" cannot exit because it has running, non-background threads.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 32;
                    r1 = $rv/*$t72 = $rv*/;
                    r1 = (r3 + r2 + r1)/*V_6.1 = System.String::Concat($t70, $t71, $t72)*/;
                    LogWrite("TRACE", r1)/*System.Diagnostics.Logging::Trace(V_6.1)*/;
                    continue $ctrl;
                }
                case 30:
                {
                    $ep = 31;
                    $$[512].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null])/*this.Exit()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5],[null,null,r5])/*System.Threading.Monitor::Exit(V_13.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r0,r5]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 511: System.Void XaeiOS.SIP::TryExit3()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = this[14]/*V_3.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Enter(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 8/*Frame.ExceptionCatchPointer = 8*/;
                    r1 = this[2]/*$t4 = this._children*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = r1[2]/*$t14 = $t4._lock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t14.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = r1[3]/*V_2.1 = $t4._count*/;
                    r1 = r1[2]/*$t15 = $t4._lock*/;
                    $$[72].call(r1)/*$t15.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if((!(r0 == 0)))
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 6:
                {
                    $ep = 8;
                    LogWrite("DEBUG", "2")/*System.Diagnostics.Logging::Debug("2")*/;
                    continue $ctrl;
                }
                case 7:
                {
                    $ep = 8;
                    LogWrite("DEBUG", "1")/*System.Diagnostics.Logging::Debug("1")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Exit(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 512: System.Void XaeiOS.SIP::Exit()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r3 = this[14]/*V_5.1 = this.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r3])/*System.Threading.Monitor::Enter(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 22/*Frame.ExceptionCatchPointer = 22*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Process "])/*$rv = System.String::SafeToString("Process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t49 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t50 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null," exiting"])/*$rv = System.String::SafeToString(" exiting")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t51 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_4.1 = System.String::Concat($t49, $t50, $t51)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    this[3] = 2/*this._state = 2*/;
                    r0 = this[9]/*$t10 = this._exiting*/;
                    if((r0 == null))
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Firing SIP exiting event: "])/*$rv = System.String::SafeToString("Firing SIP exiting event: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = $rv/*$t47 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t48 = $rv*/;
                    r0 = (r1 + r0)/*V_3.1 = System.String::Concat($t47, $t48)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = this[9]/*$t18 = this._exiting*/;
                    r1 = {$:_[146]}/*$t20 = new System.Void System.EventArgs::.ctor()()*/;
                    $$[308].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t20..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,[this, r1]])/*$t18.Invoke(this, $t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $$[264](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*System.Resources.ResourceManager::CleanupAndUnregisterSIP(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $$[467](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*XaeiOS.SIPManager::UnregisterSIP(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    this[3] = 3/*this._state = 3*/;
                    r0 = this[10]/*$t26 = this._exited*/;
                    if((r0 == null))
                    {
                        $ep = 20;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 15;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Firing SIP exited event: "])/*$rv = System.String::SafeToString("Firing SIP exited event: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r1 = $rv/*$t45 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*$rv = System.String::SafeToString(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r0 = $rv/*$t46 = $rv*/;
                    r0 = (r1 + r0)/*V_2.1 = System.String::Concat($t45, $t46)*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r0 = this[10]/*$t34 = this._exited*/;
                    r1 = {$:_[146]}/*$t36 = new System.Void System.EventArgs::.ctor()()*/;
                    $$[308].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t36..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,[this, r1]])/*$t34.Invoke(this, $t36)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    r0 = this[1]/*$t38 = this._parent*/;
                    if((r0 == null))
                    {
                        $ep = 22;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 21;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r0 = this[1]/*$t43 = this._parent*/;
                    $$[509].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,this])/*$t43.ChildExited(this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r3])/*System.Threading.Monitor::Exit(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 513: System.Void XaeiOS.SIP::Quit()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[512].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this.Exit()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 514: System.Void XaeiOS.SIP::Kill()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[512].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this.Exit()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 515: XaeiOS.SIP XaeiOS.SIP::InvokeSIP(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 516: XaeiOS.SIP XaeiOS.SIP::CreateSystemSIP(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t2 = new System.Void XaeiOS.SIP::.ctor(System.String,System.Boolean)(name, 1)*/;
                    $$[519].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2],1])/*$t2..ctor(name, 1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[0]}/*$t3 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t3..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[497].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t2.set_SyncRoot($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = {$:_[278]}/*$t4 = new System.Void XaeiOS.SIP/ConsoleTextWriter::.ctor()()*/;
                    $$[523].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t4..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[493].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t2.set_Output($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = {$:_[278]}/*$t5 = new System.Void XaeiOS.SIP/ConsoleTextWriter::.ctor()()*/;
                    $$[523].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t5..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[495].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t2.set_Error($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r1[3] = 1/*$t2._state = 1*/;
                    return r1/*$t2*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 517: XaeiOS.SIP XaeiOS.SIP::get_CurrentSIP()
{
    var r0;
    r0 = $$[212](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t0 = System.Threading.ThreadManager::get_CurrentThread()*/;
    r0 = $$[137].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*V_0.1 = $t0.get_SIP()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 518: XaeiOS.SIP[] XaeiOS.SIP::GetSIPs()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[468](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = XaeiOS.SIPManager::GetSIPs()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 519: System.Void XaeiOS.SIP::.ctor(System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[267],0:null,1:null,2:null,3:0}/*$t1 = new System.Void XaeiOS.DataStructures.DoublyLinkedList`1<System.Threading.Thread>::.ctor()()*/;
                    $$[463].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    this[0] = r0/*this._threads = $t1*/;
                    r0 = {$:_[267],0:null,1:null,2:null,3:0}/*$t3 = new System.Void XaeiOS.DataStructures.DoublyLinkedList`1<XaeiOS.SIP>::.ctor()()*/;
                    $$[463].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t3..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    this[2] = r0/*this._children = $t3*/;
                    this[3] = 0/*this._state = 0*/;
                    r0 = {$:_[186],0:null,1:0}/*$t7 = new System.Void System.Collections.Generic.List`1<System.Security.Principal.IPrincipal>::.ctor()()*/;
                    $$[384].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t7..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    this[4] = r0/*this._principals = $t7*/;
                    this[5] = -1/*this._pid = -1*/;
                    $$[5].call(this)/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = {$:_[0]}/*$t12 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t12..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[497].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.set_SyncRoot($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    this[6] = $f[2]/*this._name = name*/;
                    $$[475].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[3]])/*this.set_IsDaemon(isDaemon)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 520: System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[521].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3],$f[4],0])/*this..ctor(threadStart, priority, name, 0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 521: System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[519].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[4],$f[5]])/*this..ctor(name, isDaemon)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!($f[2] == null)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.ArgumentException::.ctor(System.String)("threadStart cannot be null")*/;
                    $$[286].call(r0,"threadStart cannot be null")/*$t11..ctor("threadStart cannot be null")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r0/*$t11*/;
                }
                case 5:
                {
                    $ep = 6;
                    r0 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t15 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP)(threadStart, priority, this)*/;
                    $$[166].call(r0,$f[2],$f[3],this)/*$t15..ctor(threadStart, priority, this)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[143].call(r0,$f[4])/*$t15.set_Name(name)*/;
                    $$[507].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.InitializeThread($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 522: System.Void XaeiOS.SIP/ConsoleTextWriter::Write(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    ConsoleWrite($f[2])/*XaeiOS.SIP/ConsoleTextWriter::ConsoleWrite(s)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 523: System.Void XaeiOS.SIP/ConsoleTextWriter::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[78].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 524: System.Void XaeiOS.Process.SignalDaemon::Start()
{
    var r0,r1,r2;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = $$[54](0,Number.POSITIVE_INFINITY,null,[],[null,null,_[279]])/*$t1 = System.Type::GetTypeFromHandle(XaeiOS.Process.SignalDaemon)*/;
                r1 = $$[51].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*V_0.1 = $t1.get_FullName()*/;
                r0 = _[280]/*$t3 = XaeiOS.Process.SignalDaemon._signalDaemonProcess*/;
                if((r0 == null))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = (r1 + " is already started. Only one signal daemon is allowed.")/*$t8 = System.String::Concat(V_0.1, " is already started. Only one signal daemon is allowed.")*/;
                r1 = {$:_[127],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.InvalidOperationException::.ctor(System.String)($t8)*/;
                $$[261].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t9..ctor($t8)*/;
                throw r1/*$t9*/;
            }
            case 3:
            {
                r0 = _[282]/*$t10 = XaeiOS.Process.SignalDaemon.CS$<>9__CachedAnonymousMethodDelegate1*/;
                if(r0)
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t13 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Process.SignalDaemon::<Start>b__0)*/;
                $$[29](r0,null,$$[527])/*$t13..ctor(null, XaeiOS.Process.SignalDaemon::<Start>b__0)*/;
                _[282] = r0/*XaeiOS.Process.SignalDaemon.CS$<>9__CachedAnonymousMethodDelegate1 = $t13*/;
                $ep = 5;
            }
            case 5:
            {
                r0 = _[282]/*$t14 = XaeiOS.Process.SignalDaemon.CS$<>9__CachedAnonymousMethodDelegate1*/;
                r2 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t17 = new System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String,System.Boolean)($t14, 4, V_0.1, 1)*/;
                $$[521].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0,4,r1,1])/*$t17..ctor($t14, 4, V_0.1, 1)*/;
                _[280] = r2/*XaeiOS.Process.SignalDaemon._signalDaemonProcess = $t17*/;
                r0 = {$:_[131],0:0,1:null}/*$t18 = new System.Void System.Threading.ManualResetEvent::.ctor()()*/;
                $$[272].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t18..ctor()*/;
                _[281] = r0/*XaeiOS.Process.SignalDaemon._exitLoop = $t18*/;
                r0 = _[280]/*$t19 = XaeiOS.Process.SignalDaemon._signalDaemonProcess*/;
                $$[498].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t19.Start()*/;
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*pid*/,a1/*signal*/,a2/*data*/)
 // 525: System.Void XaeiOS.Process.SignalDaemon::ExternalSendSignal(System.Int32,XaeiOS.Process.Signal,System.Int32)
{
    var r0,r1,r2,r3;
    r3 = {$:_[295],0:0,1:0,2:0}/*$t0 = new System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass3::.ctor()()*/;
    $$[553].call(r3,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t0..ctor()*/;
    r3[0] = a0/*$t0.pid = pid*/;
    r3[1] = a1/*$t0.signal = signal*/;
    r3[2] = a2/*$t0.data = data*/;
    r1 = r3[1]/*$t4 = $t0.signal*/;
    r0 = r3[2]/*$t5 = $t0.data*/;
    r2 = {$:_[289],0:0,1:0}/*$t6 = new System.Void XaeiOS.Process.SignalPermission::.ctor(XaeiOS.Process.Signal,System.Int32)($t4, $t5)*/;
    $$[533].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null,r1,r0])/*$t6..ctor($t4, $t5)*/;
    $$[529].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t6.Demand()*/;
    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t8 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.Process.SignalDaemon/<>c__DisplayClass3::<ExternalSendSignal>b__2)*/;
    $$[29](r0,r3,$$[552])/*$t8..ctor($t0, XaeiOS.Process.SignalDaemon/<>c__DisplayClass3::<ExternalSendSignal>b__2)*/;
    r2 = _[280]/*$t10 = XaeiOS.Process.SignalDaemon._signalDaemonProcess*/;
    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t11 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP)($t8, 4, $t10)*/;
    $$[166].call(r1,r0,4,r2)/*$t11..ctor($t8, 4, $t10)*/;
    $$[145].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,1])/*$t11.set_IsBackground(1)*/;
    $$[143].call(r1,"External signal sender")/*$t11.set_Name("External signal sender")*/;
    $$[147].call(r1)/*$t11.Start()*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 526: System.Void XaeiOS.Process.SignalDaemon::SendSignal(System.Int32,XaeiOS.Process.Signal,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = {$:_[296],0:null,1:0,2:0}/*$t0 = new System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass6::.ctor()()*/;
                    $$[555].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1[1] = $f[3]/*$t0.signal = signal*/;
                    r1[2] = $f[4]/*$t0.data = data*/;
                    r0 = _[275]/*$t26 = XaeiOS.SIPManager._sips*/;
                    $rv = r0.$[5].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,$f[2]])/*$rv = $t26.get_Item(pid)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_4.1 = $rv*/;
                    r1[0] = r0/*$t0.sip = V_4.1*/;
                    r0 = r1[0]/*$t5 = $t0.sip*/;
                    if((!(r0 == null)))
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = {$:_[84],0:null,1:null,2:null,3:null}/*$t18 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.Process.SignalDaemon/<>c__DisplayClass6::<SendSignal>b__5)*/;
                    $$[29](r2,r1,$$[554])/*$t18..ctor($t0, XaeiOS.Process.SignalDaemon/<>c__DisplayClass6::<SendSignal>b__5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = r1[0]/*$t20 = $t0.sip*/;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t21 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,XaeiOS.SIP)($t18, 4, $t20)*/;
                    $$[166].call(r1,r2,4,r0)/*$t21..ctor($t18, 4, $t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[143].call(r1,"Signal dispatcher")/*$t21.set_Name("Signal dispatcher")*/;
                    $$[145].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,1])/*$t21.set_IsBackground(1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $$[147].call(r1)/*$t21.Start()*/;
                    return;
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Could not find process: "])/*$rv = System.String::SafeToString("Could not find process: ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t24 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,new Number($f[2])])/*$rv = System.String::SafeToString(box(System.Int32,pid))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t25 = $rv*/;
                    r0 = (r0 + r1)/*V_3.1 = System.String::Concat($t24, $t25)*/;
                    r1 = {$:_[133],0:null,1:null,2:null,3:null}/*$t16 = new System.Void System.ArgumentException::.ctor(System.String)(V_3.1)*/;
                    $$[286].call(r1,r0)/*$t16..ctor(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    throw r1/*$t16*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 527: System.Void XaeiOS.Process.SignalDaemon::<Start>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 528: System.Security.IPermission XaeiOS.Process.SignalPermission::Copy()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[0]/*$t1 = this._signal*/;
                    r0 = this[1]/*$t3 = this._data*/;
                    r2 = {$:_[289],0:0,1:0}/*$t4 = new System.Void XaeiOS.Process.SignalPermission::.ctor(XaeiOS.Process.Signal,System.Int32)($t1, $t3)*/;
                    $$[533].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1,r0])/*$t4..ctor($t1, $t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r2/*$t4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4)
// 529: System.Void XaeiOS.Process.SignalPermission::Demand()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $$[517]()/*$t0 = XaeiOS.SIP::get_CurrentSIP()*/;
                    r3 = r1[14]/*V_6.1 = $t0.<SyncRoot>k__BackingField*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4],[null,null,r3])/*System.Threading.Monitor::Enter(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 14/*Frame.ExceptionCatchPointer = 14*/;
                    $rv = $$[517]()/*$rv = XaeiOS.SIP::get_CurrentSIP()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = $rv/*$t3 = $rv*/;
                    r4 = r1[4]/*V_5.1 = $t3._principals*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $rv = r4.$[11].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4],[null,null])/*$rv = V_5.1.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = $rv/*$t6 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $rv = r4.$[4].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4],[null,null,r0])/*$rv = V_5.1.get_Item(V_1.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r1 = $rv/*V_2.1 = $rv*/;
                    if((!$$[411](r1,_[265])))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    r2 = this[0]/*$t12 = this._signal*/;
                    r1 = (r2 == 16)/*$ts0 = $t12 ValueEquality 16*/;
                    $ep = 10;
                    continue $ctrl;
                }
                case 9:
                {
                    r1 = 1/*$ts0 = 1*/;
                    $ep = 10;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    if(r1)
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                }
                case 11:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                case 12:
                {
                    $ep = 13;
                    r1 = {$:_[266],0:null,1:null,2:null,3:null}/*$t17 = new System.Void System.Security.SecurityException::.ctor(System.String)("The external process may only send custom signals")*/;
                    $$[458].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4],[null,null,"The external process may only send custom signals"])/*$t17..ctor("The external process may only send custom signals")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    throw r1/*$t17*/;
                }
                case 14:
                {
                    $ep = 15;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4],[null,null,r3])/*System.Threading.Monitor::Exit(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 530: System.Security.IPermission XaeiOS.Process.SignalPermission::Intersect(System.Security.IPermission)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 531: System.Boolean XaeiOS.Process.SignalPermission::IsSubsetOf(System.Security.IPermission)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 532: System.Security.IPermission XaeiOS.Process.SignalPermission::Union(System.Security.IPermission)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 533: System.Void XaeiOS.Process.SignalPermission::.ctor(XaeiOS.Process.Signal,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this._signal = signal*/;
                    this[1] = $f[3]/*this._data = data*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 534: XaeiOS.Security.ManifestPrincipal XaeiOS.Security.ManifestPrincipal::get_ParentManifest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this.<ParentManifest>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 535: System.Void XaeiOS.Security.ManifestPrincipal::set_ParentManifest(XaeiOS.Security.ManifestPrincipal)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this.<ParentManifest>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 536: System.Security.Principal.IIdentity XaeiOS.Security.ManifestPrincipal::get_Identity()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this.<Identity>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 537: System.Void XaeiOS.Security.ManifestPrincipal::set_Identity(System.Security.Principal.IIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this.<Identity>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 538: System.Boolean XaeiOS.Security.ManifestPrincipal::IsInRole(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 539: System.Void XaeiOS.Security.ManifestPrincipal::.ctor(XaeiOS.Security.ManifestPrincipal,System.Security.Principal.IIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[5].call(this)/*this..ctor()*/;
                    $$[535].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*this.set_ParentManifest(parentManifest)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[537].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[3]])/*this.set_Identity(identity)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 540: System.String XaeiOS.Security.RootIdentity::get_AuthenticationType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return null/*null*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 541: System.Boolean XaeiOS.Security.RootIdentity::get_IsAuthenticated()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return 0/*0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 542: System.String XaeiOS.Security.RootIdentity::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return "External"/*"External"*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 543: System.Void XaeiOS.Security.RootIdentity::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 544: System.Security.Principal.IIdentity XaeiOS.Security.RootPrincipal::get_Identity()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this.<Identity>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 545: System.Void XaeiOS.Security.RootPrincipal::set_Identity(System.Security.Principal.IIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[0] = $f[2]/*this.<Identity>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 546: System.Boolean XaeiOS.Security.RootPrincipal::IsInRole(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[123],0:null,1:null,2:null,3:null}/*$t0 = new System.Void System.NotImplementedException::.ctor()()*/;
                    $$[259].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t0*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 547: System.Void XaeiOS.Security.RootPrincipal::.ctor(XaeiOS.Security.RootIdentity)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[5].call(this)/*this..ctor()*/;
                    $$[545].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*this.set_Identity(identity)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 548: System.Void XaeiOS.Boot.BootManager/<>c__DisplayClass1::<CreateInitProcess>b__0(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t2 = this.initProcess*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Process "])/*$rv = System.String::SafeToString("Process ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*$t5 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$rv = System.String::SafeToString($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = $rv/*$t6 = $rv*/;
                    $rv = $$[255](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null," exited"])/*$rv = System.String::SafeToString(" exited")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t7 = $rv*/;
                    r0 = (r2 + r1 + r0)/*V_0.1 = System.String::Concat($t5, $t6, $t7)*/;
                    LogWrite("INFO", r0)/*System.Diagnostics.Logging::Info(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 549: System.Void XaeiOS.Boot.BootManager/<>c__DisplayClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 550: System.Void XaeiOS.SIP/<>c__DisplayClass1::<InitializeThread>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this.<>4__this*/;
                    r1 = this[1]/*$t3 = this.thread*/;
                    $$[508].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*$t1.ThreadExited($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 551: System.Void XaeiOS.SIP/<>c__DisplayClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 552: System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass3::<ExternalSendSignal>b__2()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = this[0]/*$t1 = this.pid*/;
                    r1 = this[1]/*$t3 = this.signal*/;
                    r0 = this[2]/*$t5 = this.data*/;
                    $$[526](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2,r1,r0])/*XaeiOS.Process.SignalDaemon::SendSignal($t1, $t3, $t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 553: System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass3::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 554: System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass6::<SendSignal>b__5()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this.sip*/;
                    r2 = this[1]/*$t3 = this.signal*/;
                    r1 = this[2]/*$t5 = this.data*/;
                    $$[500].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2,r1])/*$t1.HandleSignal($t3, $t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 555: System.Void XaeiOS.Process.SignalDaemon/<>c__DisplayClass6::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


}

/************
Object image XaeiOS.Kernel - Code: 556	Data: 297
**********/

,function()
 // 556: System.Void XaeiOS.Kernel.TaskPriorityQueue::Initialize()
{
    var r0;
    r0 = new Array()/*$t0 = new System.Void System.NativeArray`1<XaeiOS.Kernel.Task>::.ctor()()*/;
    _[298] = r0/*XaeiOS.Kernel.TaskPriorityQueue._heap = $t0*/;
    _[299] = 0/*XaeiOS.Kernel.TaskPriorityQueue._count = 0*/;
    return;

},
function(a0/*t*/)
 // 557: System.Void XaeiOS.Kernel.TaskPriorityQueue::Add(XaeiOS.Kernel.Task)
{
    var r0;
    r0 = _[299]/*$t0 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
    _[299] = (r0 + 1)/*XaeiOS.Kernel.TaskPriorityQueue._count = $t0 Add 1*/;
    r0 = _[299]/*$t3 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
    $$[560]((r0 - 1),a0)/*XaeiOS.Kernel.TaskPriorityQueue::BubbleUp($t3 Subtract 1, t)*/;
    return;

},
function()
 // 558: XaeiOS.Kernel.Task XaeiOS.Kernel.TaskPriorityQueue::Remove()
{
    var r0,r1,r2;
    r0 = _[298]/*$t0 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
    r2 = r0[0]/*V_0.1 = $t0.get_Item(0)*/;
    r0 = _[299]/*$t4 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
    _[299] = (r0 - 1)/*XaeiOS.Kernel.TaskPriorityQueue._count = $t4 Subtract 1*/;
    r0 = _[298]/*$t8 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
    r1 = _[299]/*$t10 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
    r0 = r0[r1]/*$t11 = $t8.get_Item($t10)*/;
    $$[559](0,r0)/*XaeiOS.Kernel.TaskPriorityQueue::TrickleDown(0, $t11)*/;
    return r2/*V_0.1*/;

},
function(a0/*index*/,a1/*t*/)
 // 559: System.Void XaeiOS.Kernel.TaskPriorityQueue::TrickleDown(System.Int32,XaeiOS.Kernel.Task)
{
    var r1,r0,r2,r3,r4;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = ((a0 * 2) + 1)/*V_0.1 = index Multiply 2 Add 1*/;
                $ep = 2;
            }
            case 2:
            {
                r1 = _[299]/*$t5 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
                if((r0 < r1))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                $$[560](a0,a1)/*XaeiOS.Kernel.TaskPriorityQueue::BubbleUp(index, t)*/;
                return;
            }
            case 4:
            {
                r1 = _[299]/*$t12 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
                if(((r0 + 1) >= r1))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                r1 = _[298]/*$t14 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = r1[r0]/*$t16 = $t14.get_Item(V_0.4)*/;
                r4 = r1[5]/*$t17 = $t16.Priority*/;
                r1 = _[298]/*$t18 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = r1[(r0 + 1)]/*$t22 = $t18.get_Item(V_0.4 Add 1)*/;
                r3 = r1[5]/*$t23 = $t22.Priority*/;
                r1 = (!(r4 < r3))/*$ts0 = BooleanNot $t17 LessThan $t23*/;
                $ep = 7;
                continue $ctrl;
            }
            case 6:
            {
                r1 = 1/*$ts0 = 1*/;
                $ep = 7;
            }
            case 7:
            {
                if(r1)
                {
                    $ep = 9;
                    continue $ctrl;

                }
                else
                {
                    $ep = 8;

                }
            }
            case 8:
            {
                r0 = (r0 + 1)/*V_0.2 = V_0.4 Add 1*/;
                $ep = 9;
            }
            case 9:
            {
                r2 = _[298]/*$t31 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = _[298]/*$t34 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = r1[r0]/*$t36 = $t34.get_Item(V_0.5)*/;
                r2[a0] = r1/*$t31.set_Item(index, $t36)*/;
                a0 = r0/*index = V_0.5*/;
                r0 = ((a0 * 2) + 1)/*V_0.3 = index Multiply 2 Add 1*/;
                $ep = 2;
                continue $ctrl;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*index*/,a1/*t*/)
 // 560: System.Void XaeiOS.Kernel.TaskPriorityQueue::BubbleUp(System.Int32,XaeiOS.Kernel.Task)
{
    var r1,r2,r0,r3,r4;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                $ep = 2;
                r0 = Math.floor(((a0 - 1) / 2))/*V_0.1 = System.Math::Floor(index Subtract 1 Divide 2)*/;
            }
            case 2:
            {
                if((a0 <= 0))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                r1 = _[298]/*$t11 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = r1[r0]/*$t13 = $t11.get_Item(V_0.3)*/;
                r4 = r1[5]/*$t14 = $t13.Priority*/;
                r3 = a1[5]/*$t16 = t.Priority*/;
                r1 = (r4 < r3)/*$ts0 = $t14 LessThan $t16*/;
                $ep = 5;
                continue $ctrl;
            }
            case 4:
            {
                r1 = 0/*$ts0 = 0*/;
                $ep = 5;
            }
            case 5:
            {
                if(r1)
                {
                    $ep = 6;

                }
                else
                {
                    $ep = 7;
                    continue $ctrl;

                }
            }
            case 6:
            {
                $ep = 2;
                r2 = _[298]/*$t23 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = _[298]/*$t26 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1 = r1[r0]/*$t28 = $t26.get_Item(V_0.3)*/;
                r2[a0] = r1/*$t23.set_Item(index, $t28)*/;
                a0 = r0/*index = V_0.3*/;
                r0 = Math.floor(((a0 - 1) / 2))/*V_0.2 = System.Math::Floor(index Subtract 1 Divide 2)*/;
                continue $ctrl;
            }
            case 7:
            {
                r1 = _[298]/*$t19 = XaeiOS.Kernel.TaskPriorityQueue._heap*/;
                r1[a0] = a1/*$t19.set_Item(index, t)*/;
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function()
 // 561: System.Boolean XaeiOS.Kernel.TaskPriorityQueue::IsEmpty()
{
    var r0;
    r0 = _[299]/*$t0 = XaeiOS.Kernel.TaskPriorityQueue._count*/;
    return (r0 == 0)/*$t0 ValueEquality 0*/;

},
function()
 // 562: System.Void XaeiOS.Kernel.TaskPriorityQueue::Cleanup()
{
    _[299] = 0/*XaeiOS.Kernel.TaskPriorityQueue._count = 0*/;
    _[298] = null/*XaeiOS.Kernel.TaskPriorityQueue._heap = null*/;
    return;

},
function()
 // 563: XaeiOS.Kernel.Task XaeiOS.Kernel.Scheduler::get_CurrentTask()
{
    var r0;
    r0 = _[309]/*V_0.1 = XaeiOS.Kernel.Scheduler._currentTask*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 564: XaeiOS.Kernel.Task XaeiOS.Kernel.Scheduler::get_ExternalTask()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = _[307]/*V_0.1 = XaeiOS.Kernel.Scheduler._externalTask*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 565: System.Boolean XaeiOS.Kernel.Scheduler::get_InCriticalSection()
{
    var r0;
    r0 = _[313]/*V_0.1 = XaeiOS.Kernel.Scheduler._inCriticalSection*/;
    return r0/*V_0.1*/;

},
function()
 // 566: System.Void XaeiOS.Kernel.Scheduler::EnterCriticalSection()
{
    _[313] = 1/*XaeiOS.Kernel.Scheduler._inCriticalSection = 1*/;
    return;

},
function()
 // 567: System.Void XaeiOS.Kernel.Scheduler::LeaveCriticalSection()
{
    _[313] = 0/*XaeiOS.Kernel.Scheduler._inCriticalSection = 0*/;
    return;

},
function()
 // 568: System.Void XaeiOS.Kernel.Scheduler::Initialize()
{
    var r0;
    r0 = new Object()/*$t0 = new System.Void System.NativeObject::.ctor()()*/;
    _[312] = r0/*XaeiOS.Kernel.Scheduler._taskStatusMap = $t0*/;
    _[313] = 0/*XaeiOS.Kernel.Scheduler._inCriticalSection = 0*/;
    r0 = {$:_[326],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:0}/*$t7 = new System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String)(null, null, null, 5, "XaeiOS.Kernel")*/;
    $$[617].call(r0,null,null,null,5,"XaeiOS.Kernel")/*$t7..ctor(null, null, null, 5, "XaeiOS.Kernel")*/;
    _[308] = r0/*XaeiOS.Kernel.Scheduler._kernelTask = $t7*/;
    r0 = {$:_[326],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:0}/*$t13 = new System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String)(null, null, null, 5, "External")*/;
    $$[617].call(r0,null,null,null,5,"External")/*$t13..ctor(null, null, null, 5, "External")*/;
    _[307] = r0/*XaeiOS.Kernel.Scheduler._externalTask = $t13*/;
    r0 = _[308]/*$t14 = XaeiOS.Kernel.Scheduler._kernelTask*/;
    _[309] = r0/*XaeiOS.Kernel.Scheduler._currentTask = $t14*/;
    return;

},
function()
 // 569: System.Void XaeiOS.Kernel.Scheduler::RunCpuTimeSlice()
{
    var r1,r0;
    r1 = _[308]/*$t0 = XaeiOS.Kernel.Scheduler._kernelTask*/;
    _[309] = r1/*XaeiOS.Kernel.Scheduler._currentTask = $t0*/;
    r0 = 20000/*V_0.1 = (System.Int64)20000*/;
    do
    {
        r1 = $$[570](r0)/*$tf4 = XaeiOS.Kernel.Scheduler::CpuCycle(V_0.3)*/;
        r0 = r1/*V_0.2 = $tf4*/;

    } while ((r1 > 2000));

    r1 = _[307]/*$t9 = XaeiOS.Kernel.Scheduler._externalTask*/;
    _[309] = r1/*XaeiOS.Kernel.Scheduler._currentTask = $t9*/;
    return;

},
function(a0/*timeSlice*/)
 // 570: System.Int64 XaeiOS.Kernel.Scheduler::CpuCycle(System.Int64)
{
    var r2,r3,r4,r1,r5,r6,r0;
    r2 = $$[561]()/*$t0 = XaeiOS.Kernel.TaskPriorityQueue::IsEmpty()*/;
    if((!r2))
    {
        r6 = $$[558]()/*V_0.1 = XaeiOS.Kernel.TaskPriorityQueue::Remove()*/;
        r2 = _[312]/*$t8 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
        r3 = r6[3]/*$t10 = V_0.1.Id*/;
        r2[r3] = 0/*$t8.set_Item($t10, 0)*/;
        r2 = r6[6]/*$t13 = V_0.1.InjectedException*/;
        if((r2 == null))
        {
            r1 = r6[0]/*V_2.1 = V_0.1.Continuation*/;
            r2 = r6[7]/*$t26 = V_0.1.MaxTimeSlice*/;
            r2 = Math.min(a0,r2)/*$t27 = System.Math::Min(timeSlice, $t26)*/;
            r1[1] = r2/*V_2.1.TimeSlice = $t27*/;
            r3 = r1[4]/*V_3.1 = V_2.1.Frame*/;
            _[309] = r6/*XaeiOS.Kernel.Scheduler._currentTask = V_0.1*/;
            try {/*XaeiOS.Kernel.Scheduler::GenerateStartTryBlockCode()*/;
            r2 = new Date()/*$t29 = new System.Void System.NativeDate::.ctor()()*/;
            r5 = r2.getTime()/*V_4.1 = $t29.GetTime()*/;
            r2 = r3[1]/*$t31 = V_3.1.Function*/;
            r3 = r3[0]/*$t33 = V_3.1.This*/;
            r3 = r2.apply(r3, r1)/*V_6.1 = $t31.Apply($t33, V_2.1)*/;
            r2 = _[308]/*$t37 = XaeiOS.Kernel.Scheduler._kernelTask*/;
            _[309] = r2/*XaeiOS.Kernel.Scheduler._currentTask = $t37*/;
            r2 = new Date()/*$t38 = new System.Void System.NativeDate::.ctor()()*/;
            r2 = r1[3]/*$t40 = V_2.1.ParentContinuation*/;
            if((!(r2 == null)))
            {
                r2 = r1[3]/*V_2.2 = V_2.1.ParentContinuation*/;
                r6[0] = r2/*V_0.1.Continuation = V_2.2*/;
                if(typeof(r3) != "undefined") {/*XaeiOS.Kernel.Scheduler::GenerateIfValueIsDefinedCode(V_6.1)*/;
                r2[2] = r3/*V_2.2.ReturnValue = V_6.1*/;
                }/*XaeiOS.Kernel.Scheduler::GenerateEndBlockCode()*/;
                $$[587](r6)/*XaeiOS.Kernel.Scheduler::ScheduleTaskChecked(V_0.1)*/;

            }
            else
            {
                $$[577](r6,r3,0)/*XaeiOS.Kernel.Scheduler::CleanupTask(V_0.1, V_6.1, 0)*/;

            }
            } catch(r4) {/*XaeiOS.Kernel.Scheduler::GenerateStartCatchBlockCode(V_7)*/;
            r2 = _[308]/*$t48 = XaeiOS.Kernel.Scheduler._kernelTask*/;
            _[309] = r2/*XaeiOS.Kernel.Scheduler._currentTask = $t48*/;
            r3 = new Date()/*$t49 = new System.Void System.NativeDate::.ctor()()*/;
            r2 = r4 instanceof Array/*V_9.4 = V_7.InstanceOf("Array")*/;
            if(r2)
            {
                r1 = r4/*V_2.3 = V_7*/;
                r6[0] = r4/*V_0.1.Continuation = V_7*/;
                $$[587](r6)/*XaeiOS.Kernel.Scheduler::ScheduleTaskChecked(V_0.1)*/;

            }
            else
            {
                r2 = $$[575](r4)/*$t53 = XaeiOS.Kernel.Scheduler::ConvertToManagedException(V_7)*/;
                $$[574](r6,r2)/*XaeiOS.Kernel.Scheduler::HandleException(V_0.1, $t53)*/;

            }
            }/*XaeiOS.Kernel.Scheduler::GenerateEndBlockCode()*/;
            $$[571](r6,(r3 - r5))/*XaeiOS.Kernel.Scheduler::AdjustMaxTimeSlice(V_0.1, $t49 Subtract V_4.1)*/;
            r2 = r1[1]/*$t54 = V_2.5.TimeSlice*/;
            r2 = Math.min(r2,a0)/*$t56 = System.Math::Min($t54, timeSlice)*/;
            r0 = (r2 - 1)/*V_8.3 = $t56 Subtract (System.Int64)1*/;

        }
        else
        {
            r3 = r6[6]/*V_1.1 = V_0.1.InjectedException*/;
            r6[6] = null/*V_0.1.InjectedException = null*/;
            r2 = r6[0]/*$t19 = V_0.1.Continuation*/;
            r3[0] = r2/*V_1.1.ThrowContext = $t19*/;
            $$[574](r6,r3)/*XaeiOS.Kernel.Scheduler::HandleException(V_0.1, V_1.1)*/;
            r0 = (a0 - 1)/*V_8.2 = timeSlice Subtract (System.Int64)1*/;

        }

    }
    else
    {
        _[310] = 1/*XaeiOS.Kernel.Scheduler._awaitingTask = 1*/;
        $$[579]()/*XaeiOS.Kernel.Scheduler::PauseCpu()*/;
        r0 = 0/*V_8.1 = (System.Int64)0*/;

    }
    return r0/*V_8.4*/;

},
function(a0/*task*/,a1/*realTimeSlice*/)
 // 571: System.Void XaeiOS.Kernel.Scheduler::AdjustMaxTimeSlice(XaeiOS.Kernel.Task,System.Int64)
{
    var r0;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                if((!(a1 > 50)))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 5;
                a0[7] = 2/*task.MaxTimeSlice = (System.Int64)2*/;
                r0 = $$[422](_[0],5)/*V_1.1 = new System.Object[5]*/;
                r0[0] = "Task "/*V_1.1[0] = "Task "*/;
                r0[1] = a0/*V_1.1[1] = task*/;
                r0[2] = " ran too long: "/*V_1.1[2] = " ran too long: "*/;
                r0[3] = new Number(a1)/*V_1.1[3] = box(System.Int64,realTimeSlice)*/;
                r0[4] = ".  Reset max time slice."/*V_1.1[4] = ".  Reset max time slice."*/;
                r0 = $$[253](0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t24 = System.String::Concat(V_1.1)*/;
                LogWrite("TRACE", r0)/*System.Diagnostics.Logging::Trace($t24)*/;
                continue $ctrl;
            }
            case 3:
            {
                r0 = a0[7]/*$t26 = task.MaxTimeSlice*/;
                if((!(r0 < 20000)))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                r0 = a0[7]/*$t36 = task.MaxTimeSlice*/;
                r0 = Math.min((r0 * 2),20000)/*$t42 = System.Math::Min($t36 Multiply (System.Int64)2, (System.Int64)20000)*/;
                a0[7] = r0/*task.MaxTimeSlice = $t42*/;
                $ep = 5;
            }
            case 5:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*task*/,a1/*exception*/)
 // 572: System.Void XaeiOS.Kernel.Scheduler::ScheduleHandleException(XaeiOS.Kernel.Task,XaeiOS.Kernel.XaeiOSException)
{
    var r0,r1;
    r1 = new Array()/*$t0 = new System.Void XaeiOS.Kernel.Continuation::.ctor()()*/;
    r1[0] = 0/*$t0.ExecutionPointer = 0*/;
    r0 = a0[0]/*$t3 = task.Continuation*/;
    r1[3] = r0/*$t0.ParentContinuation = $t3*/;
    r0 = $$[573]/*$t7 = new System.Void XaeiOS.Kernel.Scheduler/HandleExceptionDelegate::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Kernel.Scheduler::BrokenHandleException)*/;
    /*$t7..ctor(null, XaeiOS.Kernel.Scheduler::BrokenHandleException)*/r0 = $$[110](r0)/*$t8 = System.NativeFunction::op_Explicit($t7)*/;
    r0 = new Array(null, r0)/*$t9 = new System.Void XaeiOS.Kernel.Frame::.ctor(System.Object,System.NativeFunction)(null, $t8)*/;
    r1[4] = r0/*$t0.Frame = $t9*/;
    r0 = r1[4]/*$t10 = $t0.Frame*/;
    r0.push(a0)/*$t10.Push(task)*/;
    r0 = r1[4]/*$t13 = $t0.Frame*/;
    r0.push(a1)/*$t13.Push(exception)*/;
    a0[0] = r1/*task.Continuation = $t0*/;
    $$[587](a0)/*XaeiOS.Kernel.Scheduler::ScheduleTaskChecked(task)*/;
    return;

},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 573: System.Void XaeiOS.Kernel.Scheduler::BrokenHandleException(XaeiOS.Kernel.Task,XaeiOS.Kernel.XaeiOSException)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = $f[3][0]/*$t1 = exception.ThrowContext*/;
                    r0 = r1[3]/*V_0.1 = $t1.ParentContinuation*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!(r0 == null)))
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = r0[4]/*$t25 = V_0.3.Frame*/;
                    $rv = r1.$ecp/*$rv = $t25.get_ExceptionCatchPointer()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r1 = $rv/*$t27 = $rv*/;
                    r1 = !r1/*$t28 = $t27.Not()*/;
                    if((!r1))
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                }
                case 5:
                {
                    if((!(r0 == null)))
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f[2][0] = r0/*task.Continuation = V_0.3*/;
                    r1 = r0[4]/*$t20 = V_0.3.Frame*/;
                    $rv = r1.$ecp/*$rv = $t20.get_ExceptionCatchPointer()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 9;
                    r1 = $rv/*$t21 = $rv*/;
                    r0[0] = r1/*V_0.3.ExecutionPointer = $t21*/;
                    r1 = r0[4]/*$t22 = V_0.3.Frame*/;
                    r1.$e = $f[3]/*$t22.set_Exception(exception)*/;
                    continue $ctrl;
                }
                case 8:
                {
                    $ep = 9;
                    $$[577]($f[2],$f[3],1)/*XaeiOS.Kernel.Scheduler::CleanupTask(task, exception, 1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return;
                }
                case 10:
                {
                    r0 = r0[3]/*V_0.2 = V_0.3.ParentContinuation*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*task*/,a1/*exception*/)
 // 574: System.Void XaeiOS.Kernel.Scheduler::HandleException(XaeiOS.Kernel.Task,XaeiOS.Kernel.XaeiOSException)
{
    var r1,r0;
    r1 = a1[0]/*$t1 = exception.ThrowContext*/;
    r0 = r1[3]/*V_0.1 = $t1.ParentContinuation*/;
    while(r0 != null) {/*XaeiOS.Kernel.Scheduler::GenerateStartWhileNotNullBlockCode(V_0.1)*/;
    r1 = r0[4]/*$t3 = V_0.1.Frame*/;
    r1 = r1.$ecp/*$t5 = $t3.get_ExceptionCatchPointer()*/;
    r1 = !r1/*$t6 = $t5.Not()*/;
    if((!r1))
    {
        break/*XaeiOS.Kernel.Scheduler::GenerateBreakCode()*/;

    }
    else
    {
        r0 = r0[3]/*V_0.2 = V_0.1.ParentContinuation*/;

    }
    }/*XaeiOS.Kernel.Scheduler::GenerateEndBlockCode()*/;
    if((!(r0 == null)))
    {
        a0[0] = r0/*task.Continuation = V_0.3*/;
        r1 = r0[4]/*$t22 = V_0.3.Frame*/;
        r1 = r1.$ecp/*$t23 = $t22.get_ExceptionCatchPointer()*/;
        r0[0] = r1/*V_0.3.ExecutionPointer = $t23*/;
        r1 = r0[4]/*$t24 = V_0.3.Frame*/;
        r1.$e = a1/*$t24.set_Exception(exception)*/;
        $$[587](a0)/*XaeiOS.Kernel.Scheduler::ScheduleTaskChecked(task)*/;

    }
    else
    {
        $$[577](a0,a1,1)/*XaeiOS.Kernel.Scheduler::CleanupTask(task, exception, 1)*/;

    }
    return;

},
function(a0/*e*/)
 // 575: XaeiOS.Kernel.XaeiOSException XaeiOS.Kernel.Scheduler::ConvertToManagedException(System.var)
{
    var r0;
    if(($$[411](a0,_[7]) == null))
    {
        r0 = $$[576](a0)/*V_1.2 = XaeiOS.Kernel.Scheduler::BuildManagedException(e)*/;

    }
    else
    {
        r0 = $$[411](a0,_[7])/*V_1.1 = e is System.Exception*/;

    }
    return r0/*V_1.3*/;

},
function(a0/*thrownObject*/)
 // 576: XaeiOS.Kernel.XaeiOSException XaeiOS.Kernel.Scheduler::BuildManagedException(System.var)
{
    var r1,r2,r0;
    r0 = null/*V_0.1 = null*/;
    if((!(a0 == null)))
    {
        r1 = a0 instanceof Error/*$t16 = thrownObject.InstanceOf("Error")*/;
        if((!r1))
        {
            r1 = a0.toString()/*$t62 = thrownObject.NativeToString()*/;
            r2 = {$:_[167],0:null,1:null,2:null,3:null}/*$t63 = new System.Void System.ExecutionEngineException::.ctor(System.String)($t62)*/;
            $$[327].call(r2,r1)/*$t63..ctor($t62)*/;
            r0 = r2/*V_0.8 = $t63*/;

        }
        else
        {
            r1 = a0 instanceof ReferenceError/*$t22 = thrownObject.InstanceOf("ReferenceError")*/;
            if((!r1))
            {
                r1 = a0 instanceof TypeError/*$t31 = thrownObject.InstanceOf("TypeError")*/;
                if((!r1))
                {
                    r1 = a0.toString()/*$t59 = thrownObject.NativeToString()*/;
                    r2 = {$:_[167],0:null,1:null,2:null,3:null}/*$t60 = new System.Void System.ExecutionEngineException::.ctor(System.String)($t59)*/;
                    $$[327].call(r2,r1)/*$t60..ctor($t59)*/;
                    r0 = r2/*V_0.7 = $t60*/;

                }
                else
                {
                    r1 = a0.toString()/*$t36 = thrownObject.NativeToString()*/;
                    r1 = $$[249].call(r1,"has no properties")/*$t38 = $t36.Contains("has no properties")*/;
                    if((!r1))
                    {
                        r1 = a0.toString()/*$t46 = thrownObject.NativeToString()*/;
                        r1 = $$[249].call(r1,"has no properties")/*$t48 = $t46.Contains("has no properties")*/;
                        if((!r1))
                        {
                            r1 = a0.toString()/*$t56 = thrownObject.NativeToString()*/;
                            r2 = {$:_[167],0:null,1:null,2:null,3:null}/*$t57 = new System.Void System.ExecutionEngineException::.ctor(System.String)($t56)*/;
                            $$[327].call(r2,r1)/*$t57..ctor($t56)*/;
                            r0 = r2/*V_0.6 = $t57*/;

                        }
                        else
                        {
                            r1 = a0.toString()/*$t53 = thrownObject.NativeToString()*/;
                            r2 = {$:_[94],0:null,1:null,2:null,3:null}/*$t54 = new System.Void System.NullReferenceException::.ctor(System.String)($t53)*/;
                            $$[175].call(r2,r1)/*$t54..ctor($t53)*/;
                            r0 = r2/*V_0.5 = $t54*/;

                        }

                    }
                    else
                    {
                        r1 = a0.toString()/*$t43 = thrownObject.NativeToString()*/;
                        r2 = {$:_[94],0:null,1:null,2:null,3:null}/*$t44 = new System.Void System.NullReferenceException::.ctor(System.String)($t43)*/;
                        $$[175].call(r2,r1)/*$t44..ctor($t43)*/;
                        r0 = r2/*V_0.4 = $t44*/;

                    }

                }

            }
            else
            {
                r1 = a0.toString()/*$t27 = thrownObject.NativeToString()*/;
                r2 = {$:_[94],0:null,1:null,2:null,3:null}/*$t28 = new System.Void System.NullReferenceException::.ctor(System.String)($t27)*/;
                $$[175].call(r2,r1)/*$t28..ctor($t27)*/;
                r0 = r2/*V_0.3 = $t28*/;

            }

        }

    }
    else
    {
        r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.ExecutionEngineException::.ctor(System.String)("Caught null exception")*/;
        $$[327].call(r1,"Caught null exception")/*$t9..ctor("Caught null exception")*/;
        r0 = r1/*V_0.2 = $t9*/;

    }
    r1 = a0[0]/*$t13 = thrownObject.ThrowContext*/;
    r0[0] = r1/*V_0.9.ThrowContext = $t13*/;
    return r0/*V_0.9*/;

},
function(a0/*t*/,a1/*returnValue*/,a2/*exitStatus*/)
 // 577: System.Void XaeiOS.Kernel.Scheduler::CleanupTask(XaeiOS.Kernel.Task,System.var,XaeiOS.Kernel.TaskExitStatus)
{
    var r0,r1,r2;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = $$[422](_[0],4)/*V_1.1 = new System.Object[4]*/;
                r0[0] = "Cleaning up task: "/*V_1.1[0] = "Cleaning up task: "*/;
                r0[1] = a0/*V_1.1[1] = t*/;
                r0[2] = ".  Exit status = "/*V_1.1[2] = ".  Exit status = "*/;
                r0[3] = a2/*V_1.1[3] = box(XaeiOS.Kernel.TaskExitStatus,exitStatus)*/;
                r0 = $$[253](0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t11 = System.String::Concat(V_1.1)*/;
                LogWrite("TRACE", r0)/*System.Diagnostics.Logging::Trace($t11)*/;
                r2 = $$[611].call(a0)/*V_0.1 = t.get_Name()*/;
                r0 = _[312]/*$t14 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t17 = t.Id*/;
                delete r0[r1]/*$t14.RemoveKey($t17)*/;
                $$[614](a0)/*XaeiOS.Kernel.Task::RemoveTask(t)*/;
                r0 = a0[4]/*$t20 = t.Callback*/;
                if((r0 == null))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                r0 = a0[4]/*$t25 = t.Callback*/;
                r1 = a0[3]/*$t27 = t.Id*/;
                r0(r1,r2,a1,a2)/*$t25.Invoke($t27, V_0.1, returnValue, exitStatus)*/;
            }
            case 3:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function()
 // 578: System.Void XaeiOS.Kernel.Scheduler::StartCpu()
{
    var r0;
    r0 = _[311]/*$t0 = XaeiOS.Kernel.Scheduler._cpuIntervalId*/;
    clearInterval(r0)/*XaeiOS.Kernel.Scheduler::ClearInterval($t0)*/;
    r0 = $$[569]/*$t3 = new System.Void System.NativeVoidDelegate::.ctor(System.Object,System.IntPtr)(null, XaeiOS.Kernel.Scheduler::RunCpuTimeSlice)*/;
    /*$t3..ctor(null, XaeiOS.Kernel.Scheduler::RunCpuTimeSlice)*/r0 = setInterval(r0, 1)/*$t6 = XaeiOS.Kernel.Scheduler::SetInterval($t3, (System.Int64)1)*/;
    _[311] = r0/*XaeiOS.Kernel.Scheduler._cpuIntervalId = $t6*/;
    return;

},
function()
 // 579: System.Void XaeiOS.Kernel.Scheduler::PauseCpu()
{
    var r0;
    r0 = _[311]/*$t0 = XaeiOS.Kernel.Scheduler._cpuIntervalId*/;
    clearInterval(r0)/*XaeiOS.Kernel.Scheduler::ClearInterval($t0)*/;
    return;

},
function()
 // 580: System.Void XaeiOS.Kernel.Scheduler::ResumeCpu()
{
    $$[578]()/*XaeiOS.Kernel.Scheduler::StartCpu()*/;
    return;

},
function()
 // 581: System.Void XaeiOS.Kernel.Scheduler::Shutdown()
{
    $$[582]()/*XaeiOS.Kernel.Scheduler::Cleanup()*/;
    $$[583]()/*XaeiOS.Kernel.Scheduler::Halt()*/;
    return;

},
function()
 // 582: System.Void XaeiOS.Kernel.Scheduler::Cleanup()
{
    var r0;
    $$[562]()/*XaeiOS.Kernel.TaskPriorityQueue::Cleanup()*/;
    $$[615]()/*XaeiOS.Kernel.Task::Cleanup()*/;
    r0 = _[308]/*$t0 = XaeiOS.Kernel.Scheduler._kernelTask*/;
    _[309] = r0/*XaeiOS.Kernel.Scheduler._currentTask = $t0*/;
    return;

},
function()
 // 583: System.Void XaeiOS.Kernel.Scheduler::Halt()
{
    $$[579]()/*XaeiOS.Kernel.Scheduler::PauseCpu()*/;
    return;

},
function(a0/*priority*/)
 // 584: System.Int32 XaeiOS.Kernel.Scheduler::DynamicPriority(XaeiOS.Kernel.TaskPriority)
{
    return ((a0 + 1) * 1000)/*priority Add 1 Multiply 1000*/;

},
function(a0/*t*/)
 // 585: System.Void XaeiOS.Kernel.Scheduler::StartTask(XaeiOS.Kernel.Task)
{
    var r0,r1;
    r0 = _[312]/*$t0 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
    r1 = a0[3]/*$t3 = t.Id*/;
    r0 = r1 in r0/*$t4 = $t0.ContainsKey($t3)*/;
    if((!r0))
    {
        r0 = _[312]/*$t13 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
        r1 = a0[3]/*$t16 = t.Id*/;
        r0[r1] = 0/*$t13.set_Item($t16, 0)*/;
        $$[586](a0)/*XaeiOS.Kernel.Scheduler::ScheduleTask(t)*/;
        return;

    }
    else
    {
        r0 = $$[251](0,Number.POSITIVE_INFINITY,null,[],[null,null,"Cannot start task ",a0,".  It has already been started."])/*$t11 = System.String::Concat("Cannot start task ", t, ".  It has already been started.")*/;
        r1 = {$:_[133],0:null,1:null,2:null,3:null}/*$t12 = new System.Void System.ArgumentException::.ctor(System.String)($t11)*/;
        $$[286].call(r1,r0)/*$t12..ctor($t11)*/;
        throw r1/*$t12*/;

    }

},
function(a0/*t*/)
 // 586: System.Void XaeiOS.Kernel.Scheduler::ScheduleTask(XaeiOS.Kernel.Task)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                $$[557](a0)/*XaeiOS.Kernel.TaskPriorityQueue::Add(t)*/;
                r0 = _[312]/*$t1 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t4 = t.Id*/;
                r0[r1] = 3/*$t1.set_Item($t4, 3)*/;
                r0 = _[310]/*$t7 = XaeiOS.Kernel.Scheduler._awaitingTask*/;
                if((!r0))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 3;
                _[310] = 0/*XaeiOS.Kernel.Scheduler._awaitingTask = 0*/;
                $$[580]()/*XaeiOS.Kernel.Scheduler::ResumeCpu()*/;
            }
            case 3:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*t*/)
 // 587: System.Void XaeiOS.Kernel.Scheduler::ScheduleTaskChecked(XaeiOS.Kernel.Task)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = _[312]/*$t0 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t3 = t.Id*/;
                r0 = r1 in r0/*$t4 = $t0.ContainsKey($t3)*/;
                if((!r0))
                {
                    $ep = 9;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = _[312]/*$t8 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t11 = t.Id*/;
                r0 = r0[r1]/*V_0.1 = $t8.get_Item($t11)*/;
                if((!(r0 == 0)))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                $ep = 9;
                $$[586](a0)/*XaeiOS.Kernel.Scheduler::ScheduleTask(t)*/;
                continue $ctrl;
            }
            case 4:
            {
                if((!(r0 == 1)))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                $ep = 9;
                r0 = _[312]/*$t27 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t30 = t.Id*/;
                r0[r1] = 0/*$t27.set_Item($t30, 0)*/;
                continue $ctrl;
            }
            case 6:
            {
                if((!(r0 == 2)))
                {
                    $ep = 8;
                    continue $ctrl;

                }
                else
                {
                    $ep = 7;

                }
            }
            case 7:
            {
                $ep = 9;
                $$[577](a0,null,2)/*XaeiOS.Kernel.Scheduler::CleanupTask(t, null, 2)*/;
                continue $ctrl;
            }
            case 8:
            {
                if((!(r0 == 3)))
                {
                    $ep = 10;
                    continue $ctrl;

                }
                else
                {
                    $ep = 9;

                }
            }
            case 9:
            {
                return;
            }
            case 10:
            {
                r0 = r0.$[0].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t50 = box(XaeiOS.Kernel.TaskStatus,V_0.1).ToString()*/;
                r0 = ("XaeiOS general protection error: Illegal task status - " + r0)/*$t51 = System.String::Concat("XaeiOS general protection error: Illegal task status - ", $t50)*/;
                r1 = {$:_[167],0:null,1:null,2:null,3:null}/*$t52 = new System.Void System.ExecutionEngineException::.ctor(System.String)($t51)*/;
                $$[327].call(r1,r0)/*$t52..ctor($t51)*/;
                throw r1/*$t52*/;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*t*/)
 // 588: System.Void XaeiOS.Kernel.Scheduler::BlockTask(XaeiOS.Kernel.Task)
{
    var r0,r1;
    r0 = _[312]/*$t0 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
    r1 = a0[3]/*$t3 = t.Id*/;
    r0[r1] = 1/*$t0.set_Item($t3, 1)*/;
    return;

},
function(a0/*t*/)
 // 589: System.Void XaeiOS.Kernel.Scheduler::KillTask(XaeiOS.Kernel.Task)
{
    var r0,r1;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = _[312]/*$t0 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t3 = t.Id*/;
                r0 = r0[r1]/*V_0.1 = $t0.get_Item($t3)*/;
                if((!(r0 == 1)))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                $ep = 5;
                $$[586](a0)/*XaeiOS.Kernel.Scheduler::ScheduleTask(t)*/;
                r0 = _[312]/*$t13 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t16 = t.Id*/;
                r0[r1] = 2/*$t13.set_Item($t16, 2)*/;
                continue $ctrl;
            }
            case 3:
            {
                if((r0 == 2))
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                $ep = 5;
                r0 = _[312]/*$t22 = XaeiOS.Kernel.Scheduler._taskStatusMap*/;
                r1 = a0[3]/*$t25 = t.Id*/;
                r0[r1] = 2/*$t22.set_Item($t25, 2)*/;
            }
            case 5:
            {
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*task*/)
 // 590: XaeiOS.Kernel.Task XaeiOS.SystemCalls::GetTask(XaeiOS.TaskHandle)
{
    var r0,r1;
    r0 = $$[609](a0)/*V_0.1 = XaeiOS.Kernel.Task::GetTaskById(task)*/;
    if((!(r0 == null)))
    {
        return r0/*V_0.1*/;

    }
    else
    {
        r0 = $$[251](0,Number.POSITIVE_INFINITY,null,[],[null,null,"Task with ",a0," does not exist."])/*$t12 = System.String::Concat("Task with ", task, " does not exist.")*/;
        r1 = {$:_[7],0:null,1:null,2:null,3:null}/*$t13 = new System.Void System.Exception::.ctor(System.String)($t12)*/;
        $$[18].call(r1,r0)/*$t13..ctor($t12)*/;
        throw r1/*$t13*/;

    }

},
function()
 // 591: System.Void XaeiOS.SystemCalls::InitializeKernel()
{
    $$[610]()/*XaeiOS.Kernel.Task::Initialize()*/;
    $$[621]()/*XaeiOS.Kernel.Continuation::Initialize()*/;
    $$[556]()/*XaeiOS.Kernel.TaskPriorityQueue::Initialize()*/;
    $$[568]()/*XaeiOS.Kernel.Scheduler::Initialize()*/;
    return;

},
function()
 // 592: System.Void XaeiOS.SystemCalls::StartKernel()
{
    $$[578]()/*XaeiOS.Kernel.Scheduler::StartCpu()*/;
    return;

},
function(a0/*task*/)
 // 593: System.Void XaeiOS.SystemCalls::StartTask(XaeiOS.TaskHandle)
{
    var r0;
    r0 = $$[590](a0)/*$t1 = XaeiOS.SystemCalls::GetTask(task)*/;
    $$[585](r0)/*XaeiOS.Kernel.Scheduler::StartTask($t1)*/;
    return;

},
function(a0/*task*/)
 // 594: System.Void XaeiOS.SystemCalls::ScheduleTask(XaeiOS.TaskHandle)
{
    var r0;
    r0 = $$[590](a0)/*$t1 = XaeiOS.SystemCalls::GetTask(task)*/;
    $$[587](r0)/*XaeiOS.Kernel.Scheduler::ScheduleTaskChecked($t1)*/;
    return;

},
function(a0/*task*/)
 // 595: System.Void XaeiOS.SystemCalls::BlockTask(XaeiOS.TaskHandle)
{
    var r0;
    r0 = $$[590](a0)/*$t1 = XaeiOS.SystemCalls::GetTask(task)*/;
    $$[588](r0)/*XaeiOS.Kernel.Scheduler::BlockTask($t1)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 596: System.Void XaeiOS.SystemCalls::Yield()
{
    throw $pc;
},
function(a0/*task*/)
 // 597: System.Void XaeiOS.SystemCalls::KillTask(XaeiOS.TaskHandle)
{
    var r0;
    r0 = $$[590](a0)/*$t1 = XaeiOS.SystemCalls::GetTask(task)*/;
    $$[589](r0)/*XaeiOS.Kernel.Scheduler::KillTask($t1)*/;
    return;

},
function()
 // 598: XaeiOS.TaskHandle XaeiOS.SystemCalls::GetCurrentTask()
{
    var r0;
    r0 = $$[563]()/*$t0 = XaeiOS.Kernel.Scheduler::get_CurrentTask()*/;
    r0 = r0[3]/*V_0.1 = $t0.Id*/;
    return r0/*V_0.1*/;

},
function()
 // 599: XaeiOS.TaskHandle XaeiOS.SystemCalls::GetExternalTask()
{
    var r0;
    r0 = $$[564](0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t0 = XaeiOS.Kernel.Scheduler::get_ExternalTask()*/;
    r0 = r0[3]/*V_0.1 = $t0.Id*/;
    return r0/*V_0.1*/;

},
function(a0/*self*/,a1/*fn*/,a2/*Callback*/,a3/*priority*/,a4/*name*/)
 // 600: XaeiOS.TaskHandle XaeiOS.SystemCalls::CreateTask(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String)
{
    var r0;
    r0 = {$:_[326],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:0}/*$t5 = new System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String)(self, fn, Callback, priority, name)*/;
    $$[617].call(r0,a0,a1,a2,a3,a4)/*$t5..ctor(self, fn, Callback, priority, name)*/;
    r0 = r0[3]/*V_1.1 = $t5.Id*/;
    return r0/*V_1.1*/;

},
function(a0/*exception*/)
 // 601: System.String XaeiOS.SystemCalls::GetStackTrace(System.Exception)
{
    var r2,r1,r0,r3;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = a0[0]/*V_1.1 = exception.ThrowContext*/;
                r3 = new Array()/*$t3 = new System.Void System.NativeArray`1<System.String>::.ctor()()*/;
                $ep = 2;
            }
            case 2:
            {
                if((!(r0 == null)))
                {
                    $ep = 4;
                    continue $ctrl;

                }
                else
                {
                    $ep = 3;

                }
            }
            case 3:
            {
                r2 = r3.join("")/*V_4.1 = $t3.Join("")*/;
                return r2/*V_4.1*/;
            }
            case 4:
            {
                r3.push("at ")/*$t3.Push("at ")*/;
                r2 = r0[4]/*$t13 = V_1.3.Frame*/;
                r2 = r2[1]/*$t14 = $t13.Function*/;
                r1 = $$[421](r2)/*V_3.1 = System.Runtime.CompilerServices.RuntimeHelpers::GetMethodNameForStackTrace($t14)*/;
                if((!(r1 == null)))
                {
                    $ep = 6;
                    continue $ctrl;

                }
                else
                {
                    $ep = 5;

                }
            }
            case 5:
            {
                r1 = "[External Code]"/*V_3.2 = "[External Code]"*/;
                $ep = 6;
            }
            case 6:
            {
                r3.push(r1)/*$t3.Push(V_3.3)*/;
                r3.push(":")/*$t3.Push(":")*/;
                r2 = r0[0]/*$t24 = V_1.3.ExecutionPointer*/;
                r2 = r2.toString()/*$t25 = $t24.ToString()*/;
                r3.push(r2)/*$t3.Push($t25)*/;
                r3.push("\n")/*$t3.Push("
")*/;
                r0 = r0[3]/*V_1.2 = V_1.3.ParentContinuation*/;
                $ep = 2;
                continue $ctrl;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function(a0/*task*/,a1/*exception*/)
 // 602: System.Void XaeiOS.SystemCalls::InjectException(XaeiOS.TaskHandle,System.Exception)
{
    var r0;
    r0 = $$[590](a0)/*$t1 = XaeiOS.SystemCalls::GetTask(task)*/;
    r0[6] = a1/*$t1.InjectedException = exception*/;
    return;

},
function()
 // 603: System.Void XaeiOS.SystemCalls::InvalidExecutionPointer()
{
    var r0;
    r0 = new Error("Invalid execution pointer")/*$t1 = new System.Void System.NativeError::.ctor(System.String)("Invalid execution pointer")*/;
    throw r0/*$t1*/;

},
function($ep,$end,$rv,$pc,$f)
// 604: System.Void XaeiOS.SystemCallAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 605: System.Void XaeiOS.Kernel.XaeiOSException::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*self*/,a1/*function*/)
 // 606: System.Void XaeiOS.Kernel.Frame::.ctor(System.Object,System.NativeFunction)
{
    this[0] = a0/*this.This = self*/;
    this[1] = a1/*this.Function = function*/;
    return;

},
function(a0/*self*/,a1/*function*/)
 // 607: System.Void XaeiOS.Kernel.OptimisticStackRebuildingContext::.ctor(System.Object,System.NativeFunction)
{
    this[0] = a0/*this.This = self*/;
    this[1] = a1/*this.Function = function*/;
    return;

},
function()
 // 608: System.Int32 XaeiOS.Kernel.Task::get_TaskCount()
{
    var r0;
    r0 = _[330]/*V_0.1 = XaeiOS.Kernel.Task._taskCount*/;
    return r0/*V_0.1*/;

},
function(a0/*id*/)
 // 609: XaeiOS.Kernel.Task XaeiOS.Kernel.Task::GetTaskById(System.Int32)
{
    var r1,r0;
    r1 = _[327]/*$t0 = XaeiOS.Kernel.Task.IdMap*/;
    r1 = a0 in r1/*V_1.1 = $t0.ContainsKey(id)*/;
    if(r1)
    {
        r1 = _[327]/*$t5 = XaeiOS.Kernel.Task.IdMap*/;
        r0 = r1[a0]/*V_0.2 = $t5.get_Item(id)*/;

    }
    else
    {
        r0 = null/*V_0.1 = null*/;

    }
    return r0/*V_0.3*/;

},
function()
 // 610: System.Void XaeiOS.Kernel.Task::Initialize()
{
    var r0;
    _[329] = 1/*XaeiOS.Kernel.Task._idCounter = 1*/;
    _[330] = 0/*XaeiOS.Kernel.Task._taskCount = 0*/;
    r0 = new Object()/*$t2 = new System.Void System.NativeObject::.ctor()()*/;
    _[327] = r0/*XaeiOS.Kernel.Task.IdMap = $t2*/;
    r0 = new Object()/*$t3 = new System.Void System.NativeObject::.ctor()()*/;
    _[328] = r0/*XaeiOS.Kernel.Task.NameMap = $t3*/;
    return;

},
function()
 // 611: System.String XaeiOS.Kernel.Task::get_Name()
{
    var r0,r1;
    r0 = _[328]/*$t0 = XaeiOS.Kernel.Task.NameMap*/;
    r1 = this[3]/*$t3 = this.Id*/;
    r0 = r0[r1]/*V_0.1 = $t0.get_Item($t3)*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 612: System.Int32 XaeiOS.Kernel.Task::GetHashCode()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*V_0.1 = this.Id*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 613: System.String XaeiOS.Kernel.Task::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $$[611].call(this)/*V_0.1 = this.get_Name()*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function(a0/*t*/)
 // 614: System.Void XaeiOS.Kernel.Task::RemoveTask(XaeiOS.Kernel.Task)
{
    var r0,r1;
    r0 = _[330]/*$t0 = XaeiOS.Kernel.Task._taskCount*/;
    _[330] = (r0 - 1)/*XaeiOS.Kernel.Task._taskCount = $t0 Subtract 1*/;
    r0 = _[328]/*$t3 = XaeiOS.Kernel.Task.NameMap*/;
    r1 = a0[3]/*$t6 = t.Id*/;
    delete r0[r1]/*$t3.RemoveKey($t6)*/;
    r0 = _[327]/*$t7 = XaeiOS.Kernel.Task.IdMap*/;
    r1 = a0[3]/*$t10 = t.Id*/;
    delete r0[r1]/*$t7.RemoveKey($t10)*/;
    return;

},
function()
 // 615: System.Void XaeiOS.Kernel.Task::Cleanup()
{
    _[328] = null/*XaeiOS.Kernel.Task.NameMap = null*/;
    _[327] = null/*XaeiOS.Kernel.Task.IdMap = null*/;
    _[330] = 0/*XaeiOS.Kernel.Task._taskCount = 0*/;
    return;

},
function(a0/*self*/,a1/*function*/,a2/*callback*/,a3/*priority*/,a4/*name*/,a5/*id*/)
 // 616: System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String,System.Int32)
{
    var r0;
    $$[5].call(this)/*this..ctor()*/;
    r0 = $$[622](a0,a1)/*$t6 = XaeiOS.Kernel.Continuation::Create(self, function)*/;
    this[0] = r0/*this.Continuation = $t6*/;
    this[1] = a0/*this.This = self*/;
    this[2] = a1/*this.Function = function*/;
    this[4] = a2/*this.Callback = callback*/;
    r0 = $$[584](a3)/*$t15 = XaeiOS.Kernel.Scheduler::DynamicPriority(priority)*/;
    this[5] = r0/*this.Priority = $t15*/;
    this[3] = a5/*this.Id = id*/;
    this[6] = null/*this.InjectedException = null*/;
    this[7] = 1250/*this.MaxTimeSlice = (System.Int64)1250*/;
    r0 = _[328]/*$t23 = XaeiOS.Kernel.Task.NameMap*/;
    r0[a5] = a4/*$t23.set_Item(id, name)*/;
    r0 = _[327]/*$t28 = XaeiOS.Kernel.Task.IdMap*/;
    r0[a5] = this/*$t28.set_Item(id, this)*/;
    r0 = _[330]/*$t33 = XaeiOS.Kernel.Task._taskCount*/;
    _[330] = (r0 + 1)/*XaeiOS.Kernel.Task._taskCount = $t33 Add 1*/;
    return;

},
function(a0/*self*/,a1/*function*/,a2/*callback*/,a3/*priority*/,a4/*name*/)
 // 617: System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority,System.String)
{
    var r0;
    r0 = _[329]/*$tf7 = XaeiOS.Kernel.Task._idCounter*/;
    _[329] = (r0 + 1)/*XaeiOS.Kernel.Task._idCounter = $tf7 Add 1*/;
    $$[616].call(this,a0,a1,a2,a3,a4,r0)/*this..ctor(self, function, callback, priority, name, $tf7)*/;
    return;

},
function(a0/*self*/,a1/*function*/,a2/*callback*/,a3/*priority*/)
 // 618: System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback,XaeiOS.Kernel.TaskPriority)
{
    var r0,r1;
    r0 = _[329]/*$t6 = &XaeiOS.Kernel.Task._idCounter*/;
    r0 = r0.toString()/*$t7 = $t6.ToString()*/;
    r1 = ("anonymous" + r0)/*$t8 = System.String::Concat("anonymous", $t7)*/;
    r0 = _[329]/*$tf10 = XaeiOS.Kernel.Task._idCounter*/;
    _[329] = (r0 + 1)/*XaeiOS.Kernel.Task._idCounter = $tf10 Add 1*/;
    $$[616].call(this,a0,a1,a2,a3,r1,r0)/*this..ctor(self, function, callback, priority, $t8, $tf10)*/;
    return;

},
function(a0/*self*/,a1/*function*/,a2/*callback*/)
 // 619: System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction,XaeiOS.Kernel.TaskCallback)
{
    $$[618].call(this,a0,a1,a2,3)/*this..ctor(self, function, callback, 3)*/;
    return;

},
function(a0/*self*/,a1/*function*/)
 // 620: System.Void XaeiOS.Kernel.Task::.ctor(System.Object,XaeiOS.Kernel.TaskFunction)
{
    $$[619].call(this,a0,a1,null)/*this..ctor(self, function, null)*/;
    return;

},
function()
 // 621: System.Void XaeiOS.Kernel.Continuation::Initialize()
{
    return;

},
function(a0/*self*/,a1/*function*/)
 // 622: XaeiOS.Kernel.Continuation XaeiOS.Kernel.Continuation::Create(System.Object,System.NativeFunction)
{
    var r0,r1;
    r1 = new Array()/*$t0 = new System.Void XaeiOS.Kernel.Continuation::.ctor()()*/;
    r1[0] = 1/*$t0.ExecutionPointer = 1*/;
    r1[3] = null/*$t0.ParentContinuation = null*/;
    r0 = new Array(a0, a1)/*$t5 = new System.Void XaeiOS.Kernel.Frame::.ctor(System.Object,System.NativeFunction)(self, function)*/;
    r1[4] = r0/*$t0.Frame = $t5*/;
    return r1/*$t0*/;

},
function()
 // 623: System.Void XaeiOS.Kernel.Continuation::.ctor()
{
    return;

}

/************
Object image System - Code: 624	Data: 345
**********/

,function($ep,$end,$rv,$pc,$f,r0)
// 624: System.Boolean System.Text.RegularExpressions.Regex::IsMatch(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = $f[2].match($f[3])/*$t2 = str.Match(pattern)*/;
                    return r0/*$t2*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 625: System.Void System.Text.RegularExpressions.Regex::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 626: System.Void System.Text.StringBuilder::Append(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._internalArray*/;
                    r0.push($f[2])/*$t1.Push(s)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 627: System.String System.Text.StringBuilder::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._internalArray*/;
                    $rv = r0.join("")/*$rv = $t1.Join("")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    return r0/*$t3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 628: System.Void System.Text.StringBuilder::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    r0 = new Array()/*$t2 = new System.Void System.NativeArray`1<System.String>::.ctor()()*/;
                    this[0] = r0/*this._internalArray = $t2*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


}

/************
Object image System.Browser - Code: 629	Data: 347
**********/

,function()
 // 629: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager::StartDriver()
{
    var r0,r1,r2;
    var $ep = 1;
    $ctrl:
    do
    {
        switch($ep)
        {
            case 1:
            {
                r0 = $$[54](0,Number.POSITIVE_INFINITY,null,[],[null,null,_[355]])/*$t1 = System.Type::GetTypeFromHandle(System.Browser.XmlHttpRequest.XmlHttpRequestManager)*/;
                r0 = r0.$[5].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t2 = $t1.get_Name()*/;
                r1 = (r0 + ".Driver")/*V_0.1 = System.String::Concat($t2, ".Driver")*/;
                r0 = _[356]/*$t5 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess*/;
                if((r0 == null))
                {
                    $ep = 3;
                    continue $ctrl;

                }
                else
                {
                    $ep = 2;

                }
            }
            case 2:
            {
                r0 = (r1 + " is already started. Only one signal daemon is allowed.")/*$t10 = System.String::Concat(V_0.1, " is already started. Only one signal daemon is allowed.")*/;
                r1 = {$:_[127],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.InvalidOperationException::.ctor(System.String)($t10)*/;
                $$[261].call(r1,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0])/*$t11..ctor($t10)*/;
                throw r1/*$t11*/;
            }
            case 3:
            {
                r0 = {$:_[131],0:0,1:null}/*$t12 = new System.Void System.Threading.ManualResetEvent::.ctor()()*/;
                $$[272].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t12..ctor()*/;
                _[357] = r0/*System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverExit = $t12*/;
                r0 = _[360]/*$t13 = System.Browser.XmlHttpRequest.XmlHttpRequestManager.CS$<>9__CachedAnonymousMethodDelegate1*/;
                if(r0)
                {
                    $ep = 5;
                    continue $ctrl;

                }
                else
                {
                    $ep = 4;

                }
            }
            case 4:
            {
                r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t16 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(null, System.Browser.XmlHttpRequest.XmlHttpRequestManager::<StartDriver>b__0)*/;
                $$[29](r0,null,$$[639])/*$t16..ctor(null, System.Browser.XmlHttpRequest.XmlHttpRequestManager::<StartDriver>b__0)*/;
                _[360] = r0/*System.Browser.XmlHttpRequest.XmlHttpRequestManager.CS$<>9__CachedAnonymousMethodDelegate1 = $t16*/;
                $ep = 5;
            }
            case 5:
            {
                r0 = _[360]/*$t17 = System.Browser.XmlHttpRequest.XmlHttpRequestManager.CS$<>9__CachedAnonymousMethodDelegate1*/;
                r2 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t20 = new System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String,System.Boolean)($t17, 4, V_0.1, 1)*/;
                $$[521].call(r2,0,Number.POSITIVE_INFINITY,null,[],[null,null,r0,4,r1,1])/*$t20..ctor($t17, 4, V_0.1, 1)*/;
                _[356] = r2/*System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess = $t20*/;
                r0 = _[356]/*$t21 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess*/;
                r1 = {$:_[284],0:null,1:null,2:null,3:null}/*$t24 = new System.Void XaeiOS.Process.CustomSignalHandler::.ctor(System.Object,System.IntPtr)(null, System.Browser.XmlHttpRequest.XmlHttpRequestManager::HandleCustomSignal)*/;
                $$[29](r1,null,$$[630])/*$t24..ctor(null, System.Browser.XmlHttpRequest.XmlHttpRequestManager::HandleCustomSignal)*/;
                $$[480].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null,r1])/*$t21.add_CustomSignal($t24)*/;
                r0 = _[356]/*$t25 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess*/;
                $$[498].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t25.Start()*/;
                return;
            }
            default:
            {
                throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
            }

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 630: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager::HandleCustomSignal(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = _[359]/*$tf1 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Enter($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 7/*Frame.ExceptionCatchPointer = 7*/;
                    r0 = _[359]/*$t2 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = r0.$[8].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = $t2.ContainsKey(data)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_2.1 = $rv*/;
                    if(r0)
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = _[359]/*$t5 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $rv = r0.$[5].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2]])/*$rv = $t5.get_Item(data)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*V_0.1 = $rv*/;
                    $$[643].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*V_0.1.OnReadyStateChange()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*System.Threading.Monitor::Exit($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 631: System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender System.Browser.XmlHttpRequest.XmlHttpRequestManager::CreateOnReadyStateChangeSignalSender(System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = _[359]/*$tf1 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Enter($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 6/*Frame.ExceptionCatchPointer = 6*/;
                    r1 = _[358]/*$t2 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._customSignalIdCounter*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    _[358] = (r1 + 1)/*System.Browser.XmlHttpRequest.XmlHttpRequestManager._customSignalIdCounter = $t2 Add 1*/;
                    r0 = _[359]/*$t6 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    r0.$[6].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,(r1 + 1),$f[2]])/*$t6.set_Item($t2 Add 1, handler)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = {$:_[361],0:0}/*$t8 = new System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender::.ctor()()*/;
                    $$[642].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t8..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0[0] = (r1 + 1)/*$t8.SignalId = $t2 Add 1*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Exit($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return r0/*$t8*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 632: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager::DestroyOnReadyStateChangeSignalSender(System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = _[359]/*$tf1 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Enter($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    r0 = _[359]/*$t2 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = $f[2][0]/*$t4 = sender.SignalId*/;
                    r0.$[10].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1])/*$t2.Remove($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2])/*System.Threading.Monitor::Exit($tf1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 633: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::GetXmlHttpRequest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = new XMLHttpRequest()/*$t0 = System.Browser.XmlHttpRequest.XmlHttpRequestManager::NativeGetXmlHttpRequest()*/;
                    r1 = {$:_[371],0:null}/*$t1 = new System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::.ctor(System.Browser.XmlHttpRequest.IXmlHttpRequest)($t0)*/;
                    $$[669].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t1..ctor($t0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return r1/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 634: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[637](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],0,null,null,null])/*$rv = System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest(url, 0, null, null, null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 635: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest(System.String,System.Browser.XmlHttpRequest.RequestMethod)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[638](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],0,null,null,null,-1])/*$rv = System.Browser.XmlHttpRequest.XmlHttpRequestManager::_doSimpleXmlHttpRequest(url, 0, null, null, null, -1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_1.1 = $rv*/;
                    return r0/*V_1.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 636: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest(System.String,System.Browser.XmlHttpRequest.RequestMethod,System.String,System.String,System.String,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if(($f[7] > 0))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[134],0:null,1:null,2:null,3:null}/*$t5 = new System.Void System.ArgumentOutOfRangeException::.ctor(System.String)("timeoutMs must be greater than 0")*/;
                    $$[287].call(r0,"timeoutMs must be greater than 0")/*$t5..ctor("timeoutMs must be greater than 0")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t5*/;
                }
                case 4:
                {
                    $ep = 5;
                    $rv = $$[638](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],$f[3],$f[4],$f[5],$f[6],$f[7]])/*$rv = System.Browser.XmlHttpRequest.XmlHttpRequestManager::_doSimpleXmlHttpRequest(url, method, postData, username, password, timeoutMs)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 637: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest(System.String,System.Browser.XmlHttpRequest.RequestMethod,System.String,System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[638](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],$f[3],$f[4],$f[5],$f[6],-1])/*$rv = System.Browser.XmlHttpRequest.XmlHttpRequestManager::_doSimpleXmlHttpRequest(url, method, postData, username, password, -1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4)
// 638: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestManager::_doSimpleXmlHttpRequest(System.String,System.Browser.XmlHttpRequest.RequestMethod,System.String,System.String,System.String,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = new XMLHttpRequest()/*$t45 = System.Browser.XmlHttpRequest.XmlHttpRequestManager::NativeGetXmlHttpRequest()*/;
                    r4 = {$:_[371],0:null}/*$t46 = new System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::.ctor(System.Browser.XmlHttpRequest.IXmlHttpRequest)($t45)*/;
                    $$[669].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r1])/*$t46..ctor($t45)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = {$:_[21],0:null,1:null}/*$t1 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = {$:_[235],0:null,1:null,2:null,3:null,4:0}/*$t2 = new System.Void System.Threading.TimedCondition::.ctor(System.Threading.Lock)($t1)*/;
                    $$[433].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r1])/*$t2..ctor($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r1 = _[356]/*$t3 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess*/;
                    if((!(r1 == null)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = {$:_[92],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.SystemException::.ctor(System.String)("XmlHttpRequestManager.Driver was not started.")*/;
                    $$[170].call(r1,"XmlHttpRequestManager.Driver was not started.")/*$t11..ctor("XmlHttpRequestManager.Driver was not started.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    throw r1/*$t11*/;
                }
                case 8:
                {
                    $ep = 9;
                    r1 = {$:_[362],0:null,1:null}/*$t12 = new System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler::.ctor()()*/;
                    $$[644].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null])/*$t12..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r1[1] = r4/*$t12.XmlHttpRequest = $t46*/;
                    r1[0] = r2/*$t12.Condition = $t2*/;
                    $rv = $$[631](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r1])/*$rv = System.Browser.XmlHttpRequest.XmlHttpRequestManager::CreateOnReadyStateChangeSignalSender($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $f.$ecp = 21/*Frame.ExceptionCatchPointer = 21*/;
                    r3 = $rv/*V_4.1 = $rv*/;
                    r1 = $$[109].call($$[641],r3)/*$t15 = new System.Void System.NativeVoidDelegate::.ctor(System.Object,System.IntPtr)(V_4.1, System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender::SendSignal)*/;
                    $ep = 11;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    /*$t15..ctor(V_4.1, System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender::SendSignal)*/if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r1 = $$[110](r1)/*$t16 = System.NativeFunction::op_Explicit($t15)*/;
                    $$[667].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r1])/*$t46.set_OnReadyStateChange($t16)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    if((!($f[3] == 0)))
                    {
                        $ep = 14;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                }
                case 14:
                {
                    r0 = "POST"/*V_5.2 = "POST"*/;
                    $ep = 16;
                    continue $ctrl;
                }
                case 15:
                {
                    r0 = "GET"/*V_5.1 = "GET"*/;
                    $ep = 16;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    $$[659].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r0,$f[2],1,$f[5],$f[6]])/*$t46.Open(V_5.3, url, 1, username, password)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    $$[660].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,$f[4]])/*$t46.Send(postData)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    if((!($f[7] > 0)))
                    {
                        $ep = 20;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 19;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 19:
                {
                    $ep = 21;
                    $f.$ecp = 23/*Frame.ExceptionCatchPointer = 23*/;
                    $$[431].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,$f[7]])/*$t2.Await(timeoutMs)*/;
                    continue $ctrl;
                }
                case 20:
                {
                    $ep = 21;
                    $$[429].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null])/*$t2.Await()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[632](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r3])/*System.Browser.XmlHttpRequest.XmlHttpRequestManager::DestroyOnReadyStateChangeSignalSender(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    return r4/*$t46*/;
                }
                case 23:
                {
                    $f.$ecp = 21/*Frame.ExceptionCatchPointer = 21*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 24;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    $$[667].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,null])/*V_0.set_OnReadyStateChange(null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r2 = ("Timeout waiting for " + $f[2])/*$t43 = System.String::Concat("Timeout waiting for ", url)*/;
                    r3 = {$:_[366],0:null,1:null,2:null,3:null,4:null}/*$t44 = new System.Void System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException::.ctor(System.String,System.Browser.XmlHttpRequest.XmlHttpRequest)($t43, V_0)*/;
                    $$[647].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4],[null,null,r2,r1])/*$t44..ctor($t43, V_0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    throw r3/*$t44*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 639: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager::<StartDriver>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 640: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    _[358] = 0/*System.Browser.XmlHttpRequest.XmlHttpRequestManager._customSignalIdCounter = 0*/;
                    r0 = {$:_[169],0:null,1:null,2:null}/*$t1 = new System.Void System.Collections.Generic.Dictionary`2<System.Int32,System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler>::.ctor()()*/;
                    $$[337].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    _[359] = r0/*System.Browser.XmlHttpRequest.XmlHttpRequestManager._onReadyStateChangeSignalHandlers = $t1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 641: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender::SendSignal()
{
    var r0,r1;
    r0 = _[356]/*$t0 = System.Browser.XmlHttpRequest.XmlHttpRequestManager._driverProcess*/;
    r1 = $$[471].call(r0,0,Number.POSITIVE_INFINITY,null,[],[null,null])/*$t1 = $t0.get_PID()*/;
    r0 = this[0]/*$t4 = this.SignalId*/;
    $$[526](0,Number.POSITIVE_INFINITY,null,[],[null,null,r1,16,r0])/*XaeiOS.Process.SignalDaemon::SendSignal($t1, 16, $t4)*/;
    return;

},
function($ep,$end,$rv,$pc,$f)
// 642: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 643: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler::OnReadyStateChange()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[1]/*$t1 = this.XmlHttpRequest*/;
                    $rv = $$[665].call(r0)/*$rv = $t1.get_ReadyState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t2 = $rv*/;
                    if((!(r0 == 4)))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[0]/*$t10 = this.Condition*/;
                    $$[428].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t10.Signal()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 644: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 645: System.Browser.XmlHttpRequest.XmlHttpRequest System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException::get_XmlHttpRequest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[4]/*V_0.1 = this.<XmlHttpRequest>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 646: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException::set_XmlHttpRequest(System.Browser.XmlHttpRequest.XmlHttpRequest)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[4] = $f[2]/*this.<XmlHttpRequest>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 647: System.Void System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException::.ctor(System.String,System.Browser.XmlHttpRequest.XmlHttpRequest)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[18].call(this,$f[2])/*this..ctor(message)*/;
                    $$[646].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[3]])/*this.set_XmlHttpRequest(xmlHttpRequest)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 648: System.Browser.Dom.IDomElement System.Browser.Dom.DomManager::CreateElement(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = document/*$t0 = System.Browser.Dom.DomManager::get_Document()*/;
                    $rv = r0.createElement($f[2])/*$rv = $t0.CreateElement(tagName)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_0.1 = $rv*/;
                    $$[649](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.Browser.Dom.DomManager::RegisterElement(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 649: System.Void System.Browser.Dom.DomManager::RegisterElement(System.Browser.Dom.IDomElement)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[369],0:null}/*$t1 = new System.Void System.Browser.Dom.DomManager/DomElementResourceWrapper::.ctor(System.Browser.Dom.IDomElement)(element)*/;
                    $$[652].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t1..ctor(element)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[265](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.Resources.ResourceManager::RegisterResource($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 650: System.Void System.Browser.Dom.DomManager/DomElementResourceWrapper::Dispose()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*$t1 = this.DomElement*/;
                    if((r0 == null))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = this[0]/*$t6 = this.DomElement*/;
                    $rv = r0.parentNode/*$rv = $t6.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    if((r0 == null))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[0]/*$t12 = this.DomElement*/;
                    $rv = r0.parentNode/*$rv = $t12.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t13 = $rv*/;
                    r1 = this[0]/*$t15 = this.DomElement*/;
                    r0.removeChild(r1)/*$t13.RemoveChild($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    this[0] = null/*this.DomElement = null*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 651: System.String System.Browser.Dom.DomManager/DomElementResourceWrapper::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = this[0]/*$t1 = this.DomElement*/;
                    if((r1 == null))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 4;
                    r1 = this[0]/*$t6 = this.DomElement*/;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0],[null,null])/*$rv = $t6.ToString()*/;
                    continue $ctrl;
                }
                case 3:
                {
                    r0 = "[free]"/*V_0.2 = "[free]"*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 652: System.Void System.Browser.Dom.DomManager/DomElementResourceWrapper::.ctor(System.Browser.Dom.IDomElement)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this.DomElement = domElement*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 653: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Abort()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.abort()/*$t1.Abort()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 654: System.String System.Browser.XmlHttpRequest.XmlHttpRequest::GetAllResponseHeaders()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.getAllResponseHeaders()/*$rv = $t1.GetAllResponseHeaders()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 655: System.String System.Browser.XmlHttpRequest.XmlHttpRequest::GetResponseHeader(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.getResponseHeader($f[2])/*$rv = $t1.GetResponseHeader(header)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 656: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Open(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.open($f[2],$f[3])/*$t1.Open(method, url)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 657: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Open(System.String,System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.open($f[2],$f[3],$f[4])/*$t1.Open(method, url, async)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 658: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Open(System.String,System.String,System.Boolean,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.open($f[2],$f[3],$f[4],$f[5])/*$t1.Open(method, url, async, username)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 659: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Open(System.String,System.String,System.Boolean,System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.open($f[2],$f[3],$f[4],$f[5],$f[6])/*$t1.Open(method, url, async, username, password)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 660: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::Send(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.send($f[2])/*$t1.Send(postData)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 661: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::SetRequestHeader(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.setRequestHeader($f[2],$f[3])/*$t1.SetRequestHeader(label, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 662: System.String System.Browser.XmlHttpRequest.XmlHttpRequest::get_ResponseText()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.responseText/*$rv = $t1.get_ResponseText()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 663: System.Int32 System.Browser.XmlHttpRequest.XmlHttpRequest::get_Status()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.status/*$rv = $t1.get_Status()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 664: System.String System.Browser.XmlHttpRequest.XmlHttpRequest::get_StatusText()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.statusText/*$rv = $t1.get_StatusText()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function()
 // 665: System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.XmlHttpRequest::get_ReadyState()
{
    var r0;
    r0 = this[0]/*$t1 = this._xhr*/;
    r0 = r0.readyState/*V_0.1 = $t1.get_ReadyState()*/;
    return r0/*V_0.1*/;

},
function($ep,$end,$rv,$pc,$f,r0)
// 666: System.NativeFunction System.Browser.XmlHttpRequest.XmlHttpRequest::get_OnReadyStateChange()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    $rv = r0.onreadystatechange/*$rv = $t1.get_OnReadyStateChange()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 667: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::set_OnReadyStateChange(System.NativeFunction)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._xhr*/;
                    r0.onreadystatechange = $f[2]/*$t1.set_OnReadyStateChange(value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 668: System.String System.Browser.XmlHttpRequest.XmlHttpRequest::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $$[422](_[0],7)/*V_1.1 = new System.Object[7]*/;
                    r1[0] = "XmlHttpRequest(ReadyState="/*V_1.1[0] = "XmlHttpRequest(ReadyState="*/;
                    r0 = this[0]/*$t6 = this._xhr*/;
                    $rv = r0.readyState/*$rv = $t6.get_ReadyState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t7 = $rv*/;
                    r1[1] = r0/*V_1.1[1] = box(System.Browser.XmlHttpRequest.ReadyState,$t7)*/;
                    r1[2] = ", Status="/*V_1.1[2] = ", Status="*/;
                    r0 = this[0]/*$t13 = this._xhr*/;
                    $rv = r0.status/*$rv = $t13.get_Status()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t14 = $rv*/;
                    r1[3] = new Number(r0)/*V_1.1[3] = box(System.Int32,$t14)*/;
                    r1[4] = " "/*V_1.1[4] = " "*/;
                    r0 = this[0]/*$t20 = this._xhr*/;
                    $rv = r0.statusText/*$rv = $t20.get_StatusText()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t21 = $rv*/;
                    r1[5] = r0/*V_1.1[5] = $t21*/;
                    r1[6] = ")"/*V_1.1[6] = ")"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 669: System.Void System.Browser.XmlHttpRequest.XmlHttpRequest::.ctor(System.Browser.XmlHttpRequest.IXmlHttpRequest)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this._xhr = xhr*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


}

/************
Object image XaeiOS.ProcessViewer - Code: 670	Data: 373
**********/

,function($ep,$end,$rv,$pc,$f,r0)
// 670: System.Int32 XaeiOS.ProcessViewer.ProcessViewer::get_UpdateInterval()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[7]/*V_0.1 = this.<UpdateInterval>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 671: System.Void XaeiOS.ProcessViewer.ProcessViewer::set_UpdateInterval(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[7] = $f[2]/*this.<UpdateInterval>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 672: System.Void XaeiOS.ProcessViewer.ProcessViewer::Start()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Process viewer building UI"])/*System.Console::WriteLine("Process viewer building UI")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[673].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.BuildUI()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[676].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.UpdateSIPs()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[677].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.UpdateThreads()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = this[4]/*$t6 = this._lastUpdatedElement*/;
                    r0 = new Date()/*$t8 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t8.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t9 = $rv*/;
                    r0 = ("Last updated: " + r0)/*$t10 = System.String::Concat("Last updated: ", $t9)*/;
                    r1.innerHTML = r0/*$t6.set_InnerHtml($t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 3;
                    r0 = this[7]/*V_1.1 = this.<UpdateInterval>k__BackingField*/;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*System.Threading.Thread::Sleep(V_1.1)*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 673: System.Void XaeiOS.ProcessViewer.ProcessViewer::BuildUI()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = document/*$t1 = System.Browser.Dom.DomManager::get_Document()*/;
                    $rv = r0.getElementById("process-viewer-area")/*$rv = $t1.GetElementById("process-viewer-area")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t3 = $rv*/;
                    this[0] = r0/*this._processViewerArea = $t3*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"table"])/*$rv = System.Browser.Dom.DomManager::CreateElement("table")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t6 = $rv*/;
                    this[1] = r0/*this._mainTable = $t6*/;
                    r0 = this[1]/*$t8 = this._mainTable*/;
                    r0.setAttribute("cellspacing","2")/*$t8.SetAttribute("cellspacing", "2")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[1]/*$t13 = this._mainTable*/;
                    r0.setAttribute("cellpadding","2")/*$t13.SetAttribute("cellpadding", "2")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"tr"])/*$rv = System.Browser.Dom.DomManager::CreateElement("tr")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r3 = $rv/*V_0.1 = $rv*/;
                    r3.setAttribute("valign","top")/*V_0.1.SetAttribute("valign", "top")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r2 = $rv/*V_1.1 = $rv*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"span"])/*$rv = System.Browser.Dom.DomManager::CreateElement("span")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*V_2.1 = $rv*/;
                    r0.innerHTML = "Processes:<br />----------------------------------------<br />"/*V_2.1.set_InnerHtml("Processes:<br />----------------------------------------<br />")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r2.appendChild(r0)/*V_1.1.AppendChild(V_2.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"table"])/*$rv = System.Browser.Dom.DomManager::CreateElement("table")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r1 = $rv/*V_8.1 = $rv*/;
                    r1.innerHTML = "<tr><td>ID</td><td>Name</td></tr>"/*V_8.1.set_InnerHtml("<tr><td>ID</td><td>Name</td></tr>")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"tbody"])/*$rv = System.Browser.Dom.DomManager::CreateElement("tbody")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r0 = $rv/*$t31 = $rv*/;
                    this[2] = r0/*this._sipTableBody = $t31*/;
                    r0 = this[2]/*$t33 = this._sipTableBody*/;
                    r1.appendChild(r0)/*V_8.1.AppendChild($t33)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r2.appendChild(r1)/*V_1.1.AppendChild(V_8.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r3.appendChild(r2)/*V_0.1.AppendChild(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $rv/*V_1.2 = $rv*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"span"])/*$rv = System.Browser.Dom.DomManager::CreateElement("span")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r0 = $rv/*V_4.1 = $rv*/;
                    r0.innerHTML = "Threads:<br />---------------------------------------------------------------<br />"/*V_4.1.set_InnerHtml("Threads:<br />---------------------------------------------------------------<br />")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r2.appendChild(r0)/*V_1.2.AppendChild(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"table"])/*$rv = System.Browser.Dom.DomManager::CreateElement("table")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    r1 = $rv/*V_6.1 = $rv*/;
                    r1.innerHTML = "<tr><td>ID</td><td>Name</td><td>Process</td><td>Priority</td></tr>"/*V_6.1.set_InnerHtml("<tr><td>ID</td><td>Name</td><td>Process</td><td>Priority</td></tr>")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"tbody"])/*$rv = System.Browser.Dom.DomManager::CreateElement("tbody")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r0 = $rv/*$t43 = $rv*/;
                    this[3] = r0/*this._threadTableBody = $t43*/;
                    r0 = this[3]/*$t45 = this._threadTableBody*/;
                    r1.appendChild(r0)/*V_6.1.AppendChild($t45)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r2.appendChild(r1)/*V_1.2.AppendChild(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    r3.appendChild(r2)/*V_0.1.AppendChild(V_1.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r0 = this[1]/*$t47 = this._mainTable*/;
                    r0.appendChild(r3)/*$t47.AppendChild(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r0 = this[0]/*$t49 = this._processViewerArea*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"br"])/*$rv = System.Browser.Dom.DomManager::CreateElement("br")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r1 = $rv/*$t51 = $rv*/;
                    r0.appendChild(r1)/*$t49.AppendChild($t51)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"span"])/*$rv = System.Browser.Dom.DomManager::CreateElement("span")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    r0 = $rv/*$t54 = $rv*/;
                    this[4] = r0/*this._lastUpdatedElement = $t54*/;
                    r0 = this[0]/*$t56 = this._processViewerArea*/;
                    r1 = this[4]/*$t58 = this._lastUpdatedElement*/;
                    r0.appendChild(r1)/*$t56.AppendChild($t58)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    r0 = this[0]/*$t60 = this._processViewerArea*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"br"])/*$rv = System.Browser.Dom.DomManager::CreateElement("br")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    $ep = 34;
                    r1 = $rv/*$t62 = $rv*/;
                    r0.appendChild(r1)/*$t60.AppendChild($t62)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 34:
                {
                    $ep = 35;
                    r0 = this[0]/*$t64 = this._processViewerArea*/;
                    r1 = this[1]/*$t66 = this._mainTable*/;
                    r0.appendChild(r1)/*$t64.AppendChild($t66)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 35:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 674: System.Browser.Dom.IDomElement XaeiOS.ProcessViewer.ProcessViewer::BuildSIPTable()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"table"])/*$rv = System.Browser.Dom.DomManager::CreateElement("table")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_0.1 = $rv*/;
                    r0.innerHTML = "<tr><td>ID</td><td>Name</td></tr>"/*V_0.1.set_InnerHtml("<tr><td>ID</td><td>Name</td></tr>")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 675: System.Browser.Dom.IDomElement XaeiOS.ProcessViewer.ProcessViewer::BuildThreadTable()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"table"])/*$rv = System.Browser.Dom.DomManager::CreateElement("table")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_0.1 = $rv*/;
                    r0.innerHTML = "<tr><td>ID</td><td>Name</td><td>Process</td><td>Priority</td></tr>"/*V_0.1.set_InnerHtml("<tr><td>ID</td><td>Name</td><td>Process</td><td>Priority</td></tr>")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5)
// 676: System.Void XaeiOS.ProcessViewer.ProcessViewer::UpdateSIPs()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r5 = {$:_[186],0:null,1:0}/*$t0 = new System.Void System.Collections.Generic.List`1<System.Browser.Dom.IDomElement>::.ctor()()*/;
                    $$[384].call(r5,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[518](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$rv = XaeiOS.SIP::GetSIPs()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r4 = $rv/*V_1.1 = $rv*/;
                    r0 = 0/*V_2.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((r0 < r4.length))
                    {
                        $ep = 19;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    r0 = 0/*V_2.2 = 0*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = this[5]/*$t9 = this._sipRows*/;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$rv = $t9.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r1 = $rv/*$t10 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    r0 = 0/*V_2.3 = 0*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = r5.$[11].call(r5,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r1 = $rv/*$t14 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    this[5] = r5/*this._sipRows = $t0*/;
                    return;
                }
                case 12:
                {
                    $ep = 13;
                    r1 = this[2]/*$t19 = this._sipTableBody*/;
                    $rv = r5.$[4].call(r5,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,r0])/*$rv = $t0.get_Item(V_2.9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r2 = $rv/*$t20 = $rv*/;
                    r1.appendChild(r2)/*$t19.AppendChild($t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    r0 = (r0 + 1)/*V_2.4 = V_2.9 Add 1*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 15:
                {
                    $ep = 16;
                    r1 = this[5]/*$t24 = this._sipRows*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,r0])/*$rv = $t24.get_Item(V_2.8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r2 = $rv/*V_6.1 = $rv*/;
                    $rv = r2.parentNode/*$rv = V_6.1.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r1 = $rv/*$t26 = $rv*/;
                    r1.removeChild(r2)/*$t26.RemoveChild(V_6.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    r0 = (r0 + 1)/*V_2.5 = V_2.8 Add 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 19:
                {
                    $ep = 20;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,"tr"])/*$rv = System.Browser.Dom.DomManager::CreateElement("tr")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r3 = $rv/*V_4.1 = $rv*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r2 = $rv/*V_5.1 = $rv*/;
                    $rv = $$[471].call(r4[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$rv = V_1.1[V_2.7].get_PID()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    r1 = $rv/*V_7.1 = $rv*/;
                    r1 = r1.toString()/*$t35 = V_7.1.ToString()*/;
                    r2.innerHTML = r1/*V_5.1.set_InnerHtml($t35)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r2 = $rv/*V_5.2 = $rv*/;
                    $rv = $$[473].call(r4[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null])/*$rv = V_1.1[V_2.7].get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    r1 = $rv/*$t38 = $rv*/;
                    r2.innerHTML = r1/*V_5.2.set_InnerHtml($t38)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r5.$[9].call(r5,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5],[null,null,r3])/*$t0.Add(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    r0 = (r0 + 1)/*V_2.6 = V_2.7 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4)
// 677: System.Void XaeiOS.ProcessViewer.ProcessViewer::UpdateThreads()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[6]/*$t2 = this._threadRows*/;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = $t2.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = $rv/*$t3 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 34;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = {$:_[186],0:null,1:0}/*$t7 = new System.Void System.Collections.Generic.List`1<System.Browser.Dom.IDomElement>::.ctor()()*/;
                    $$[384].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$t7..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    this[6] = r1/*this._threadRows = $t7*/;
                    $rv = $$[161](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = System.Threading.Thread::GetThreads()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r4 = $rv/*V_2.1 = $rv*/;
                    r0 = 0/*V_0.2 = 0*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    if((r0 < r4.length))
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    return;
                }
                case 9:
                {
                    $ep = 10;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,"tr"])/*$rv = System.Browser.Dom.DomManager::CreateElement("tr")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r3 = $rv/*V_4.1 = $rv*/;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    r2 = $rv/*V_5.1 = $rv*/;
                    r1 = $$[135].call(r4[r0])/*V_6.1 = V_2.1[V_0.6].get_Task()*/;
                    if((r1 == null))
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 12;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = V_6.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 15;
                    r1 = $rv/*$t23 = $rv*/;
                    r2.innerHTML = r1/*V_5.1.set_InnerHtml($t23)*/;
                    continue $ctrl;
                }
                case 14:
                {
                    $ep = 15;
                    r2.innerHTML = "?"/*V_5.1.set_InnerHtml("?")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r2 = $rv/*V_5.2 = $rv*/;
                    r1 = $$[142].call(r4[r0])/*$t26 = V_2.1[V_0.6].get_Name()*/;
                    r2.innerHTML = r1/*V_5.2.set_InnerHtml($t26)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r2 = $rv/*V_5.3 = $rv*/;
                    $rv = $$[137].call(r4[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = V_2.1[V_0.6].get_SIP()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    r1 = $rv/*V_7.1 = $rv*/;
                    if((r1 == null))
                    {
                        $ep = 22;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 23;
                        continue $ctrl;

                    }
                }
                case 22:
                {
                    $ep = 25;
                    r2.innerHTML = "?"/*V_5.3.set_InnerHtml("?")*/;
                    continue $ctrl;
                }
                case 23:
                {
                    $ep = 24;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = V_7.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r1 = $rv/*$t33 = $rv*/;
                    r2.innerHTML = r1/*V_5.3.set_InnerHtml($t33)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,"td"])/*$rv = System.Browser.Dom.DomManager::CreateElement("td")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r2 = $rv/*V_5.4 = $rv*/;
                    $rv = $$[138].call(r4[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = V_2.1[V_0.6].get_Priority()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r1 = $rv/*$t36 = $rv*/;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null])/*$rv = box(System.Threading.ThreadPriority,$t36).ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r1 = $rv/*$t38 = $rv*/;
                    r2.innerHTML = r1/*V_5.4.set_InnerHtml($t38)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    r3.appendChild(r2)/*V_4.1.AppendChild(V_5.4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    r1 = this[6]/*$t40 = this._threadRows*/;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,r3])/*$t40.Add(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    r1 = this[3]/*$t42 = this._threadTableBody*/;
                    r1.appendChild(r3)/*$t42.AppendChild(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    r0 = (r0 + 1)/*V_0.3 = V_0.8 Add 1*/;
                    $ep = 7;
                    continue $ctrl;
                }
                case 34:
                {
                    $ep = 35;
                    r1 = this[6]/*$t48 = this._threadRows*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4],[null,null,r0])/*$rv = $t48.get_Item(V_0.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 35:
                {
                    $ep = 36;
                    r2 = $rv/*V_1.1 = $rv*/;
                    $rv = r2.parentNode/*$rv = V_1.1.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    $ep = 37;
                    r1 = $rv/*$t50 = $rv*/;
                    r1.removeChild(r2)/*$t50.RemoveChild(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 37:
                {
                    r0 = (r0 + 1)/*V_0.4 = V_0.5 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 678: System.Void XaeiOS.ProcessViewer.ProcessViewer::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[186],0:null,1:0}/*$t1 = new System.Void System.Collections.Generic.List`1<System.Browser.Dom.IDomElement>::.ctor()()*/;
                    $$[384].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    this[5] = r0/*this._sipRows = $t1*/;
                    r0 = {$:_[186],0:null,1:0}/*$t3 = new System.Void System.Collections.Generic.List`1<System.Browser.Dom.IDomElement>::.ctor()()*/;
                    $$[384].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t3..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    this[6] = r0/*this._threadRows = $t3*/;
                    $$[5].call(this)/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[671].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,500])/*this.set_UpdateInterval(500)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 679: System.Void XaeiOS.ProcessViewer.Program::Main(System.String[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[373],0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:0}/*$t0 = new System.Void XaeiOS.ProcessViewer.ProcessViewer::.ctor()()*/;
                    $$[678].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[672].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 680: System.Void XaeiOS.ProcessViewer.Program::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


}

/************
Object image XaeiOS.TestSuite - Code: 681	Data: 375
**********/

,function($ep,$end,$rv,$pc,$f)
// 681: System.Void XaeiOS.TestSuite.TestRunner::Main(System.String[])
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[524]()/*XaeiOS.Process.SignalDaemon::Start()*/;
                    $$[629]()/*System.Browser.XmlHttpRequest.XmlHttpRequestManager::StartDriver()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[682](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*XaeiOS.TestSuite.TestRunner::RunProcessViewer()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[683](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*XaeiOS.TestSuite.TestRunner::RunTestSuite()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 682: System.Void XaeiOS.TestSuite.TestRunner::RunProcessViewer()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = _[379]/*$t0 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate2*/;
                    if(r1)
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__0)*/;
                    $$[29](r0,null,$$[689])/*$t3..ctor(null, XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    _[379] = r0/*XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate2 = $t3*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = _[379]/*$t4 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate2*/;
                    r2 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t7 = new System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String)($t4, 3, "Process Viewer")*/;
                    $$[520].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0,3,"Process Viewer"])/*$t7..ctor($t4, 3, "Process Viewer")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = _[380]/*$t8 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate3*/;
                    r1 = r2/*$ts0 = $t7*/;
                    if(r0)
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = {$:_[11],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__1)*/;
                    $$[29](r0,null,$$[690])/*$t11..ctor(null, XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    _[380] = r0/*XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate3 = $t11*/;
                    r1 = r2/*$ts0 = $t7*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    $ep = 9;
                    r0 = _[380]/*$t12 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate3*/;
                    $$[488].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$ts0.add_Exited($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[498].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t7.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 683: System.Void XaeiOS.TestSuite.TestRunner::RunTestSuite()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = _[381]/*$t0 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate6*/;
                    if(r1)
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__4)*/;
                    $$[29](r0,null,$$[691])/*$t3..ctor(null, XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    _[381] = r0/*XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate6 = $t3*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = _[381]/*$t4 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate6*/;
                    r2 = {$:_[277],0:null,1:null,2:null,3:0,4:null,5:0,6:null,7:null,8:null,9:null,10:null,11:0,12:null,13:null,14:null}/*$t7 = new System.Void XaeiOS.SIP::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority,System.String)($t4, 3, "XaeiOS.TestSuite")*/;
                    $$[520].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0,3,"XaeiOS.TestSuite"])/*$t7..ctor($t4, 3, "XaeiOS.TestSuite")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    r0 = _[382]/*$t8 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate7*/;
                    r1 = r2/*$ts0 = $t7*/;
                    if(r0)
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = {$:_[11],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__5)*/;
                    $$[29](r0,null,$$[692])/*$t11..ctor(null, XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    _[382] = r0/*XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate7 = $t11*/;
                    r1 = r2/*$ts0 = $t7*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    $ep = 9;
                    r0 = _[382]/*$t12 = XaeiOS.TestSuite.TestRunner.CS$<>9__CachedAnonymousMethodDelegate7*/;
                    $$[488].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$ts0.add_Exited($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[498].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t7.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4)
// 684: System.Collections.Generic.List`1<XaeiOS.TestSuite.ITest> XaeiOS.TestSuite.TestRunner::GetTestCases()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r4 = {$:_[186],0:null,1:0}/*$t0 = new System.Void System.Collections.Generic.List`1<XaeiOS.TestSuite.ITest>::.ctor()()*/;
                    $$[384].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = _[376]/*$t2 = XaeiOS.TestSuite.TestRunner._testSuites*/;
                    if((r0 < r2.length))
                    {
                        $ep = 19;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3 = $$[422](_[384],10)/*V_9.1 = new XaeiOS.TestSuite.ITest[10]*/;
                    r2 = {$:_[401],0:null,1:0,2:null}/*$t10 = new System.Void XaeiOS.TestSuite.Tests.NullReferenceExceptionTest::.ctor()()*/;
                    $$[791].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t10..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r3[0] = r2/*V_9.1[0] = $t10*/;
                    r2 = {$:_[389],0:null,1:0,2:null,3:0,4:0}/*$t14 = new System.Void XaeiOS.TestSuite.Tests.ThreadSleepTest::.ctor(System.Int32,System.Int32)(4, 3)*/;
                    $$[717].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,4,3])/*$t14..ctor(4, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r3[1] = r2/*V_9.1[1] = $t14*/;
                    r2 = {$:_[404],0:null,1:0,2:null}/*$t16 = new System.Void XaeiOS.TestSuite.Tests.ResourceTest::.ctor()()*/;
                    $$[799].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t16..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r3[2] = r2/*V_9.1[2] = $t16*/;
                    r2 = {$:_[402],0:null,1:0,2:null,3:null}/*$t18 = new System.Void XaeiOS.TestSuite.Tests.SynchronizationTest::.ctor()()*/;
                    $$[794].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t18..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r3[3] = r2/*V_9.1[3] = $t18*/;
                    r2 = {$:_[387],0:null,1:0,2:null,3:null,4:null,5:null}/*$t20 = new System.Void XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::.ctor()()*/;
                    $$[713].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t20..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r3[4] = r2/*V_9.1[4] = $t20*/;
                    r2 = {$:_[392],0:null,1:0,2:null,3:0,4:0,5:0,6:null,7:null}/*$t22 = new System.Void XaeiOS.TestSuite.Tests.EventTest::.ctor()()*/;
                    $$[735].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t22..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r3[5] = r2/*V_9.1[5] = $t22*/;
                    r2 = {$:_[386],0:null,1:0,2:null}/*$t24 = new System.Void XaeiOS.TestSuite.Tests.XmlHttpRequestTest::.ctor()()*/;
                    $$[709].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t24..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r3[6] = r2/*V_9.1[6] = $t24*/;
                    r2 = {$:_[403],0:null,1:0,2:null,3:0,4:0,5:null}/*$t27 = new System.Void XaeiOS.TestSuite.Tests.DomTest::.ctor(System.Int32)(8)*/;
                    $$[797].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,8])/*$t27..ctor(8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r3[7] = r2/*V_9.1[7] = $t27*/;
                    r2 = {$:_[415],0:null,1:0,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:null,10:0}/*$t30 = new System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::.ctor(System.Int32)(100)*/;
                    $$[818].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,100])/*$t30..ctor(100)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r3[8] = r2/*V_9.1[8] = $t30*/;
                    r2 = {$:_[388],0:null,1:0,2:null}/*$t32 = new System.Void XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest::.ctor()()*/;
                    $$[715].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$t32..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    r3[9] = r2/*V_9.1[9] = $t32*/;
                    r0 = 0/*V_1.2 = 0*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    if((r0 < r3.length))
                    {
                        $ep = 17;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 16;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 16:
                {
                    return r4/*$t0*/;
                }
                case 17:
                {
                    $ep = 18;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,r3[r0]])/*$t0.Add(V_9.1[V_1.6])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    r0 = (r0 + 1)/*V_1.3 = V_1.6 Add 1*/;
                    $ep = 15;
                    continue $ctrl;
                }
                case 19:
                {
                    $ep = 20;
                    r2 = _[376]/*$t41 = XaeiOS.TestSuite.TestRunner._testSuites*/;
                    $rv = $$[120](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,r2[r0]])/*$rv = System.Activator::CreateInstance($t41[V_1.5])*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r2 = $rv/*V_3.1 = $rv*/;
                    $rv = $$[750].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$rv = V_3.1.GetTestCases()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    r3 = $rv/*V_4.1 = $rv*/;
                    r1 = 0/*V_5.1 = 0*/;
                    $ep = 22;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    $rv = r3.$.i[185][4].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null])/*$rv = V_4.1.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    r2 = $rv/*$t46 = $rv*/;
                    if((r1 < r2))
                    {
                        $ep = 25;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 24;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 24:
                {
                    r0 = (r0 + 1)/*V_1.4 = V_1.5 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                case 25:
                {
                    $ep = 26;
                    $rv = r3.$.i[185][0].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,r1])/*$rv = V_4.1.get_Item(V_5.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    r2 = $rv/*$t51 = $rv*/;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4],[null,null,r2])/*$t0.Add($t51)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    r1 = (r1 + 1)/*V_5.2 = V_5.3 Add 1*/;
                    $ep = 22;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2,r3)
// 685: System.Void XaeiOS.TestSuite.TestRunner::RunTests()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    _[377] = 0/*XaeiOS.TestSuite.TestRunner._passCount = 0*/;
                    r1 = {$:_[186],0:null,1:0}/*$t1 = new System.Void System.Collections.Generic.List`1<XaeiOS.TestSuite.ITest>::.ctor()()*/;
                    $$[384].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    _[378] = r1/*XaeiOS.TestSuite.TestRunner._failures = $t1*/;
                    $rv = $$[684](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = XaeiOS.TestSuite.TestRunner::GetTestCases()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*V_0.1 = $rv*/;
                    $rv = r2.$[11].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = V_0.1.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t4 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,"Performing ",new Number(r1)," tests"])/*$rv = System.String::Concat("Performing ", box(System.Int32,$t4), " tests")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = $rv/*$t7 = $rv*/;
                    $$[687](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*XaeiOS.TestSuite.TestRunner::Log($t7)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $rv = r2.$[11].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = V_0.1.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r1 = $rv/*$t9 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 37;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[302](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*System.Console::WriteLine()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r3 = $$[422](_[0],5)/*V_3.1 = new System.Object[5]*/;
                    r3[0] = "Passed "/*V_3.1[0] = "Passed "*/;
                    r1 = _[377]/*$t17 = XaeiOS.TestSuite.TestRunner._passCount*/;
                    r3[1] = new Number(r1)/*V_3.1[1] = box(System.Int32,$t17)*/;
                    r3[2] = " of "/*V_3.1[2] = " of "*/;
                    $rv = r2.$[11].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = V_0.1.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r1 = $rv/*$t22 = $rv*/;
                    r3[3] = new Number(r1)/*V_3.1[3] = box(System.Int32,$t22)*/;
                    r3[4] = " tests."/*V_3.1[4] = " tests."*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r3])/*$rv = System.String::Concat(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r1 = $rv/*$t26 = $rv*/;
                    $$[687](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*XaeiOS.TestSuite.TestRunner::Log($t26)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,"================================================="])/*System.Console::WriteLine("=================================================")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $$[302](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*System.Console::WriteLine()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    r0 = 0/*V_1.2 = 0*/;
                    $ep = 16;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r1 = _[378]/*$t29 = XaeiOS.TestSuite.TestRunner._failures*/;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t29.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    r1 = $rv/*$t30 = $rv*/;
                    if((r0 < r1))
                    {
                        $ep = 19;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 18;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 18:
                {
                    return;
                }
                case 19:
                {
                    $ep = 20;
                    $$[302](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*System.Console::WriteLine()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,"Failure "])/*System.Console::Write("Failure ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r1 = (r0 + 1).toString()/*$t36 = V_1.6 Add 1.ToString()*/;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*System.Console::Write($t36)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,": "])/*System.Console::Write(": ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r1 = _[378]/*$t38 = XaeiOS.TestSuite.TestRunner._failures*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r0])/*$rv = $t38.get_Item(V_1.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r1 = $rv/*$t39 = $rv*/;
                    $rv = r1.$.i[384][0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t39.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r1 = $rv/*$t40 = $rv*/;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*System.Console::Write($t40)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $$[299](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null," - "])/*System.Console::Write(" - ")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r1 = _[378]/*$t42 = XaeiOS.TestSuite.TestRunner._failures*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r0])/*$rv = $t42.get_Item(V_1.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r1 = $rv/*$t43 = $rv*/;
                    $rv = r1.$.i[384][2].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t43.get_Exception()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r1 = $rv/*$t44 = $rv*/;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t44.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    r1 = $rv/*$t45 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*System.Console::WriteLine($t45)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    r1 = _[378]/*$t46 = XaeiOS.TestSuite.TestRunner._failures*/;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r0])/*$rv = $t46.get_Item(V_1.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    r1 = $rv/*$t47 = $rv*/;
                    $rv = r1.$.i[384][2].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t47.get_Exception()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    $ep = 34;
                    r1 = $rv/*$t48 = $rv*/;
                    $rv = r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*$rv = $t48.get_StackTrace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 34:
                {
                    $ep = 35;
                    r1 = $rv/*$t49 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*System.Console::WriteLine($t49)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 35:
                {
                    $ep = 36;
                    $$[302](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null])/*System.Console::WriteLine()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    r0 = (r0 + 1)/*V_1.3 = V_1.6 Add 1*/;
                    $ep = 16;
                    continue $ctrl;
                }
                case 37:
                {
                    $ep = 38;
                    $rv = r2.$[4].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r0])/*$rv = V_0.1.get_Item(V_1.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 38:
                {
                    $ep = 39;
                    r1 = $rv/*$t52 = $rv*/;
                    $$[686](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2,r3],[null,null,r1])/*XaeiOS.TestSuite.TestRunner::PerformTest($t52)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*[Continuation]*/;

                    }
                }
                case 39:
                {
                    r0 = (r0 + 1)/*V_1.4 = V_1.5 Add 1*/;
                    $ep = 7;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 686: System.Void XaeiOS.TestSuite.TestRunner::PerformTest(XaeiOS.TestSuite.ITest)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$.i[384][0].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    r0 = ("Performing test: " + r0)/*$t3 = System.String::Concat("Performing test: ", $t2)*/;
                    $$[687](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*XaeiOS.TestSuite.TestRunner::Log($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = new Date()/*$t4 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r0.getTime()/*$rv = $t4.GetTime()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = $rv/*V_0.1 = $rv*/;
                    $f[2].$.i[384][3].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*test.Test()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = new Date()/*$t7 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r0.getTime()/*$rv = $t7.GetTime()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r3 = $rv/*$t8 = $rv*/;
                    $rv = $f[2].$.i[384][1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Passed()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = $rv/*$t11 = $rv*/;
                    if((!r0))
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = _[377]/*$t15 = XaeiOS.TestSuite.TestRunner._passCount*/;
                    _[377] = (r0 + 1)/*XaeiOS.TestSuite.TestRunner._passCount = $t15 Add 1*/;
                    r1 = $$[422](_[0],5)/*V_3.1 = new System.Object[5]*/;
                    r1[0] = "Test: "/*V_3.1[0] = "Test: "*/;
                    $rv = $f[2].$.i[384][0].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t24 = $rv*/;
                    r1[1] = r0/*V_3.1[1] = $t24*/;
                    r1[2] = " [PASSED]: "/*V_3.1[2] = " [PASSED]: "*/;
                    r1[3] = new Number((r3 - r2))/*V_3.1[3] = box(System.Int64,$t8 Subtract V_0.1)*/;
                    r1[4] = " ms"/*V_3.1[4] = " ms"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::Concat(V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 18;
                    r0 = $rv/*$t31 = $rv*/;
                    $$[687](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*XaeiOS.TestSuite.TestRunner::Log($t31)*/;
                    continue $ctrl;
                }
                case 11:
                {
                    $ep = 12;
                    r1 = $$[422](_[0],8)/*V_3.2 = new System.Object[8]*/;
                    r1[0] = "Test: "/*V_3.2[0] = "Test: "*/;
                    $rv = $f[2].$.i[384][0].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = $rv/*$t38 = $rv*/;
                    r1[1] = r0/*V_3.2[1] = $t38*/;
                    r1[2] = " [FAILED]: "/*V_3.2[2] = " [FAILED]: "*/;
                    r1[3] = new Number((r3 - r2))/*V_3.2[3] = box(System.Int64,$t8 Subtract V_0.1)*/;
                    r1[4] = " ms => "/*V_3.2[4] = " ms => "*/;
                    $rv = $f[2].$.i[384][2].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Exception()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = $rv/*$t47 = $rv*/;
                    r1[5] = r0/*V_3.2[5] = $t47*/;
                    r1[6] = " - "/*V_3.2[6] = " - "*/;
                    $rv = $f[2].$.i[384][2].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = test.get_Exception()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r0 = $rv/*$t52 = $rv*/;
                    $rv = r0.$[9].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$rv = $t52.get_StackTrace()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = $rv/*$t53 = $rv*/;
                    r1[7] = r0/*V_3.2[7] = $t53*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::Concat(V_3.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r0 = $rv/*$t54 = $rv*/;
                    $$[687](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*XaeiOS.TestSuite.TestRunner::Log($t54)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r0 = _[378]/*$t55 = XaeiOS.TestSuite.TestRunner._failures*/;
                    r0.$[9].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,$f[2]])/*$t55.Add(test)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 687: System.Void XaeiOS.TestSuite.TestRunner::Log(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[688](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"TestRunner",$f[2]])/*XaeiOS.TestSuite.TestRunner::Log("TestRunner", s)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 688: System.Void XaeiOS.TestSuite.TestRunner::Log(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $$[422](_[118],6)/*V_0.1 = new System.String[6]*/;
                    r1[0] = "["/*V_0.1[0] = "["*/;
                    r1[1] = $f[2]/*V_0.1[1] = context*/;
                    r1[2] = "] @ "/*V_0.1[2] = "] @ "*/;
                    r0 = new Date()/*$t9 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t9.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t10 = $rv*/;
                    r1[3] = r0/*V_0.1[3] = $t10*/;
                    r1[4] = " : "/*V_0.1[4] = " : "*/;
                    r1[5] = $f[3]/*V_0.1[5] = s*/;
                    r0 = r1.join('')/*$t15 = System.String::Concat(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*System.Console::WriteLine($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 689: System.Void XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    LogWrite("INFO", "Starting Process Viewer")/*System.Diagnostics.Logging::Info("Starting Process Viewer")*/;
                    r0 = {$:_[373],0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:0}/*$t1 = new System.Void XaeiOS.ProcessViewer.ProcessViewer::.ctor()()*/;
                    $$[678].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[671].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,2000])/*$t1.set_UpdateInterval(2000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[672].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 690: System.Void XaeiOS.TestSuite.TestRunner::<RunProcessViewer>b__1(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    LogWrite("INFO", "Process Viewer exited")/*System.Diagnostics.Logging::Info("Process Viewer exited")*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 691: System.Void XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__4()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    LogWrite("INFO", "Starting XaeiOS.TestSuite")/*System.Diagnostics.Logging::Info("Starting XaeiOS.TestSuite")*/;
                    $$[685](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*XaeiOS.TestSuite.TestRunner::RunTests()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 692: System.Void XaeiOS.TestSuite.TestRunner::<RunTestSuite>b__5(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    LogWrite("INFO", "XaeiOS.TestSuite process exited")/*System.Diagnostics.Logging::Info("XaeiOS.TestSuite process exited")*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 693: System.Void XaeiOS.TestSuite.TestRunner::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = $$[422](_[18],6)/*V_0.1 = new System.Type[6]*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[418]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ThreadingTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t4 = $rv*/;
                    r1[0] = r0/*V_0.1[0] = $t4*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[406]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ClassStructureTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t7 = $rv*/;
                    r1[1] = r0/*V_0.1[1] = $t7*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t10 = $rv*/;
                    r1[2] = r0/*V_0.1[2] = $t10*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[394]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.CompilerBugsTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t13 = $rv*/;
                    r1[3] = r0/*V_0.1[3] = $t13*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[400]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t16 = $rv*/;
                    r1[4] = r0/*V_0.1[4] = $t16*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[416]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.QuickSortTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = $rv/*$t19 = $rv*/;
                    r1[5] = r0/*V_0.1[5] = $t19*/;
                    _[376] = r1/*XaeiOS.TestSuite.TestRunner._testSuites = V_0.1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 694: System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[18].call(this,$f[2])/*this..ctor(message)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 695: System.String XaeiOS.TestSuite.TestBase::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*V_0.1 = this._name*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 696: System.Boolean XaeiOS.TestSuite.TestBase::get_Passed()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this._passed*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 697: System.Exception XaeiOS.TestSuite.TestBase::get_Exception()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this._exception*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 698: System.Void XaeiOS.TestSuite.TestBase::Test()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = 1/*this._passed = 1*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 5;
                    $f.$ecp = 3/*Frame.ExceptionCatchPointer = 3*/;
                    this.$[8].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*this.PerformTest()*/;
                    continue $ctrl;
                }
                case 3:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t3 = $e*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $f.$e = null/*Frame.Exception = null*/;
                    $$[699].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.TestFailed($t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 699: System.Void XaeiOS.TestSuite.TestBase::TestFailed(System.Exception)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = 0/*this._passed = 0*/;
                    this[2] = $f[2]/*this._exception = e*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 700: System.Void XaeiOS.TestSuite.TestBase::Log(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t1 = this._name*/;
                    $$[688](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*XaeiOS.TestSuite.TestRunner::Log($t1, s)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 701: System.Void XaeiOS.TestSuite.TestBase::Assert(System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[720](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertTrue(message, condition)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 702: System.Void XaeiOS.TestSuite.TestBase::Fail(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[721](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*XaeiOS.TestSuite.Assert::Fail(message)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 703: System.Void XaeiOS.TestSuite.TestBase::AssertEquals(System.Int64,System.Int64)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[722](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 704: System.Void XaeiOS.TestSuite.TestBase::AssertEquals(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[723](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 705: System.Void XaeiOS.TestSuite.TestBase::AssertEquals(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[724](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 706: System.Void XaeiOS.TestSuite.TestBase::AssertEquals(System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[725](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 707: System.Void XaeiOS.TestSuite.TestBase::.ctor(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this._name = name*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 708: System.Void XaeiOS.TestSuite.Tests.XmlHttpRequestTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = ("Retrieving " + "http://www.tenpow.com/" + " via XmlHttpRequest")/*$t4 = System.String::Concat("Retrieving ", "http://www.tenpow.com/", " via XmlHttpRequest")*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[634](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"http://www.tenpow.com/"])/*System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest("http://www.tenpow.com/")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $f.$ecp = 7/*Frame.ExceptionCatchPointer = 7*/;
                    r0 = $$[422](_[0],5)/*V_4.1 = new System.Object[5]*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0[0] = "Retrieving "/*V_4.1[0] = "Retrieving "*/;
                    r0[1] = "http://www.deviantart.com/"/*V_4.1[1] = "http://www.deviantart.com/"*/;
                    r0[2] = " using a timeout value of "/*V_4.1[2] = " using a timeout value of "*/;
                    r0[3] = new Number(1)/*V_4.1[3] = box(System.Int32,1)*/;
                    r0[4] = " milliseconds.  An exception will most likely be thrown."/*V_4.1[4] = " milliseconds.  An exception will most likely be thrown."*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::Concat(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t20 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 10;
                    $$[636](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"http://www.deviantart.com/",0,null,null,null,1])/*System.Browser.XmlHttpRequest.XmlHttpRequestManager::DoSimpleXmlHttpRequest("http://www.deviantart.com/", 0, null, null, null, 1)*/;
                    continue $ctrl;
                }
                case 7:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t26 = $e*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $f.$e = null/*Frame.Exception = null*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"The request timed out as expected: ",r1])/*$rv = System.String::Concat("The request timed out as expected: ", V_1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t29 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t29)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 709: System.Void XaeiOS.TestSuite.Tests.XmlHttpRequestTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"XmlHttpRequest test"])/*this..ctor("XmlHttpRequest test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 710: System.Void XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = new Array()/*$t1 = new System.Void System.NativeArray`1<System.String>::.ctor()()*/;
                    this[3] = r0/*this._keys = $t1*/;
                    r0 = new Object()/*$t3 = new System.Void System.NativeObject::.ctor()()*/;
                    this[4] = r0/*this._keysToIndexMapping = $t3*/;
                    r0 = new Object()/*$t5 = new System.Void System.NativeObject::.ctor()()*/;
                    this[5] = r0/*this._internalObject = $t5*/;
                    $$[711].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"hello","world"])/*this.Add("hello", "world")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[711].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"goodbye","buddy"])/*this.Add("goodbye", "buddy")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[711].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"yester","day"])/*this.Add("yester", "day")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[712].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"hello"])/*this.Remove("hello")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[712].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"goodbye"])/*this.Remove("goodbye")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 711: System.Void XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::Add(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = this[5]/*$t3 = this._internalObject*/;
                    r0 = r2 in r0/*V_1.1 = $t3.ContainsKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if(r0)
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = this[4]/*$t7 = this._keysToIndexMapping*/;
                    r0 = this[3]/*$t10 = this._keys*/;
                    $rv = r0.length/*$rv = $t10.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t12 = $rv*/;
                    r1[r2] = r0/*$t7.set_Item(V_0.1, $t12)*/;
                    r0 = this[3]/*$t14 = this._keys*/;
                    r0.push($f[2])/*$t14.Push(key)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[5]/*$t17 = this._internalObject*/;
                    r0[r2] = $f[3]/*$t17.set_Item(V_0.1, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6)
// 712: System.Boolean XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::Remove(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[1].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null])/*$rv = key.GetHashCode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3 = $rv/*V_0.1 = $rv*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,"Making sure internal object contains hashcode key ",new Number(r3)])/*$rv = System.String::Concat("Making sure internal object contains hashcode key ", box(System.Int32,V_0.1))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t5 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,r2])/*this.Log($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = this[5]/*$t7 = this._internalObject*/;
                    r2 = r3 in r2/*V_7.1 = $t7.ContainsKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if(r2)
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    r0 = 0/*V_6.1 = 0*/;
                    $ep = 19;
                    continue $ctrl;
                }
                case 7:
                {
                    $ep = 8;
                    r2 = this[4]/*$t12 = this._keysToIndexMapping*/;
                    r5 = r2[r3]/*V_1.1 = $t12.get_Item(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,"Key index is ",new Number(r5)])/*$rv = System.String::Concat("Key index is ", box(System.Int32,V_1.1))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r2 = $rv/*$t19 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,r2])/*this.Log($t19)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r2 = this[4]/*$t21 = this._keysToIndexMapping*/;
                    delete r2[r3]/*$t21.RemoveKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,"Key index removed from keys to index mapping. Rebuilding keys array"])/*this.Log("Key index removed from keys to index mapping. Rebuilding keys array")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r4 = new Array()/*$t25 = new System.Void System.NativeArray`1<System.String>::.ctor()()*/;
                    r2 = this[3]/*$t27 = this._keys*/;
                    r2.length/*$t27.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r2 = this[3]/*$t30 = this._keys*/;
                    $rv = r2.length/*$rv = $t30.get_Length()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    r6 = $rv/*$t31 = $rv*/;
                    r1 = 0/*V_5.1 = 0*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    if((r1 < (r6 - 1)))
                    {
                        $ep = 20;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 16;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 16:
                {
                    $ep = 17;
                    this[3] = r4/*this._keys = $t25*/;
                    r2 = this[5]/*$t39 = this._internalObject*/;
                    delete r2[r3]/*$t39.RemoveKey(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,"Dictionary::Remove done!"])/*this.Log("Dictionary::Remove done!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    r0 = 1/*V_6.2 = 1*/;
                    $ep = 19;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    return r0/*V_6.3*/;
                }
                case 20:
                {
                    $ep = 21;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,"At index: ",new Number(r1)])/*$rv = System.String::Concat("At index: ", box(System.Int32,V_5.3))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r2 = $rv/*$t47 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6],[null,null,r2])/*this.Log($t47)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    if((!(r1 == r5)))
                    {
                        $ep = 23;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 25;
                        continue $ctrl;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r2 = this[3]/*$t56 = this._keys*/;
                    r2 = r2[r1]/*$t58 = $t56.get_Item(V_5.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r4.push(r2)/*$t25.Push($t58)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    r1 = (r1 + 1)/*V_5.2 = V_5.3 Add 1*/;
                    $ep = 15;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1,r3,r4,r5,r6]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 713: System.Void XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"DictionaryRemoveSSABugTest"])/*this..ctor("DictionaryRemoveSSABugTest")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4)
// 714: System.Void XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = new Date()/*$t0 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r2.getTime()/*$rv = $t0.GetTime()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r3 = $rv/*V_0.1 = $rv*/;
                    r0 = 0/*V_1.1 = (System.Int64)0*/;
                    r1 = 0/*V_2.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if((!(r1 > 2000000)))
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = new Date()/*$t13 = new System.Void System.NativeDate::.ctor()()*/;
                    $rv = r2.getTime()/*$rv = $t13.GetTime()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = $rv/*$t14 = $rv*/;
                    $$[703].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4],[null,null,2000001000000,r0])/*this.AssertEquals(2000001000000, V_1.3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r4 = $$[422](_[0],5)/*V_5.1 = new System.Object[5]*/;
                    r4[0] = "Result is "/*V_5.1[0] = "Result is "*/;
                    r4[1] = new Number(r0)/*V_5.1[1] = box(System.Int64,V_1.3)*/;
                    r4[2] = ".  Took "/*V_5.1[2] = ".  Took "*/;
                    r2 = (r2 - r3).toString()/*$t28 = $t14 Subtract V_0.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r4[3] = r2/*V_5.1[3] = $t28*/;
                    r4[4] = "ms"/*V_5.1[4] = "ms"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4],[null,null,r4])/*$rv = System.String::Concat(V_5.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r2 = $rv/*$t31 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4],[null,null,r2])/*this.Log($t31)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return;
                }
                case 10:
                {
                    r0 = (r0 + r1)/*V_1.2 = V_1.3 Add (System.Int64)V_2.3*/;
                    r1 = (r1 + 1)/*V_2.2 = V_2.3 Add 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r1,r0,r3,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 715: System.Void XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Single threaded performance test"])/*this..ctor("Single threaded performance test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 716: System.Void XaeiOS.TestSuite.Tests.ThreadSleepTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[3]/*$t3 = this._duration1*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Sleeping for ",new Number(r0)," seconds"])/*$rv = System.String::Concat("Sleeping for ", box(System.Int32,$t3), " seconds")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t6 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.Log($t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[3]/*$t8 = this._duration1*/;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,(r0 * 1000)])/*System.Threading.Thread::Sleep($t8 Multiply 1000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Awake again!"])/*this.Log("Awake again!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[4]/*$t16 = this._duration2*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Sleeping for ",new Number(r0)," seconds"])/*$rv = System.String::Concat("Sleeping for ", box(System.Int32,$t16), " seconds")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t19 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.Log($t19)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[4]/*$t21 = this._duration2*/;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,(r0 * 1000)])/*System.Threading.Thread::Sleep($t21 Multiply 1000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 717: System.Void XaeiOS.TestSuite.Tests.ThreadSleepTest::.ctor(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Threading test"])/*this..ctor("Threading test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[3] = $f[2]/*this._duration1 = duration1*/;
                    this[4] = $f[3]/*this._duration2 = duration2*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 718: System.Void XaeiOS.TestSuite.Tests.AlertHelloWorldTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    alert("HelloWorld!")/*XaeiOS.TestSuite.Tests.AlertHelloWorldTest::Alert("HelloWorld!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 719: System.Void XaeiOS.TestSuite.Tests.AlertHelloWorldTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Alert hello world test"])/*this..ctor("Alert hello world test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 720: System.Void XaeiOS.TestSuite.Assert::AssertTrue(System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if($f[3])
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[383],0:null,1:null,2:null,3:null}/*$t2 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)(message)*/;
                    $$[694].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t2..ctor(message)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t2*/;
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 721: System.Void XaeiOS.TestSuite.Assert::Fail(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[383],0:null,1:null,2:null,3:null}/*$t1 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)(message)*/;
                    $$[694].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t1..ctor(message)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    throw r0/*$t1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 722: System.Void XaeiOS.TestSuite.Assert::AssertEquals(System.Int64,System.Int64)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if(($f[2] == $f[3]))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $$[422](_[0],5)/*V_1.1 = new System.Object[5]*/;
                    r0[0] = "Expected: <"/*V_1.1[0] = "Expected: <"*/;
                    r0[1] = new Number($f[2])/*V_1.1[1] = box(System.Int64,expected)*/;
                    r0[2] = ">, Received: <"/*V_1.1[2] = ">, Received: <"*/;
                    r0[3] = new Number($f[3])/*V_1.1[3] = box(System.Int64,actual)*/;
                    r0[4] = ">"/*V_1.1[4] = ">"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t18 = $rv*/;
                    r1 = {$:_[383],0:null,1:null,2:null,3:null}/*$t19 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)($t18)*/;
                    $$[694].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t19..ctor($t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r1/*$t19*/;
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 723: System.Void XaeiOS.TestSuite.Assert::AssertEquals(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if(($f[2] == $f[3]))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $$[422](_[0],5)/*V_1.1 = new System.Object[5]*/;
                    r0[0] = "Expected: <"/*V_1.1[0] = "Expected: <"*/;
                    r0[1] = new Number($f[2])/*V_1.1[1] = box(System.Int32,expected)*/;
                    r0[2] = ">, Received: <"/*V_1.1[2] = ">, Received: <"*/;
                    r0[3] = new Number($f[3])/*V_1.1[3] = box(System.Int32,actual)*/;
                    r0[4] = ">"/*V_1.1[4] = ">"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t18 = $rv*/;
                    r1 = {$:_[383],0:null,1:null,2:null,3:null}/*$t19 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)($t18)*/;
                    $$[694].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t19..ctor($t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r1/*$t19*/;
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 724: System.Void XaeiOS.TestSuite.Assert::AssertEquals(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = ($f[2] != $f[3])/*$t2 = System.String::op_Inequality(expected, actual)*/;
                    if((!r0))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $$[422](_[118],5)/*V_1.1 = new System.String[5]*/;
                    r0[0] = "Expected: <"/*V_1.1[0] = "Expected: <"*/;
                    r0[1] = $f[2]/*V_1.1[1] = expected*/;
                    r0[2] = ">, Received: <"/*V_1.1[2] = ">, Received: <"*/;
                    r0[3] = $f[3]/*V_1.1[3] = actual*/;
                    r0[4] = ">"/*V_1.1[4] = ">"*/;
                    r0 = r0.join('')/*$t18 = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = {$:_[383],0:null,1:null,2:null,3:null}/*$t19 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)($t18)*/;
                    $$[694].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t19..ctor($t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r1/*$t19*/;
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 725: System.Void XaeiOS.TestSuite.Assert::AssertEquals(System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] == null)))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    if((!($f[3] == null)))
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $$[422](_[0],5)/*V_1.1 = new System.Object[5]*/;
                    r0[0] = "Expected: <"/*V_1.1[0] = "Expected: <"*/;
                    r0[1] = $f[2]/*V_1.1[1] = expected*/;
                    r0[2] = ">, Received: <"/*V_1.1[2] = ">, Received: <"*/;
                    r0[3] = $f[3]/*V_1.1[3] = actual*/;
                    r0[4] = ">"/*V_1.1[4] = ">"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::Concat(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t26 = $rv*/;
                    r1 = {$:_[383],0:null,1:null,2:null,3:null}/*$t27 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)($t26)*/;
                    $$[694].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t27..ctor($t26)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    throw r1/*$t27*/;
                }
                case 6:
                {
                    $ep = 7;
                    $rv = $f[2].$[2].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[3]])/*$rv = expected.Equals(actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = $rv/*V_0.3 = $rv*/;
                    if(r0)
                    {
                        $ep = 8;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 9;
                        continue $ctrl;

                    }
                }
                case 8:
                {
                    return;
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $$[422](_[0],5)/*V_1.2 = new System.Object[5]*/;
                    r0[0] = "Expected: <"/*V_1.2[0] = "Expected: <"*/;
                    r0[1] = $f[2]/*V_1.2[1] = expected*/;
                    r0[2] = ">, Received: <"/*V_1.2[2] = ">, Received: <"*/;
                    r0[3] = $f[3]/*V_1.2[3] = actual*/;
                    r0[4] = ">"/*V_1.2[4] = ">"*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.String::Concat(V_1.2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = $rv/*$t43 = $rv*/;
                    r1 = {$:_[383],0:null,1:null,2:null,3:null}/*$t44 = new System.Void XaeiOS.TestSuite.AssertException::.ctor(System.String)($t43)*/;
                    $$[694].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$t44..ctor($t43)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    throw r1/*$t44*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 726: System.Void XaeiOS.TestSuite.Assert::AssertNotNull(System.String,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[720](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],(!($f[3] == null))])/*XaeiOS.TestSuite.Assert::AssertTrue(message, BooleanNot value ValueEquality null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 727: System.Void XaeiOS.TestSuite.Tests.EventTest::add_MyEvent(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[6]/*$t2 = this.MyEvent*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[6] = $$[410](r0,_[11],true)/*this.MyEvent = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 728: System.Void XaeiOS.TestSuite.Tests.EventTest::remove_MyEvent(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[6]/*$t2 = this.MyEvent*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[6] = $$[410](r0,_[11],true)/*this.MyEvent = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 729: System.Void XaeiOS.TestSuite.Tests.EventTest::add_NullEvent(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[7]/*$t2 = this.NullEvent*/;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Combine($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[7] = $$[410](r0,_[11],true)/*this.NullEvent = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 730: System.Void XaeiOS.TestSuite.Tests.EventTest::remove_NullEvent(System.EventHandler)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[7]/*$t2 = this.NullEvent*/;
                    $rv = $$[32](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*$rv = System.Delegate::Remove($t2, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    this[7] = $$[410](r0,_[11],true)/*this.NullEvent = (System.EventHandler)$t4*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 731: System.Void XaeiOS.TestSuite.Tests.EventTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[3] = 0/*this._handler1Called = 0*/;
                    this[4] = 0/*this._handler2Called = 0*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Adding event handler 1"])/*this.Log("Adding event handler 1")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = this[6]/*$t8 = this.MyEvent*/;
                    r0 = {$:_[11],0:null,1:null,2:null,3:null}/*$t11 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent)*/;
                    $$[29](r0,this,$$[734])/*$t11..ctor(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1,r0])/*$rv = System.Delegate::Combine($t8, $t11)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t12 = $rv*/;
                    this[6] = $$[410](r0,_[11],true)/*this.MyEvent = (System.EventHandler)$t12*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Adding event handler 2"])/*this.Log("Adding event handler 2")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = this[6]/*$t18 = this.MyEvent*/;
                    r0 = {$:_[11],0:null,1:null,2:null,3:null}/*$t21 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent2)*/;
                    $$[29](r0,this,$$[733])/*$t21..ctor(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1,r0])/*$rv = System.Delegate::Combine($t18, $t21)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t22 = $rv*/;
                    this[6] = $$[410](r0,_[11],true)/*this.MyEvent = (System.EventHandler)$t22*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Adding event handler 3"])/*this.Log("Adding event handler 3")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = this[6]/*$t28 = this.MyEvent*/;
                    r0 = {$:_[11],0:null,1:null,2:null,3:null}/*$t31 = new System.Void System.EventHandler::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent3)*/;
                    $$[29](r0,this,$$[732])/*$t31..ctor(this, XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = $$[31](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1,r0])/*$rv = System.Delegate::Combine($t28, $t31)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = $rv/*$t32 = $rv*/;
                    this[6] = $$[410](r0,_[11],true)/*this.MyEvent = (System.EventHandler)$t32*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Event handlers added"])/*this.Log("Event handlers added")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Firing event"])/*this.Log("Firing event")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = this[6]/*$t39 = this.MyEvent*/;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,[this, null]])/*$t39.Invoke(this, null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = this[3]/*$t45 = this._handler1Called*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Handler 1 was not called",r0])/*this.Assert("Handler 1 was not called", $t45)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r0 = this[4]/*$t49 = this._handler2Called*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Handler 2 was not called",r0])/*this.Assert("Handler 2 was not called", $t49)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = this[5]/*$t53 = this._handler3Called*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Handler 3 was not called",r0])/*this.Assert("Handler 3 was not called", $t53)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Firing null event"])/*this.Log("Firing null event")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $f.$ecp = 20/*Frame.ExceptionCatchPointer = 20*/;
                    r0 = this[7]/*$t57 = this.NullEvent*/;
                    $ep = 18;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r1 = {$:_[146]}/*$t59 = new System.Void System.EventArgs::.ctor()()*/;
                    $$[308].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t59..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 23;
                    r0.$[4].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,[this, r1]])/*$t57.Invoke(this, $t59)*/;
                    continue $ctrl;
                }
                case 20:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t60 = $e*/;
                    $ep = 21;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $f.$e = null/*Frame.Exception = null*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Got null reference exception as expected: ",r0])/*$rv = System.String::Concat("Got null reference exception as expected: ", $t60)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    r0 = $rv/*$t63 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t63)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 732: System.Void XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent3(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Handler 3 called!"])/*this.Log("Handler 3 called!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[5] = 1/*this._handler3Called = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 733: System.Void XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent2(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Handler 2 called!"])/*this.Log("Handler 2 called!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[4] = 1/*this._handler2Called = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 734: System.Void XaeiOS.TestSuite.Tests.EventTest::EventTest_MyEvent(System.Object,System.EventArgs)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Handler 1 called!"])/*this.Log("Handler 1 called!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[3] = 1/*this._handler1Called = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 735: System.Void XaeiOS.TestSuite.Tests.EventTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Event test"])/*this..ctor("Event test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 736: System.Void XaeiOS.TestSuite.TestSuite::Assert(System.String,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[720](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertTrue(message, condition)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 737: System.Void XaeiOS.TestSuite.TestSuite::Fail(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[721](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2]])/*XaeiOS.TestSuite.Assert::Fail(message)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 738: System.Void XaeiOS.TestSuite.TestSuite::AssertEquals(System.Int64,System.Int64)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[722](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 739: System.Void XaeiOS.TestSuite.TestSuite::AssertEquals(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[723](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 740: System.Void XaeiOS.TestSuite.TestSuite::AssertEquals(System.String,System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[724](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 741: System.Void XaeiOS.TestSuite.TestSuite::AssertEquals(System.Object,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[725](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertEquals(expected, actual)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 742: System.Void XaeiOS.TestSuite.TestSuite::AssertNotNull(System.String,System.Object)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[726](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,$f[2],$f[3]])/*XaeiOS.TestSuite.Assert::AssertNotNull(message, value)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 743: System.String XaeiOS.TestSuite.TestSuite::get_Name()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[1]/*V_0.1 = this.<Name>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 744: System.Void XaeiOS.TestSuite.TestSuite::set_Name(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[1] = $f[2]/*this.<Name>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 745: System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[2]/*V_0.1 = this.<Passed>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 746: System.Void XaeiOS.TestSuite.TestSuite::set_Passed(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[2] = $f[2]/*this.<Passed>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 747: System.Exception XaeiOS.TestSuite.TestSuite::get_Exception()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[3]/*V_0.1 = this.<Exception>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 748: System.Void XaeiOS.TestSuite.TestSuite::set_Exception(System.Exception)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[3] = $f[2]/*this.<Exception>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 749: System.Void XaeiOS.TestSuite.TestSuite::Test()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[746].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,1])/*this.set_Passed(1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    this.$[8].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.Setup()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[0]/*$t4 = this._method*/;
                    r1 = $$[422](_[0],0)/*$t7 = new System.Object[0]*/;
                    r0.$[7].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,this,r1])/*$t4.Invoke(this, $t7)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 8;
                    this.$[9].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*this.TearDown()*/;
                    continue $ctrl;
                }
                case 5:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t10 = $e*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$e = null/*Frame.Exception = null*/;
                    $$[746].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,0])/*this.set_Passed(0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[748].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.set_Exception($t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6)
// 750: System.Collections.Generic.IList`1<XaeiOS.TestSuite.ITest> XaeiOS.TestSuite.TestSuite::GetTestCases()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r6 = {$:_[186],0:null,1:0}/*$t0 = new System.Void System.Collections.Generic.List`1<XaeiOS.TestSuite.ITest>::.ctor()()*/;
                    $$[384].call(r6,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[3].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null])/*$rv = this.GetType()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r4 = $rv/*V_1.1 = $rv*/;
                    $rv = r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null])/*$rv = V_1.1.GetMethods()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r5 = $rv/*V_2.1 = $rv*/;
                    r0 = 0/*V_7.1 = 0*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if((r0 < r5.length))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    return r6/*$t0*/;
                }
                case 7:
                {
                    $ep = 8;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null,_[414]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.TestAttribute)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = $rv/*$t11 = $rv*/;
                    $rv = r5[r0].$[6].call(r5[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null,r1,0])/*$rv = V_2.1[V_7.3].IsDefined($t11, 0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r1 = $rv/*$t13 = $rv*/;
                    if((!r1))
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 10;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                        }

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $rv = $$[120](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null,r4])/*$rv = System.Activator::CreateInstance(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r3 = $rv/*V_4.1 = $rv*/;
                    r3[0] = r5[r0]/*V_4.1._method = V_2.1[V_7.3]*/;
                    $rv = r4.$[0].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null])/*$rv = V_1.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r2 = $rv/*$t18 = $rv*/;
                    $rv = r5[r0].$[5].call(r5[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null])/*$rv = V_2.1[V_7.3].get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r1 = $rv/*$t20 = $rv*/;
                    r1 = (r2 + "::" + r1)/*$t21 = System.String::Concat($t18, "::", $t20)*/;
                    $$[744].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null,r1])/*V_4.1.set_Name($t21)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r6.$[9].call(r6,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6],[null,null,r3])/*$t0.Add(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    r0 = (r0 + 1)/*V_7.2 = V_7.3 Add 1*/;
                    $ep = 5;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r0,r4,r5,r6]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 751: System.Void XaeiOS.TestSuite.TestSuite::Log(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[743].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = this.get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t1 = $rv*/;
                    $$[688](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0,$f[2]])/*XaeiOS.TestSuite.TestRunner::Log($t1, s)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 752: System.Void XaeiOS.TestSuite.TestSuite::Setup()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 753: System.Void XaeiOS.TestSuite.TestSuite::TearDown()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 754: System.Void XaeiOS.TestSuite.TestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 755: System.Void XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::TestMethodInliningBreaksLoops()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r3 = {$:_[419],0:null,1:0,2:null}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1::.ctor()()*/;
                    $$[834].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3[2] = this/*$t0.<>4__this = this*/;
                    r2 = {$:_[21],0:null,1:null}/*$t2 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[235],0:null,1:null,2:null,3:null,4:0}/*$t3 = new System.Void System.Threading.TimedCondition::.ctor(System.Threading.Lock)($t2)*/;
                    $$[433].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r2])/*$t3..ctor($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3[0] = r0/*$t0.done = $t3*/;
                    r3[1] = -1/*$t0.resultPivot = -1*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1::<TestMethodInliningBreaksLoops>b__0)*/;
                    $$[29](r0,r3,$$[833])/*$t6..ctor($t0, XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1::<TestMethodInliningBreaksLoops>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t7 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)($t6)*/;
                    $$[164].call(r1,r0)/*$t7..ctor($t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[147].call(r1)/*$t7.Start()*/;
                    $$[70].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $f.$ecp = 9/*Frame.ExceptionCatchPointer = 9*/;
                    r0 = r3[0]/*$t8 = $t0.done*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 13;
                    $$[431].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,3000])/*$t8.Await(3000)*/;
                    continue $ctrl;
                }
                case 9:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 10;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $$[149].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*V_1.Abort()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Test did not complete in ",new Number(3)," seconds.  Infinite loop most likely still exists."])/*$rv = System.String::Concat("Test did not complete in ", box(System.Int32,3), " seconds.  Infinite loop most likely still exists.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = $rv/*$t16 = $rv*/;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*this.Fail($t16)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 756: System.Int32 XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::CompareInts(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[2] == $f[3])))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 3:
                {
                    if((!($f[2] > $f[3])))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    r0 = 1/*V_0.2 = 1*/;
                    $ep = 6;
                    continue $ctrl;
                }
                case 5:
                {
                    r0 = -1/*V_0.3 = -1*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return r0/*V_0.4*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9)
// 757: System.Int32 XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::GetPivotPoint(System.Int32,System.Int32,System.Collections.Generic.List`1<T>,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = ($f[2] + 1)/*V_1.1 = begPoint Add 1*/;
                    r1 = $f[3]/*V_2.1 = endPoint*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((r0 >= $f[3]))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 6;
                    r3 = $rv/*$t8 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.4)*/;
                    continue $ctrl;
                }
                case 5:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 6:
                {
                    $ep = 7;
                    r2 = $rv/*$t10 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t8, $t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r2 = $rv/*$t89 = $rv*/;
                    r3 = (r2 > -1)/*$ts0 = $t89 GreaterThan -1*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    if(r3)
                    {
                        $ep = 44;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 9:
                {
                    if((r1 <= $f[2]))
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 10;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r3 = $rv/*$t16 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r2 = $rv/*$t18 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t16, $t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    r6 = $rv/*$t82 = $rv*/;
                    r3 = (r6 < 1)/*$ts0 = $t82 LessThan 1*/;
                    $ep = 15;
                    continue $ctrl;
                }
                case 14:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    if(r3)
                    {
                        $ep = 43;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 16;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 16:
                {
                    if((r0 < r1))
                    {
                        $ep = 23;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 17;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 17:
                {
                    if(($f[2] == r1))
                    {
                        $ep = 22;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 18;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 18:
                {
                    $ep = 19;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r2 = $rv/*V_4.1 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r3 = $rv/*$t29 = $rv*/;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1,r3])/*data.set_Item(V_2.6, $t29)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2],r2])/*data.set_Item(begPoint, V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    return r1/*V_2.6*/;
                }
                case 23:
                {
                    $ep = 24;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r3 = $rv/*V_3.1 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r2 = $rv/*$t35 = $rv*/;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0,r2])/*data.set_Item(V_1.6, $t35)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1,r3])/*data.set_Item(V_2.6, V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    if((r0 >= $f[3]))
                    {
                        $ep = 32;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 28;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 28:
                {
                    $ep = 29;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r3 = $rv/*$t40 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    r2 = $rv/*$t42 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t40, $t42)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    r8 = $rv/*$t75 = $rv*/;
                    r3 = (r8 > -1)/*$ts0 = $t75 GreaterThan -1*/;
                    $ep = 33;
                    continue $ctrl;
                }
                case 32:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 33;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    if(r3)
                    {
                        $ep = 42;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 34;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 34:
                {
                    if((r1 <= $f[2]))
                    {
                        $ep = 39;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 35;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 35:
                {
                    $ep = 36;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    $ep = 37;
                    r3 = $rv/*$t48 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 37:
                {
                    $ep = 38;
                    r2 = $rv/*$t50 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t48, $t50)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 38:
                {
                    r9 = $rv/*$t68 = $rv*/;
                    r3 = (r9 < 1)/*$ts0 = $t68 LessThan 1*/;
                    $ep = 40;
                    continue $ctrl;
                }
                case 39:
                {
                    r7 = 0/*$t55 = 0*/;
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 40;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 40:
                {
                    if(r3)
                    {
                        $ep = 41;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 16;
                        continue $ctrl;

                    }
                }
                case 41:
                {
                    r1 = (r1 - 1)/*V_2.2 = V_2.5 Subtract 1*/;
                    $ep = 34;
                    continue $ctrl;
                }
                case 42:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.5 Add 1*/;
                    $ep = 27;
                    continue $ctrl;
                }
                case 43:
                {
                    r1 = (r1 - 1)/*V_2.3 = V_2.4 Subtract 1*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 44:
                {
                    r0 = (r0 + 1)/*V_1.3 = V_1.4 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 758: System.Boolean XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::GreaterThanOrEqualTo(T,T,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,[$f[2], $f[3]]])/*$rv = comparison.Invoke(a, b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    return (r0 > -1)/*$t3 GreaterThan -1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 759: System.Boolean XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::LessThanOrEqualTo(T,T,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,[$f[2], $f[3]]])/*$rv = comparison.Invoke(a, b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    return (r0 < 1)/*$t3 LessThan 1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0)
// 760: System.Int32 XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::GetPivotPoint2(System.Int32,System.Int32,System.Collections.Generic.List`1<T>,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = ($f[2] + 1)/*V_1.1 = begPoint Add 1*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((r0 >= $f[3]))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 6;
                    r2 = $rv/*$t8 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,r0])/*$rv = data.get_Item(V_1.3)*/;
                    continue $ctrl;
                }
                case 5:
                {
                    r1 = 0/*$ts0 = 0*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 6:
                {
                    $ep = 7;
                    r1 = $rv/*$t10 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0],[null,null,[r2, r1]])/*$rv = comparison.Invoke($t8, $t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r1 = $rv/*$t17 = $rv*/;
                    r2 = (r1 > -1)/*$t12 = $t17 GreaterThan -1*/;
                    r1 = (r1 > -1)/*$ts0 = $t17 GreaterThan -1*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    if(r1)
                    {
                        $ep = 10;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 9:
                {
                    return $f[3]/*endPoint*/;
                }
                case 10:
                {
                    LogWrite("DEBUG", "1")/*System.Diagnostics.Logging::Debug("1")*/;
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 761: System.Void XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 762: System.Void XaeiOS.TestSuite.Tests.CompilerFlowControlTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 763: System.Double XaeiOS.TestSuite.Tests.CompilerFlowControlTest::TestScore(System.Int32,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[763].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,$f[2],$f[3]])/*$rv = this.TestScore(index, go)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = $rv/*V_0.1 = $rv*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    if((!(r0 < $f[2])))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    return r1/*V_0.5*/;
                }
                case 5:
                {
                    if((!$f[3]))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    r1 = (r1 - 1)/*V_0.2 = V_0.5 Subtract 1*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 7:
                {
                    r1 = (r1 - 0.15)/*V_0.3 = V_0.5 Subtract 0.15*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = (r0 - 1)/*V_1.2 = V_1.3 Subtract 1*/;
                    $ep = 3;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 764: System.Void XaeiOS.TestSuite.Tests.CompilerFlowControlTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Compiler flow control test"])/*this..ctor("Compiler flow control test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 765: System.Void XaeiOS.TestSuite.Tests.MultiThreadingTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[3] = 0/*this._threadTwoCompleteCondition = 0*/;
                    this[4] = 0/*this._testCompleteCondition = 0*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadOneStart)*/;
                    $$[29](r0,this,$$[766])/*$t6..ctor(this, XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadOneStart)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t8 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)($t6, 3)*/;
                    $$[165].call(r1,r0,3)/*$t8..ctor($t6, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[143].call(r1,"Thread One")/*$t8.set_Name("Thread One")*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t12 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadTwoStart)*/;
                    $$[29](r0,this,$$[767])/*$t12..ctor(this, XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadTwoStart)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t14 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)($t12, 3)*/;
                    $$[165].call(r2,r0,3)/*$t14..ctor($t12, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[143].call(r2,"Thread Two")/*$t14.set_Name("Thread Two")*/;
                    $$[147].call(r1)/*$t8.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,10000])/*System.Threading.Thread::Sleep(10000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[147].call(r2)/*$t14.Start()*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Main thread has begun polling for the test complete condition..."])/*this.Log("Main thread has begun polling for the test complete condition...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = this[4]/*$t20 = this._testCompleteCondition*/;
                    if((!r0))
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = this[3]/*$t27 = this._threadTwoCompleteCondition*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Thread two complete condition was not set",r0])/*this.Assert("Thread two complete condition was not set", $t27)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = this[4]/*$t31 = this._testCompleteCondition*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test complete condition was not set",r0])/*this.Assert("Test complete condition was not set", $t31)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    return;
                }
                case 12:
                {
                    $ep = 8;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,100])/*System.Threading.Thread::Sleep(100)*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 766: System.Void XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadOneStart()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Thread one has started"])/*this.Log("Thread one has started")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Thread one has begun polling for the thread two complete condition..."])/*this.Log("Thread one has begun polling for the thread two complete condition...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = this[3]/*$t5 = this._threadTwoCompleteCondition*/;
                    if((!r0))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Thread one is now setting the test complete condition"])/*this.Log("Thread one is now setting the test complete condition")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    this[4] = 1/*this._testCompleteCondition = 1*/;
                    return;
                }
                case 6:
                {
                    $ep = 3;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,100])/*System.Threading.Thread::Sleep(100)*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 767: System.Void XaeiOS.TestSuite.Tests.MultiThreadingTest::ThreadTwoStart()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Thread two has started"])/*this.Log("Thread two has started")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,3000])/*System.Threading.Thread::Sleep(3000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Thread two is now setting the thread two complete condition"])/*this.Log("Thread two is now setting the thread two complete condition")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    this[3] = 1/*this._threadTwoCompleteCondition = 1*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 768: System.Void XaeiOS.TestSuite.Tests.MultiThreadingTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Multi-threading test"])/*this..ctor("Multi-threading test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 769: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestGetTypeByName()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[55](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"System.Object"])/*$rv = System.Type::GetType("System.Object")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*V_0.1 = $rv*/;
                    $$[742].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Could not get type System.Object by name",r0])/*this.AssertNotNull("Could not get type System.Object by name", V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 770: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestGetType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[0]}/*$t0 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[3].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = $t0.GetType()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*V_1.1 = $rv*/;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"GetType() did not return an object of type Type!",(!(r0 == null))])/*this.Assert("GetType() did not return an object of type Type!", BooleanNot V_1.1 ValueEquality null)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = V_1.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t12 = $rv*/;
                    $$[740].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"System.Object",r0])/*this.AssertEquals("System.Object", $t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 771: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestGetMethods()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t1 = $rv*/;
                    $rv = r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*$rv = $t1.GetMethods()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((r0 < r2.length))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    return;
                }
                case 6:
                {
                    $ep = 7;
                    $rv = r2[r0].$[5].call(r2[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*$rv = V_0.1[V_1.3].get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = $rv/*$t11 = $rv*/;
                    r1 = ("Found method: " + r1)/*$t12 = System.String::Concat("Found method: ", $t11)*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,r1])/*this.Log($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0,r2)
// 772: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestGetProperties()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t1 = $rv*/;
                    $rv = r1.$[8].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*$rv = $t1.GetProperties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r2 = $rv/*V_0.1 = $rv*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((r0 < r2.length))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    return;
                }
                case 6:
                {
                    $ep = 7;
                    $rv = r2[r0].$[5].call(r2[r0],0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null])/*$rv = V_0.1[V_1.3].get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1 = $rv/*$t11 = $rv*/;
                    r1 = ("Found property: " + r1)/*$t12 = System.String::Concat("Found property: ", $t11)*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0,r2],[null,null,r1])/*this.Log($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 773: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestSetProperty()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[777].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"old value"])/*this.set_MyProperty("old value")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t5 = $rv*/;
                    $rv = r0.$[8].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t5.GetProperties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = $rv/*$t6 = $rv*/;
                    $rv = r0[0].$[5].call(r0[0],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t6[0].get_Name()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t9 = $rv*/;
                    r0 = ("Trying to set property using reflection: " + r0)/*$t10 = System.String::Concat("Trying to set property using reflection: ", $t9)*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = $$[422](_[0],1)/*V_0.1 = new System.Object[1]*/;
                    r1[0] = "new value"/*V_0.1[0] = "new value"*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t16 = $rv*/;
                    $rv = r0.$[8].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t16.GetProperties()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = $rv/*$t17 = $rv*/;
                    $rv = r0[0].$[8].call(r0[0],0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = $t17[0].get_SetMethod()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t20 = $rv*/;
                    r0.$[7].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,this,r1])/*$t20.Invoke(this, V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = this[4]/*V_1.1 = this.<MyProperty>k__BackingField*/;
                    $$[741].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1[0],r0])/*this.AssertEquals(V_0.1[0], V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 774: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestIsDefinedOnType()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t2 = $rv*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,_[399]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite/ReflectionTestAttribute)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t5 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1," did not have attribute ",r0])/*$rv = System.String::Concat($t2, " did not have attribute ", $t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = $rv/*$t6 = $rv*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,_[398]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t8 = $rv*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,_[399]])/*$rv = System.Type::GetTypeFromHandle(XaeiOS.TestSuite.Tests.ReflectionTestSuite/ReflectionTestAttribute)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = $rv/*$t10 = $rv*/;
                    $rv = r0.$[6].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r1,0])/*$rv = $t8.IsDefined($t10, 0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t12 = $rv*/;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r2,r0])/*this.Assert($t6, $t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 775: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::TestActivator()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[0]])/*$rv = System.Type::GetTypeFromHandle(System.Object)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t1 = $rv*/;
                    $rv = $$[120](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*$rv = System.Activator::CreateInstance($t1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*V_0.1 = $rv*/;
                    $rv = $$[54](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,_[0]])/*$rv = System.Type::GetTypeFromHandle(System.Object)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t5 = $rv*/;
                    $rv = $$[3].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$rv = V_0.1.GetType()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t6 = $rv*/;
                    $$[741].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r1,r0])/*this.AssertEquals($t5, $t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 776: System.String XaeiOS.TestSuite.Tests.ReflectionTestSuite::get_MyProperty()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[4]/*V_0.1 = this.<MyProperty>k__BackingField*/;
                    return r0/*V_0.1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 777: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::set_MyProperty(System.String)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    this[4] = $f[2]/*this.<MyProperty>k__BackingField = value*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 778: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 779: System.Void XaeiOS.TestSuite.Tests.ReflectionTestSuite/ReflectionTestAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 780: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::FirstTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Throwing exception"])/*this.Log("Throwing exception")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.Exception::.ctor(System.String)("Purposefully thrown exception")*/;
                    $$[18].call(r0,"Purposefully thrown exception")/*$t3..ctor("Purposefully thrown exception")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t3*/;
                }
                case 4:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t4 = $e*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$e = null/*Frame.Exception = null*/;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = $t4.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t7 = $rv*/;
                    r0 = ("Expected exception caught: " + r0)/*$t8 = System.String::Concat("Expected exception caught: ", $t7)*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.Log($t8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 781: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::SecondTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 3/*Frame.ExceptionCatchPointer = 3*/;
                    $$[782].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*this.SecondTestHelper()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 13;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"NullReferenceException not thrown!"])/*this.Fail("NullReferenceException not thrown!")*/;
                    continue $ctrl;
                }
                case 3:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r2 = $f.$e/*$t3 = $e*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $f.$e = null/*Frame.Exception = null*/;
                    if((!r2))
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                }
                case 5:
                {
                    r1 = 1/*$ts0 = 1*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 6:
                {
                    $ep = 7;
                    $rv = $$[8].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t3.get_Message()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = $rv/*$t4 = $rv*/;
                    r0 = (r0 == "YES")/*$t6 = System.String::op_Equality($t4, "YES")*/;
                    r1 = (!r0)/*$ts0 = BooleanNot $t6*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    if(r1)
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 11;
                        continue $ctrl;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Expected a NullReferenceException.  Instead got: ",r2])/*$rv = System.String::Concat("Expected a NullReferenceException.  Instead got: ", $t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 13;
                    r0 = $rv/*$t15 = $rv*/;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*this.Fail($t15)*/;
                    continue $ctrl;
                }
                case 11:
                {
                    $ep = 12;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Expected NullReferenceException caught: ",r2])/*$rv = System.String::Concat("Expected NullReferenceException caught: ", $t3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = $rv/*$t12 = $rv*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*this.Log($t12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 782: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::SecondTestHelper()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Throwing NullReferenceException"])/*this.Log("Throwing NullReferenceException")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[94],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.NullReferenceException::.ctor(System.String)("YES")*/;
                    $$[175].call(r0,"YES")/*$t3..ctor("YES")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t3*/;
                }
                case 4:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"We should not catch a NullReferenceException in this catch(NotSupportedException e) handler!"])/*this.Fail("We should not catch a NullReferenceException in this catch(NotSupportedException e) handler!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 783: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestBasicTryCatchFinally()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 4;
                    $f.$ecp = 2/*Frame.ExceptionCatchPointer = 2*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"In try block"])/*this.Log("In try block")*/;
                    continue $ctrl;
                }
                case 2:
                {
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 3;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"In catch block"])/*this.Log("In catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"In finally block"])/*this.Log("In finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Outside of try-catch-finally"])/*this.Log("Outside of try-catch-finally")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 784: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestBasicTryCatchFinallyThrowException()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In try block"])/*this.Log("In try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t3 = new System.Void System.Exception::.ctor(System.String)("Purposefully thrown")*/;
                    $$[18].call(r0,"Purposefully thrown")/*$t3..ctor("Purposefully thrown")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t3*/;
                }
                case 4:
                {
                    $f.$ecp = 6/*Frame.ExceptionCatchPointer = 6*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In catch block"])/*this.Log("In catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In finally block"])/*this.Log("In finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Outside of try-catch-finally"])/*this.Log("Outside of try-catch-finally")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 785: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestBasicNestedTryCatchFinally()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 11/*Frame.ExceptionCatchPointer = 11*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In outer try block"])/*this.Log("In outer try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 5/*Frame.ExceptionCatchPointer = 5*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In inner try block"])/*this.Log("In inner try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.Exception::.ctor()()*/;
                    $$[17].call(r0)/*$t6..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r0/*$t6*/;
                }
                case 5:
                {
                    $f.$ecp = 7/*Frame.ExceptionCatchPointer = 7*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 6;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In inner catch block"])/*this.Log("In inner catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $f.$ecp = 11/*Frame.ExceptionCatchPointer = 11*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In inner finally block"])/*this.Log("In inner finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t10 = new System.Void System.Exception::.ctor()()*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[17].call(r0)/*$t10..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    throw r0/*$t10*/;
                }
                case 11:
                {
                    $f.$ecp = 13/*Frame.ExceptionCatchPointer = 13*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 12;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In outer catch block"])/*this.Log("In outer catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"In outer finally block"])/*this.Log("In outer finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Did not enter inner finally block",r1])/*this.Assert("Did not enter inner finally block", V_0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Did not enter outer finally block",1])/*this.Assert("Did not enter outer finally block", 1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 786: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestComplexNestedTryCatchFinally()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 13/*Frame.ExceptionCatchPointer = 13*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In outer try block"])/*this.Log("In outer try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $f.$ecp = 12/*Frame.ExceptionCatchPointer = 12*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In inner try block"])/*this.Log("In inner try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $f.$ecp = 6/*Frame.ExceptionCatchPointer = 6*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In inner most try block"])/*this.Log("In inner most try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t7 = new System.Void System.Exception::.ctor(System.String)("Thrown from inner most try block")*/;
                    $$[18].call(r0,"Thrown from inner most try block")/*$t7..ctor("Thrown from inner most try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    throw r0/*$t7*/;
                }
                case 6:
                {
                    $f.$ecp = 8/*Frame.ExceptionCatchPointer = 8*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In inner most catch block"])/*this.Log("In inner most catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $f.$ecp = 12/*Frame.ExceptionCatchPointer = 12*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In inner most finally block"])/*this.Log("In inner most finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Throwing exception from inner try block"])/*this.Log("Throwing exception from inner try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t14 = new System.Void System.Exception::.ctor(System.String)("Thrown from inner try block")*/;
                    $$[18].call(r0,"Thrown from inner try block")/*$t14..ctor("Thrown from inner try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    throw r0/*$t14*/;
                }
                case 12:
                {
                    $ep = 15;
                    $f.$ecp = 13/*Frame.ExceptionCatchPointer = 13*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In inner finally block"])/*this.Log("In inner finally block")*/;
                    continue $ctrl;
                }
                case 13:
                {
                    $f.$ecp = 15/*Frame.ExceptionCatchPointer = 15*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 14;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In outer catch block"])/*this.Log("In outer catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In outer finally block"])/*this.Log("In outer finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 787: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestFinallyExecutesAfterCatchBlockThrows()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 788: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::TestFinallyExecutesAfterCatchBlockThrows2()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In try block"])/*this.Log("In try block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t4 = new System.Void System.Exception::.ctor(System.String)("Purposefully thrown")*/;
                    $$[18].call(r0,"Purposefully thrown")/*$t4..ctor("Purposefully thrown")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    throw r0/*$t4*/;
                }
                case 4:
                {
                    $f.$ecp = 8/*Frame.ExceptionCatchPointer = 8*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In catch block"])/*this.Log("In catch block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t9 = new System.Void System.Exception::.ctor(System.String)("Purposefully thrown again")*/;
                    $$[18].call(r0,"Purposefully thrown again")/*$t9..ctor("Purposefully thrown again")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    throw r0/*$t9*/;
                }
                case 8:
                {
                    $ep = 9;
                    $f.$ecp = 10/*Frame.ExceptionCatchPointer = 10*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In finally block"])/*this.Log("In finally block")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                }
                case 10:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 11;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Finally block did not execute when catch block threw",r0])/*this.Assert("Finally block did not execute when catch block threw", V_0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 789: System.Void XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 790: System.Void XaeiOS.TestSuite.Tests.NullReferenceExceptionTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $rv = null.$[0].call(null,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = null.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.Log($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 7;
                    $$[702].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Expected NullReferenceException to be thrown"])/*this.Fail("Expected NullReferenceException to be thrown")*/;
                    continue $ctrl;
                }
                case 4:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r0 = $f.$e/*$t5 = $e*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$e = null/*Frame.Exception = null*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Caught NullReferenceException as expected: ",r0])/*$rv = System.String::Concat("Caught NullReferenceException as expected: ", $t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = $rv/*$t8 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*this.Log($t8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 791: System.Void XaeiOS.TestSuite.Tests.NullReferenceExceptionTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Null reference exception test"])/*this..ctor("Null reference exception test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 792: System.Void XaeiOS.TestSuite.Tests.SynchronizationTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[21],0:null,1:null}/*$t1 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    this[3] = r0/*this._mainLock = $t1*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t4 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.SynchronizationTest::ControllerThreadStart)*/;
                    $$[29](r0,this,$$[793])/*$t4..ctor(this, XaeiOS.TestSuite.Tests.SynchronizationTest::ControllerThreadStart)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t6 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)($t4, 3)*/;
                    $$[165].call(r1,r0,3)/*$t6..ctor($t4, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[143].call(r1,"Controller Thread")/*$t6.set_Name("Controller Thread")*/;
                    $$[147].call(r1)/*$t6.Start()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,2000])/*System.Threading.Thread::Sleep(2000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Main thread is trying to acquire the main lock..."])/*this.Log("Main thread is trying to acquire the main lock...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[3]/*$t12 = this._mainLock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t12.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Main thread got the main lock..."])/*this.Log("Main thread got the main lock...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 793: System.Void XaeiOS.TestSuite.Tests.SynchronizationTest::ControllerThreadStart()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Controller thread has begun"])/*this.Log("Controller thread has begun")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = this[3]/*$t3 = this._mainLock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t3.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Controller thread has acquired the main lock"])/*this.Log("Controller thread has acquired the main lock")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,3000])/*System.Threading.Thread::Sleep(3000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Controller thread is now releasing the main lock"])/*this.Log("Controller thread is now releasing the main lock")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[3]/*$t10 = this._mainLock*/;
                    $$[72].call(r0)/*$t10.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Controller thread is now exiting"])/*this.Log("Controller thread is now exiting")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 794: System.Void XaeiOS.TestSuite.Tests.SynchronizationTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Synchronization test"])/*this..ctor("Synchronization test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7)
// 795: System.Void XaeiOS.TestSuite.Tests.DomTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    this[3] = 1/*this._testRunning = 1*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"Creating DOM elements"])/*this.Log("Creating DOM elements")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"DIV"])/*$rv = System.Browser.Dom.DomManager::CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*V_0.1 = $rv*/;
                    $rv = r2.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*$t6 = $rv*/;
                    r1.backgroundColor = "blue"/*$t6.set_BackgroundColor("blue")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $rv = r2.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1 = $rv/*$t8 = $rv*/;
                    r1.top = "250px"/*$t8.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $rv = r2.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1 = $rv/*$t10 = $rv*/;
                    r1.left = "150px"/*$t10.set_Left("150px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"DIV"])/*$rv = System.Browser.Dom.DomManager::CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r3 = $rv/*V_1.1 = $rv*/;
                    $rv = r3.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r1 = $rv/*$t14 = $rv*/;
                    r1.backgroundColor = "red"/*$t14.set_BackgroundColor("red")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $rv = r3.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r1 = $rv/*$t16 = $rv*/;
                    r1.top = "250px"/*$t16.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $rv = r3.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r1 = $rv/*$t18 = $rv*/;
                    r1.left = "150px"/*$t18.set_Left("150px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"DIV"])/*$rv = System.Browser.Dom.DomManager::CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r4 = $rv/*V_2.1 = $rv*/;
                    $rv = r4.style/*$rv = V_2.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r1 = $rv/*$t22 = $rv*/;
                    r1.backgroundColor = "orange"/*$t22.set_BackgroundColor("orange")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    $rv = r4.style/*$rv = V_2.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r1 = $rv/*$t24 = $rv*/;
                    r1.top = "250px"/*$t24.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $rv = r4.style/*$rv = V_2.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    r1 = $rv/*$t26 = $rv*/;
                    r1.left = "350px"/*$t26.set_Left("350px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    $rv = $$[648](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"DIV"])/*$rv = System.Browser.Dom.DomManager::CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r5 = $rv/*V_3.1 = $rv*/;
                    $rv = r5.style/*$rv = V_3.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r1 = $rv/*$t30 = $rv*/;
                    r1.backgroundColor = "green"/*$t30.set_BackgroundColor("green")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $rv = r5.style/*$rv = V_3.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r1 = $rv/*$t32 = $rv*/;
                    r1.top = "250px"/*$t32.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    $rv = r5.style/*$rv = V_3.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r1 = $rv/*$t34 = $rv*/;
                    r1.left = "350px"/*$t34.set_Left("350px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    document/*System.Browser.Dom.DomManager::get_Document()*/;
                    r6 = document.body/*V_5.1 = System.Browser.Dom.DomManager::GetDocumentBody()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    r7 = $$[422](_[370],4)/*V_11.1 = new System.Browser.Dom.IDomElement[4]*/;
                    r7[0] = r2/*V_11.1[0] = V_0.1*/;
                    r7[1] = r3/*V_11.1[1] = V_1.1*/;
                    r7[2] = r4/*V_11.1[2] = V_2.1*/;
                    r7[3] = r5/*V_11.1[3] = V_3.1*/;
                    r1 = {$:_[74],0:0,1:0,2:null}/*$t47 = new System.Void System.Threading.Semaphore::.ctor(System.Int32)((System.Int32)V_11.1.Length)*/;
                    $$[127].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,r7.length])/*$t47..ctor((System.Int32)V_11.1.Length)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    this[5] = r1/*this._semaphore = $t47*/;
                    r0 = 1/*V_7.1 = 1*/;
                    r4 = {$:_[420],0:0}/*$t49 = new System.Void XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass1::.ctor()()*/;
                    $$[835].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null])/*$t49..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    r4[0] = 0/*$t49.i = 0*/;
                    $ep = 34;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 34:
                {
                    r1 = r4[0]/*$t51 = $t49.i*/;
                    if((r1 < r7.length))
                    {
                        $ep = 41;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 35;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                        }

                    }
                }
                case 35:
                {
                    $ep = 36;
                    r1 = this[4]/*$t59 = this._duration*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"Sleeping for ",new Number(r1)," seconds"])/*$rv = System.String::Concat("Sleeping for ", box(System.Int32,$t59), " seconds")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    $ep = 37;
                    r1 = $rv/*$t62 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,r1])/*this.Log($t62)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 37:
                {
                    $ep = 38;
                    r1 = this[4]/*$t64 = this._duration*/;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,(r1 * 1000)])/*System.Threading.Thread::Sleep($t64 Multiply 1000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 38:
                {
                    $ep = 39;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,"Woke up!"])/*this.Log("Woke up!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 39:
                {
                    $ep = 40;
                    this[3] = 0/*this._testRunning = 0*/;
                    r1 = this[5]/*$t72 = this._semaphore*/;
                    $$[124].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null,r7.length])/*$t72.Acquire((System.Int32)V_11.1.Length)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 40:
                {
                    return;
                }
                case 41:
                {
                    $ep = 42;
                    r2 = {$:_[421],0:null,1:null,2:0,3:null}/*$t75 = new System.Void XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3::.ctor()()*/;
                    $$[837].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7],[null,null])/*$t75..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 42:
                {
                    $ep = 43;
                    r2[0] = r4/*$t75.CS$<>8__locals2 = $t49*/;
                    r2[3] = this/*$t75.<>4__this = this*/;
                    r1 = r4[0]/*$t77 = $t49.i*/;
                    r2[1] = r7[r1]/*$t75.element = V_11.1[$t77]*/;
                    r1 = r2[1]/*$t79 = $t75.element*/;
                    $rv = r1.style/*$rv = $t79.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 43:
                {
                    $ep = 44;
                    r1 = $rv/*$t80 = $rv*/;
                    r1.height = "90px"/*$t80.set_Height("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 44:
                {
                    $ep = 45;
                    r1 = r2[1]/*$t82 = $t75.element*/;
                    $rv = r1.style/*$rv = $t82.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 45:
                {
                    $ep = 46;
                    r1 = $rv/*$t83 = $rv*/;
                    r1.width = "90px"/*$t83.set_Width("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 46:
                {
                    $ep = 47;
                    r1 = r2[1]/*$t85 = $t75.element*/;
                    $rv = r1.style/*$rv = $t85.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 47:
                {
                    $ep = 48;
                    r1 = $rv/*$t86 = $rv*/;
                    r1.position = "absolute"/*$t86.set_Position("absolute")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 48:
                {
                    $ep = 49;
                    r2[2] = r0/*$t75.clockwiseForThisElement = V_7.3*/;
                    r1 = r2[1]/*$t88 = $t75.element*/;
                    r6.appendChild(r1)/*V_5.1.AppendChild($t88)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 49:
                {
                    $ep = 50;
                    r1 = {$:_[84],0:null,1:null,2:null,3:null}/*$t90 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t75, XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3::<PerformTest>b__0)*/;
                    $$[29](r1,r2,$$[836])/*$t90..ctor($t75, XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3::<PerformTest>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 50:
                {
                    $ep = 51;
                    r3 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t92 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)($t90, 3)*/;
                    $$[165].call(r3,r1,3)/*$t92..ctor($t90, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 51:
                {
                    $ep = 52;
                    r1 = r2[1]/*$t94 = $t75.element*/;
                    $rv = r1.style/*$rv = $t94.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 52:
                {
                    $ep = 53;
                    r1 = $rv/*$t95 = $rv*/;
                    $rv = r1.backgroundColor/*$rv = $t95.get_BackgroundColor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 53:
                {
                    $ep = 54;
                    r1 = $rv/*$t96 = $rv*/;
                    r1 = ("DomTest animation: " + r1)/*$t97 = System.String::Concat("DomTest animation: ", $t96)*/;
                    $$[143].call(r3,r1)/*$t92.set_Name($t97)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*[Continuation]*/;

                    }
                }
                case 54:
                {
                    $$[147].call(r3)/*$t92.Start()*/;
                    r1 = r4[0]/*$t99 = $t49.i*/;
                    r4[0] = (r1 + 1)/*$t49.i = $t99 Add 1*/;
                    r0 = (!r0)/*V_7.2 = BooleanNot V_7.3*/;
                    $ep = 34;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r3,r4,r5,r0,r6,r7]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5)
// 796: System.Void XaeiOS.TestSuite.Tests.DomTest::MoveElement(System.String,System.Browser.Dom.IDomElement,System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = this[5]/*$t1 = this._semaphore*/;
                    $$[123].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $f[3].style/*$rv = element.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2 = $rv/*$t3 = $rv*/;
                    $rv = r2.left/*$rv = $t3.get_Left()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2 = $rv/*$t4 = $rv*/;
                    $rv = parseInt(r2)/*$rv = System.NativeNumber::ParseInt($t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r5 = $rv/*V_0.1 = $rv*/;
                    $rv = $f[3].style/*$rv = element.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = $rv/*$t7 = $rv*/;
                    $rv = r2.top/*$rv = $t7.get_Top()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r2 = $rv/*$t8 = $rv*/;
                    $rv = parseInt(r2)/*$rv = System.NativeNumber::ParseInt($t8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r4 = $rv/*V_1.1 = $rv*/;
                    r0 = 0/*V_2.1 = 0*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    r2 = this[3]/*V_6.1 = this._testRunning*/;
                    if(r2)
                    {
                        $ep = 12;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 10;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r2 = this[5]/*$t14 = this._semaphore*/;
                    $$[125].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5],[null,null])/*$t14.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    return;
                }
                case 12:
                {
                    r1 = (r0 * 3.14)/*V_3.1 = (System.Double)V_2.3 Multiply 3.14*/;
                    if((!$f[4]))
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 13;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                        }

                    }
                }
                case 13:
                {
                    r1 = ((r0 * 3.14) * -1)/*V_3.2 = (System.Double)V_2.3 Multiply 3.14 Multiply -1*/;
                    $ep = 14;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $rv = $f[3].style/*$rv = element.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r3 = $rv/*$t27 = $rv*/;
                    $rv = Math.sin((r1 / 8))/*$rv = System.Math::Sin((System.Double)V_3.3 Divide 8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r2 = $rv/*$t31 = $rv*/;
                    $rv = Math.floor((r5 + (r2 * 50)))/*$rv = System.Math::Floor(V_0.1 Add $t31 Multiply 50)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r2 = $rv/*V_7.1 = $rv*/;
                    r2 = r2.toString()/*$t37 = V_7.1.ToString()*/;
                    r2 = (r2 + "px")/*$t39 = System.String::Concat($t37, "px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r3.left = r2/*$t27.set_Left($t39)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    $rv = $f[3].style/*$rv = element.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r3 = $rv/*$t41 = $rv*/;
                    $rv = Math.cos((r1 / 8))/*$rv = System.Math::Cos((System.Double)V_3.3 Divide 8)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r2 = $rv/*$t45 = $rv*/;
                    $rv = Math.floor((r4 + (r2 * 50)))/*$rv = System.Math::Floor(V_1.1 Add $t45 Multiply 50)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    r2 = $rv/*V_7.2 = $rv*/;
                    r2 = r2.toString()/*$t51 = V_7.2.ToString()*/;
                    r2 = (r2 + "px")/*$t53 = System.String::Concat($t51, "px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r3.top = r2/*$t41.set_Top($t53)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    $rv = $f[3].style/*$rv = element.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r3 = $rv/*$t55 = $rv*/;
                    $rv = Math.sin((r1 / 30))/*$rv = System.Math::Sin((System.Double)V_3.3 Divide 30)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    r2 = $rv/*$t59 = $rv*/;
                    $rv = Math.abs(r2)/*$rv = System.Math::Abs($t59)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r2 = $rv/*$t61 = $rv*/;
                    $rv = Math.min((r2 + 0.2),1)/*$rv = System.Math::Min((System.Double)(System.Double)$t61 Add 0.2, 1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r2 = $rv/*V_8.1 = $rv*/;
                    $rv = r2.$[0].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5],[null,null])/*$rv = V_8.1.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r2 = $rv/*$t70 = $rv*/;
                    r3.opacity = r2/*$t55.set_Opacity($t70)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 9;
                    r0 = (r0 + 1)/*V_2.2 = V_2.3 Add 1*/;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5],[null,null,33])/*System.Threading.Thread::Sleep(33)*/;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r1,r3,r0,r4,r5]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 797: System.Void XaeiOS.TestSuite.Tests.DomTest::.ctor(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Document Object Model test"])/*this..ctor("Document Object Model test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    this[4] = $f[2]/*this._duration = duration*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4)
// 798: System.Void XaeiOS.TestSuite.Tests.ResourceTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,"Creating DOM resources"])/*this.Log("Creating DOM resources")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = document/*V_4.1 = System.Browser.Dom.DomManager::get_Document()*/;
                    r3 = document.body/*V_5.1 = System.Browser.Dom.DomManager::GetDocumentBody()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = r2.createElement("DIV")/*$rv = V_4.1.CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1 = $rv/*V_0.1 = $rv*/;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t6 = $rv*/;
                    r0.backgroundColor = "purple"/*$t6.set_BackgroundColor("purple")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = $rv/*$t8 = $rv*/;
                    r0.height = "90px"/*$t8.set_Height("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t10 = $rv*/;
                    r0.width = "90px"/*$t10.set_Width("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = $rv/*$t12 = $rv*/;
                    r0.position = "absolute"/*$t12.set_Position("absolute")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = $rv/*$t14 = $rv*/;
                    r0.top = "250px"/*$t14.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    $rv = r1.style/*$rv = V_0.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = $rv/*$t16 = $rv*/;
                    r0.left = "350px"/*$t16.set_Left("350px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r3.appendChild(r1)/*V_5.1.AppendChild(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r4 = {$:_[405],0:null}/*$t18 = new System.Void XaeiOS.TestSuite.Tests.DomElementResource::.ctor(System.Browser.Dom.IDomElement)(V_0.1)*/;
                    $$[802].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,r1])/*$t18..ctor(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    $$[265](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,r4])/*System.Resources.ResourceManager::RegisterResource($t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    $rv = r2.createElement("DIV")/*$rv = V_4.1.CreateElement("DIV")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r1 = $rv/*V_1.1 = $rv*/;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    r0 = $rv/*$t21 = $rv*/;
                    r0.backgroundColor = "green"/*$t21.set_BackgroundColor("green")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    $ep = 23;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r0 = $rv/*$t23 = $rv*/;
                    r0.height = "90px"/*$t23.set_Height("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r0 = $rv/*$t25 = $rv*/;
                    r0.width = "90px"/*$t25.set_Width("90px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r0 = $rv/*$t27 = $rv*/;
                    r0.position = "absolute"/*$t27.set_Position("absolute")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r0 = $rv/*$t29 = $rv*/;
                    r0.top = "250px"/*$t29.set_Top("250px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    $rv = r1.style/*$rv = V_1.1.get_Style()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    r0 = $rv/*$t31 = $rv*/;
                    r0.left = "450px"/*$t31.set_Left("450px")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    r3.appendChild(r1)/*V_5.1.AppendChild(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    $ep = 34;
                    r0 = {$:_[405],0:null}/*$t33 = new System.Void XaeiOS.TestSuite.Tests.DomElementResource::.ctor(System.Browser.Dom.IDomElement)(V_1.1)*/;
                    $$[802].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,r1])/*$t33..ctor(V_1.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 34:
                {
                    $ep = 35;
                    $$[265](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,r0])/*System.Resources.ResourceManager::RegisterResource($t33)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 35:
                {
                    $ep = 36;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,"Sleeping for 1 second"])/*this.Log("Sleeping for 1 second")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    $ep = 37;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,1000])/*System.Threading.Thread::Sleep(1000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 37:
                {
                    $ep = 38;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,"Cleaning up one resource and leaving the other to be cleaned when the SIP exits"])/*this.Log("Cleaning up one resource and leaving the other to be cleaned when the SIP exits")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 38:
                {
                    $ep = 39;
                    r4.$[4].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null])/*$t18.Dispose()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 39:
                {
                    $ep = 40;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,"Resource freed"])/*this.Log("Resource freed")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 40:
                {
                    $ep = 41;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,"Sleeping for 1 second"])/*this.Log("Sleeping for 1 second")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 41:
                {
                    $ep = 42;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4],[null,null,1000])/*System.Threading.Thread::Sleep(1000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*[Continuation]*/;

                    }
                }
                case 42:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3,r4]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 799: System.Void XaeiOS.TestSuite.Tests.ResourceTest::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null,"Resource test"])/*this..ctor("Resource test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 800: System.Void XaeiOS.TestSuite.Tests.DomElementResource::Dispose()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = this[0]/*$t1 = this._element*/;
                    if((r0 == null))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = this[0]/*$t6 = this._element*/;
                    $rv = r0.parentNode/*$rv = $t6.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t7 = $rv*/;
                    if((r0 == null))
                    {
                        $ep = 6;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[0]/*$t12 = this._element*/;
                    $rv = r0.parentNode/*$rv = $t12.get_ParentNode()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = $rv/*$t13 = $rv*/;
                    r1 = this[0]/*$t15 = this._element*/;
                    r0.removeChild(r1)/*$t13.RemoveChild($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    this[0] = null/*this._element = null*/;
                    $ep = 7;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r0)
// 801: System.String XaeiOS.TestSuite.Tests.DomElementResource::ToString()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r1 = this[0]/*$t1 = this._element*/;
                    if((r1 == null))
                    {
                        $ep = 3;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 2:
                {
                    $ep = 4;
                    r1 = this[0]/*$t6 = this._element*/;
                    $rv = r1.$[0].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r0],[null,null])/*$rv = $t6.ToString()*/;
                    continue $ctrl;
                }
                case 3:
                {
                    r0 = "[free]"/*V_0.2 = "[free]"*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    return r0/*V_0.3*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 802: System.Void XaeiOS.TestSuite.Tests.DomElementResource::.ctor(System.Browser.Dom.IDomElement)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    this[0] = $f[2]/*this._element = element*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 803: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite::TestOverrideInterfaceMethodOfAbstractBaseClass()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[409]}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder::.ctor()()*/;
                    $$[808].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = r0.$.i[407][0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,6])/*$rv = $t0.AddTen(6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = $rv/*$t4 = $rv*/;
                    $$[739].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,16,r0])/*this.AssertEquals(16, $t4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 804: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite::TestStaticConstructorsWorked()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = _[411]/*$t2 = XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1.property*/;
                    $$[742].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Static constructor for StaticCosntructorClass1 was not invoked",r0])/*this.AssertNotNull("Static constructor for StaticCosntructorClass1 was not invoked", $t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = _[413]/*$t5 = XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2.property*/;
                    $$[742].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Static constructor for StaticCosntructorClass2 was not invoked",r0])/*this.AssertNotNull("Static constructor for StaticCosntructorClass2 was not invoked", $t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 805: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 806: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 807: System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder::AddTen(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = 0/*V_0.1 = 0*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((r0 < 10))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    return $f[2]/*x*/;
                }
                case 4:
                {
                    $f[2] = ($f[2] + 1)/*x = x Add 1*/;
                    r0 = (r0 + 1)/*V_0.2 = V_0.3 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 808: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[806].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 809: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[0]}/*$t0 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    _[411] = r0/*XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1.property = $t0*/;
                    r0 = _[411]/*$t2 = XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1.property*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In static constructor for StaticConstructorClass1.  property is ",r0])/*$rv = System.String::Concat("In static constructor for StaticConstructorClass1.  property is ", $t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t3)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 810: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 811: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2::.cctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[0]}/*$t0 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    _[413] = r0/*XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2.property = $t0*/;
                    r0 = _[413]/*$t2 = XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2.property*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In static constructor for StaticConstructorClass2.  property is ",r0])/*$rv = System.String::Concat("In static constructor for StaticConstructorClass2.  property is ", $t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    LogWrite("DEBUG", r0)/*System.Diagnostics.Logging::Debug($t3)*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 812: System.Void XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 813: System.Void XaeiOS.TestSuite.TestAttribute::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[6].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r1,r2,r0,r3)
// 814: System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::PerformTest()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = this[3]/*$t3 = this._numberOfThreads*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,"Creating ",new Number(r1)," threads"])/*$rv = System.String::Concat("Creating ", box(System.Int32,$t3), " threads")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = $rv/*$t6 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r1])/*this.Log($t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1 = this[3]/*$t8 = this._numberOfThreads*/;
                    r3 = $$[422](_[81],r1)/*V_0.1 = new System.Threading.Thread[$t8]*/;
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    r1 = this[3]/*$t12 = this._numberOfThreads*/;
                    if((r0 < r1))
                    {
                        $ep = 23;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    $ep = 6;
                    this[10] = 0/*this._startedThreads = 0*/;
                    r1 = {$:_[21],0:null,1:null}/*$t18 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null])/*$t18..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    this[6] = r1/*this._startedThreadsLock = $t18*/;
                    r1 = {$:_[21],0:null,1:null}/*$t20 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null])/*$t20..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    this[7] = r1/*this._allThreadsStartedLock = $t20*/;
                    r1 = this[7]/*$t23 = this._allThreadsStartedLock*/;
                    r2 = {$:_[234],0:null,1:null}/*$t24 = new System.Void System.Threading.Condition::.ctor(System.Threading.Lock)($t23)*/;
                    $$[430].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r1])/*$t24..ctor($t23)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    this[8] = r2/*this._allThreadsStartedCondition = $t24*/;
                    r1 = this[7]/*$t26 = this._allThreadsStartedLock*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null])/*$t26.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r1 = this[3]/*$t30 = this._numberOfThreads*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,"Starting ",new Number(r1)," threads"])/*$rv = System.String::Concat("Starting ", box(System.Int32,$t30), " threads")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r1 = $rv/*$t33 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r1])/*this.Log($t33)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    r0 = 0/*V_1.2 = 0*/;
                    $ep = 12;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    r1 = this[3]/*$t36 = this._numberOfThreads*/;
                    if((r0 < r1))
                    {
                        $ep = 22;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 13;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                        }

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r1 = this[8]/*$t40 = this._allThreadsStartedCondition*/;
                    $$[429].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null])/*$t40.Await()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r1 = this[7]/*$t42 = this._allThreadsStartedLock*/;
                    $$[72].call(r1)/*$t42.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,"Waiting for all threads to finish"])/*this.Log("Waiting for all threads to finish")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r1 = this[9]/*$t46 = this._semaphore*/;
                    r2 = this[3]/*$t48 = this._numberOfThreads*/;
                    $$[124].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2])/*$t46.Acquire($t48)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r1 = this[4]/*$t51 = this._failedThreads*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,new Number(r1)," threads failed the calculation"])/*$rv = System.String::Concat(box(System.Int32,$t51), " threads failed the calculation")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $rv/*$t54 = $rv*/;
                    r1 = this[4]/*$t56 = this._failedThreads*/;
                    $$[701].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r2,(r1 == 0)])/*this.Assert($t54, $t56 ValueEquality 0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r1 = this[3]/*$t63 = this._numberOfThreads*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,"All ",new Number(r1)," threads finished"])/*$rv = System.String::Concat("All ", box(System.Int32,$t63), " threads finished")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r1 = $rv/*$t66 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r1,r2,r0,r3],[null,null,r1])/*this.Log($t66)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    return;
                }
                case 22:
                {
                    $$[147].call(r3[r0])/*V_0.1[V_1.6].Start()*/;
                    r0 = (r0 + 1)/*V_1.3 = V_1.6 Add 1*/;
                    $ep = 12;
                    continue $ctrl;
                }
                case 23:
                {
                    $ep = 24;
                    r1 = {$:_[84],0:null,1:null,2:null,3:null}/*$t72 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(this, XaeiOS.TestSuite.Tests.MultiThreadingStressTest::Work)*/;
                    $$[29](r1,this,$$[816])/*$t72..ctor(this, XaeiOS.TestSuite.Tests.MultiThreadingStressTest::Work)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r2 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t74 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Threading.ThreadPriority)($t72, 3)*/;
                    $$[165].call(r2,r1,3)/*$t74..ctor($t72, 3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    r3[r0] = r2/*V_0.1[V_1.5] = $t74*/;
                    r0 = (r0 + 1)/*V_1.4 = V_1.5 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r1,r2,r0,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1)
// 815: System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::ThreadStarted()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[6]/*$t1 = this._startedThreadsLock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r1 = this[10]/*$t4 = this._startedThreads*/;
                    this[10] = (r1 + 1)/*this._startedThreads = $t4 Add 1*/;
                    r0 = this[3]/*$t9 = this._numberOfThreads*/;
                    if((!((r1 + 1) == r0)))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"All threads have started!"])/*this.Log("All threads have started!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[7]/*$t18 = this._allThreadsStartedLock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t18.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[8]/*$t20 = this._allThreadsStartedCondition*/;
                    $$[428].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null])/*$t20.Signal()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[7]/*$t22 = this._allThreadsStartedLock*/;
                    $$[72].call(r0)/*$t22.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = this[10]/*$t26 = this._startedThreads*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,"Current thread count = ",new Number(r0)])/*$rv = System.String::Concat("Current thread count = ", box(System.Int32,$t26))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r0 = $rv/*$t28 = $rv*/;
                    $$[700].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1],[null,null,r0])/*this.Log($t28)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = this[6]/*$t30 = this._startedThreadsLock*/;
                    $$[72].call(r0)/*$t30.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r1)
// 816: System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::Work()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[815].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null])/*this.ThreadStarted()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2 = this[9]/*$t2 = this._semaphore*/;
                    $$[123].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null])/*$t2.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = 0/*V_0.1 = (System.Int64)0*/;
                    r1 = 0/*V_1.1 = 0*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    if((!(r1 > 100000)))
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 5;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[817].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null,(!(r0 == 5000050000))])/*this.ThreadFinished(BooleanNot V_0.3 ValueEquality 5000050000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r2 = this[9]/*$t22 = this._semaphore*/;
                    $$[125].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r1],[null,null])/*$t22.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                case 8:
                {
                    r0 = (r0 + r1)/*V_0.2 = V_0.3 Add (System.Int64)V_1.3*/;
                    r1 = (r1 + 1)/*V_1.2 = V_1.3 Add 1*/;
                    $ep = 4;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 817: System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::ThreadFinished(System.Boolean)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[5]/*$t1 = this._threadFinishedLock*/;
                    $$[70].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t1.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!$f[2]))
                    {
                        $ep = 4;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    r0 = this[4]/*$t8 = this._failedThreads*/;
                    this[4] = (r0 + 1)/*this._failedThreads = $t8 Add 1*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r0 = this[5]/*$t12 = this._threadFinishedLock*/;
                    $$[72].call(r0)/*$t12.Release()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 818: System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::.ctor(System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[707].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Multi-threading stress test"])/*this..ctor("Multi-threading stress test")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((!($f[2] < 2)))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[133],0:null,1:null,2:null,3:null}/*$t10 = new System.Void System.ArgumentException::.ctor(System.String)("numberOfThreads should be greater than 1")*/;
                    $$[286].call(r0,"numberOfThreads should be greater than 1")/*$t10..ctor("numberOfThreads should be greater than 1")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    throw r0/*$t10*/;
                }
                case 5:
                {
                    $ep = 6;
                    r0 = {$:_[21],0:null,1:null}/*$t12 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t12..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    this[5] = r0/*this._threadFinishedLock = $t12*/;
                    r0 = {$:_[74],0:0,1:0,2:null}/*$t15 = new System.Void System.Threading.Semaphore::.ctor(System.Int32)(numberOfThreads)*/;
                    $$[127].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2]])/*$t15..ctor(numberOfThreads)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    this[9] = r0/*this._semaphore = $t15*/;
                    this[3] = $f[2]/*this._numberOfThreads = numberOfThreads*/;
                    this[4] = 0/*this._failedThreads = 0*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1)
// 819: System.Void XaeiOS.TestSuite.QuickSortTestSuite::TestQuickSort()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r4 = {$:_[186],0:null,1:0}/*$t0 = new System.Void System.Collections.Generic.List`1<System.Int32>::.ctor()()*/;
                    $$[384].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r1 = r4/*V_0.1 = $t0*/;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,5])/*$t0.Add(5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,53])/*$t0.Add(53)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,25])/*$t0.Add(25)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,2])/*$t0.Add(2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,32131])/*$t0.Add(32131)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r4.$[9].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,142])/*$t0.Add(142)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    r0 = 0/*V_1.1 = 0*/;
                    $ep = 9;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = r4.$[11].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r2 = $rv/*$t8 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 48;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 11;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $rv = r4.$[11].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r2 = $rv/*$t12 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,"Sorting ",new Number(r2)," elements."])/*$rv = System.String::Concat("Sorting ", box(System.Int32,$t12), " elements.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r2 = $rv/*$t15 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r2 = {$:_[417],0:null,1:null,2:null,3:null}/*$t18 = new System.Void XaeiOS.TestSuite.Comparison`1<System.Int32>::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.QuickSortTestSuite::CompareInts)*/;
                    $$[29](r2,null,$$[820])/*$t18..ctor(null, XaeiOS.TestSuite.QuickSortTestSuite::CompareInts)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $$[821](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r4,r2])/*XaeiOS.TestSuite.QuickSortTestSuite::Sort($t0, $t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    $rv = r4.$[11].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r2 = $rv/*$t20 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,"Done sorting ",new Number(r2)," elements."])/*$rv = System.String::Concat("Done sorting ", box(System.Int32,$t20), " elements.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r2 = $rv/*$t23 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t23)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r3 = $$[422](_[221],6)/*$tf26 = new System.Int32[6]*/;
                    r2 = _[423]/*$t27 = <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}.$$method0x600008e-1*/;
                    $$[423](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r3,r2])/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray($tf26, $t27)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    r0 = 0/*V_1.2 = 0*/;
                    $ep = 21;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $rv = r4.$[11].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    r2 = $rv/*$t29 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 43;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 23;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 23:
                {
                    $ep = 24;
                    r2 = {$:_[186],0:null,1:0}/*$t32 = new System.Void System.Collections.Generic.List`1<System.Int32>::.ctor()()*/;
                    $$[384].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$t32..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    r1 = r2/*V_0.2 = $t32*/;
                    r0 = 127/*V_1.3 = 127*/;
                    $ep = 25;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    if((!(r0 < 0)))
                    {
                        $ep = 41;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 26;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = V_0.3.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    $ep = 28;
                    r2 = $rv/*$t41 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,"Sorting ",new Number(r2)," elements."])/*$rv = System.String::Concat("Sorting ", box(System.Int32,$t41), " elements.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 28:
                {
                    $ep = 29;
                    r2 = $rv/*$t44 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t44)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r2 = {$:_[417],0:null,1:null,2:null,3:null}/*$t47 = new System.Void XaeiOS.TestSuite.Comparison`1<System.Int32>::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.QuickSortTestSuite::CompareInts)*/;
                    $$[29](r2,null,$$[820])/*$t47..ctor(null, XaeiOS.TestSuite.QuickSortTestSuite::CompareInts)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    $$[821](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r1,r2])/*XaeiOS.TestSuite.QuickSortTestSuite::Sort(V_0.3, $t47)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    $ep = 32;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = V_0.3.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 32:
                {
                    $ep = 33;
                    r2 = $rv/*$t49 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,"Done sorting ",new Number(r2)," elements."])/*$rv = System.String::Concat("Done sorting ", box(System.Int32,$t49), " elements.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    $ep = 34;
                    r2 = $rv/*$t52 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t52)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 34:
                {
                    r0 = 0/*V_1.4 = 0*/;
                    $ep = 35;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 35:
                {
                    $ep = 36;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null])/*$rv = V_0.4.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    r2 = $rv/*$t54 = $rv*/;
                    if((r0 < r2))
                    {
                        $ep = 38;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 37;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                        }

                    }
                }
                case 37:
                {
                    return;
                }
                case 38:
                {
                    $ep = 39;
                    $rv = r1.$[4].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r0])/*$rv = V_0.4.get_Item(V_1.12)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 39:
                {
                    $ep = 40;
                    r2 = $rv/*$t58 = $rv*/;
                    $$[739].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r0,r2])/*this.AssertEquals(V_1.12, $t58)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 40:
                {
                    r0 = (r0 + 1)/*V_1.5 = V_1.12 Add 1*/;
                    $ep = 35;
                    continue $ctrl;
                }
                case 41:
                {
                    $ep = 42;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r0])/*V_0.3.Add(V_1.11)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 42:
                {
                    r0 = (r0 - 1)/*V_1.6 = V_1.11 Subtract 1*/;
                    $ep = 25;
                    continue $ctrl;
                }
                case 43:
                {
                    $ep = 44;
                    r2 = $$[422](_[0],4)/*V_4.1 = new System.Object[4]*/;
                    r2[0] = "Checking index "/*V_4.1[0] = "Checking index "*/;
                    r2[1] = new Number(r0)/*V_4.1[1] = box(System.Int32,V_1.10)*/;
                    r2[2] = ".  Expecting "/*V_4.1[2] = ".  Expecting "*/;
                    r2[3] = new Number(r3[r0])/*V_4.1[3] = box(System.Int32,$tf26[V_1.10])*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*$rv = System.String::Concat(V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 44:
                {
                    $ep = 45;
                    r2 = $rv/*$t74 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t74)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 45:
                {
                    $ep = 46;
                    $rv = r4.$[4].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r0])/*$rv = $t0.get_Item(V_1.10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 46:
                {
                    $ep = 47;
                    r2 = $rv/*$t77 = $rv*/;
                    $$[739].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r3[r0],r2])/*this.AssertEquals($tf26[V_1.10], $t77)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 47:
                {
                    r0 = (r0 + 1)/*V_1.7 = V_1.10 Add 1*/;
                    $ep = 21;
                    continue $ctrl;
                }
                case 48:
                {
                    $ep = 49;
                    $rv = r4.$[4].call(r4,0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r0])/*$rv = $t0.get_Item(V_1.9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 49:
                {
                    $ep = 50;
                    r2 = $rv/*$t81 = $rv*/;
                    $rv = $$[251](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,"Added ",new Number(r2),"."])/*$rv = System.String::Concat("Added ", box(System.Int32,$t81), ".")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 50:
                {
                    $ep = 51;
                    r2 = $rv/*$t84 = $rv*/;
                    $$[300](0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1],[null,null,r2])/*System.Console::WriteLine($t84)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*[Continuation]*/;

                    }
                }
                case 51:
                {
                    r0 = (r0 + 1)/*V_1.8 = V_1.9 Add 1*/;
                    $ep = 9;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r0,r3,r4,r1]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 820: System.Int32 XaeiOS.TestSuite.QuickSortTestSuite::CompareInts(System.Int32,System.Int32)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    return ($f[2] - $f[3])/*a Subtract b*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 821: System.Void XaeiOS.TestSuite.QuickSortTestSuite::Sort(System.Collections.Generic.List`1<T>,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[2].$[11].call($f[2],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$rv = data.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t2 = $rv*/;
                    $$[823](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,0,(r0 - 1),$f[2],$f[3]])/*XaeiOS.TestSuite.QuickSortTestSuite::Sorting(0, $t2 Subtract 1, data, comparison)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9)
// 822: System.Int32 XaeiOS.TestSuite.QuickSortTestSuite::GetPivotPoint(System.Int32,System.Int32,System.Collections.Generic.List`1<T>,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    r0 = ($f[2] + 1)/*V_1.1 = begPoint Add 1*/;
                    r1 = $f[3]/*V_2.1 = endPoint*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    if((r0 >= $f[3]))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 3;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 6;
                    r3 = $rv/*$t8 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.4)*/;
                    continue $ctrl;
                }
                case 5:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 6:
                {
                    $ep = 7;
                    r2 = $rv/*$t10 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t8, $t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r2 = $rv/*$t89 = $rv*/;
                    r3 = (r2 > -1)/*$ts0 = $t89 GreaterThan -1*/;
                    $ep = 8;
                    continue $ctrl;
                }
                case 8:
                {
                    if(r3)
                    {
                        $ep = 44;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 9;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 9:
                {
                    if((r1 <= $f[2]))
                    {
                        $ep = 14;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 10;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r3 = $rv/*$t16 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.4)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r2 = $rv/*$t18 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t16, $t18)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    r6 = $rv/*$t82 = $rv*/;
                    r3 = (r6 < 1)/*$ts0 = $t82 LessThan 1*/;
                    $ep = 15;
                    continue $ctrl;
                }
                case 14:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    if(r3)
                    {
                        $ep = 43;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 16;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 16:
                {
                    if((r0 < r1))
                    {
                        $ep = 23;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 17;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 17:
                {
                    if(($f[2] == r1))
                    {
                        $ep = 22;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 18;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 18:
                {
                    $ep = 19;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    $ep = 20;
                    r2 = $rv/*V_4.1 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    r3 = $rv/*$t29 = $rv*/;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1,r3])/*data.set_Item(V_2.6, $t29)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    $ep = 22;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2],r2])/*data.set_Item(begPoint, V_4.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 22:
                {
                    return r1/*V_2.6*/;
                }
                case 23:
                {
                    $ep = 24;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 24:
                {
                    $ep = 25;
                    r3 = $rv/*V_3.1 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 25:
                {
                    $ep = 26;
                    r2 = $rv/*$t35 = $rv*/;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0,r2])/*data.set_Item(V_1.6, $t35)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 26:
                {
                    $ep = 27;
                    $f[4].$[5].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1,r3])/*data.set_Item(V_2.6, V_3.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 27:
                {
                    if((r0 >= $f[3]))
                    {
                        $ep = 32;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 28;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 28:
                {
                    $ep = 29;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 29:
                {
                    $ep = 30;
                    r3 = $rv/*$t40 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r0])/*$rv = data.get_Item(V_1.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 30:
                {
                    $ep = 31;
                    r2 = $rv/*$t42 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t40, $t42)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 31:
                {
                    r8 = $rv/*$t75 = $rv*/;
                    r3 = (r8 > -1)/*$ts0 = $t75 GreaterThan -1*/;
                    $ep = 33;
                    continue $ctrl;
                }
                case 32:
                {
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 33;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 33:
                {
                    if(r3)
                    {
                        $ep = 42;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 34;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 34:
                {
                    if((r1 <= $f[2]))
                    {
                        $ep = 39;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 35;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                }
                case 35:
                {
                    $ep = 36;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,$f[2]])/*$rv = data.get_Item(begPoint)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 36:
                {
                    $ep = 37;
                    r3 = $rv/*$t48 = $rv*/;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,r1])/*$rv = data.get_Item(V_2.5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 37:
                {
                    $ep = 38;
                    r2 = $rv/*$t50 = $rv*/;
                    $rv = $f[5].$[4].call($f[5],0,$end,null,[$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9],[null,null,[r3, r2]])/*$rv = comparison.Invoke($t48, $t50)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 38:
                {
                    r9 = $rv/*$t68 = $rv*/;
                    r3 = (r9 < 1)/*$ts0 = $t68 LessThan 1*/;
                    $ep = 40;
                    continue $ctrl;
                }
                case 39:
                {
                    r7 = 0/*$t55 = 0*/;
                    r3 = 0/*$ts0 = 0*/;
                    $ep = 40;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                    }
                }
                case 40:
                {
                    if(r3)
                    {
                        $ep = 41;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 16;
                        continue $ctrl;

                    }
                }
                case 41:
                {
                    r1 = (r1 - 1)/*V_2.2 = V_2.5 Subtract 1*/;
                    $ep = 34;
                    continue $ctrl;
                }
                case 42:
                {
                    r0 = (r0 + 1)/*V_1.2 = V_1.5 Add 1*/;
                    $ep = 27;
                    continue $ctrl;
                }
                case 43:
                {
                    r1 = (r1 - 1)/*V_2.3 = V_2.4 Subtract 1*/;
                    $ep = 9;
                    continue $ctrl;
                }
                case 44:
                {
                    r0 = (r0 + 1)/*V_1.3 = V_1.4 Add 1*/;
                    $ep = 2;
                    continue $ctrl;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r2,r3,r0,r4,r1,r5,r6,r7,r8,r9]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 823: System.Void XaeiOS.TestSuite.QuickSortTestSuite::Sorting(System.Int32,System.Int32,System.Collections.Generic.List`1<T>,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    if((!($f[3] == $f[2])))
                    {
                        $ep = 2;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $rv = $$[822](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],$f[3],$f[4],$f[5]])/*$rv = XaeiOS.TestSuite.QuickSortTestSuite::GetPivotPoint(beg, end, data, comparison)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r0 = $rv/*V_0.1 = $rv*/;
                    if((!(r0 > $f[2])))
                    {
                        $ep = 5;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 4;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $$[823](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,$f[2],(r0 - 1),$f[4],$f[5]])/*XaeiOS.TestSuite.QuickSortTestSuite::Sorting(beg, V_0.1 Subtract 1, data, comparison)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    if((!(r0 < $f[3])))
                    {
                        $ep = 7;
                        continue $ctrl;

                    }
                    else
                    {
                        $ep = 6;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                        }

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[823](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,(r0 + 1),$f[3],$f[4],$f[5]])/*XaeiOS.TestSuite.QuickSortTestSuite::Sorting(V_0.1 Add 1, end, data, comparison)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 824: System.Boolean XaeiOS.TestSuite.QuickSortTestSuite::GreaterThanOrEqualTo(T,T,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,[$f[2], $f[3]]])/*$rv = comparison.Invoke(a, b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    return (r0 > -1)/*$t3 GreaterThan -1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 825: System.Boolean XaeiOS.TestSuite.QuickSortTestSuite::LessThanOrEqualTo(T,T,XaeiOS.TestSuite.Comparison`1<T>)
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $rv = $f[4].$[4].call($f[4],0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,[$f[2], $f[3]]])/*$rv = comparison.Invoke(a, b)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    return (r0 < 1)/*$t3 LessThan 1*/;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 826: System.Void XaeiOS.TestSuite.QuickSortTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 827: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::TestAbortThread()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r3 = {$:_[425],0:null,1:null}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1::.ctor()()*/;
                    $$[839].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3[1] = this/*$t0.<>4__this = this*/;
                    r1 = {$:_[21],0:null,1:null}/*$t2 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[235],0:null,1:null,2:null,3:null,4:0}/*$t3 = new System.Void System.Threading.TimedCondition::.ctor(System.Threading.Lock)($t2)*/;
                    $$[433].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$t3..ctor($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3[0] = r0/*$t0.aborted = $t3*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t5 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1::<TestAbortThread>b__0)*/;
                    $$[29](r0,r3,$$[838])/*$t5..ctor($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1::<TestAbortThread>b__0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t6 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)($t5)*/;
                    $$[164].call(r2,r0)/*$t6..ctor($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[147].call(r2)/*$t6.Start()*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Aborting test thread in 2 seconds.  Sleeping..."])/*this.Log("Aborting test thread in 2 seconds.  Sleeping...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,2000])/*System.Threading.Thread::Sleep(2000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"...awake!  Going to abort the test thread."])/*this.Log("...awake!  Going to abort the test thread.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $$[149].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t6.Abort()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Called testThread.Abort()"])/*this.Log("Called testThread.Abort()")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $f.$ecp = 14/*Frame.ExceptionCatchPointer = 14*/;
                    r0 = r3[0]/*$t14 = $t0.aborted*/;
                    $ep = 13;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 16;
                    $$[431].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,12000])/*$t14.Await(12000)*/;
                    continue $ctrl;
                }
                case 14:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Thread was not aborted as expected!"])/*this.Fail("Thread was not aborted as expected!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 828: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::TestAbortThreadWithState()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r3 = {$:_[426],0:null,1:null}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4::.ctor()()*/;
                    $$[841].call(r3,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r3[1] = this/*$t0.<>4__this = this*/;
                    r1 = {$:_[21],0:null,1:null}/*$t2 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = {$:_[235],0:null,1:null,2:null,3:null,4:0}/*$t3 = new System.Void System.Threading.TimedCondition::.ctor(System.Threading.Lock)($t2)*/;
                    $$[433].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$t3..ctor($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3[0] = r0/*$t0.aborted = $t3*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t5 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4::<TestAbortThreadWithState>b__3)*/;
                    $$[29](r0,r3,$$[840])/*$t5..ctor($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4::<TestAbortThreadWithState>b__3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r2 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t6 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)($t5)*/;
                    $$[164].call(r2,r0)/*$t6..ctor($t5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[147].call(r2)/*$t6.Start()*/;
                    $$[70].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t2.Acquire()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Aborting test thread in 2 seconds"])/*this.Log("Aborting test thread in 2 seconds")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,2000])/*System.Threading.Thread::Sleep(2000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $$[150].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Exception state"])/*$t6.Abort("Exception state")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $f.$ecp = 12/*Frame.ExceptionCatchPointer = 12*/;
                    r0 = r3[0]/*$t11 = $t0.aborted*/;
                    $ep = 11;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 14;
                    $$[431].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,12000])/*$t11.Await(12000)*/;
                    continue $ctrl;
                }
                case 12:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 13;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    $$[737].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Thread was not aborted as expected!"])/*this.Fail("Thread was not aborted as expected!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 829: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::TestLockIdiom()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = {$:_[0]}/*$t0 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.Threading.Monitor::Enter($t0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"In locked section"])/*this.Log("In locked section")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*System.Threading.Monitor::Exit($t0)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Outside of locked section"])/*this.Log("Outside of locked section")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 830: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::TestLockIdiomUnlocksWhenExceptionsAreThrown()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r1 = {$:_[427],0:null,1:0}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7::.ctor()()*/;
                    $$[843].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = {$:_[0]}/*$t1 = new System.Void System.Object::.ctor()()*/;
                    $$[5].call(r0)/*$t1..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    r1[0] = r0/*$t0.sync = $t1*/;
                    $ep = 4;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $f.$ecp = 11/*Frame.ExceptionCatchPointer = 11*/;
                    r1 = r1[0]/*$tf3 = $t0.sync*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $$[341](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*System.Threading.Monitor::Enter($tf3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $f.$ecp = 9/*Frame.ExceptionCatchPointer = 9*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"In locked section"])/*this.Log("In locked section")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r0 = {$:_[7],0:null,1:null,2:null,3:null}/*$t7 = new System.Void System.Exception::.ctor(System.String)("Purposefully thrown")*/;
                    $$[18].call(r0,"Purposefully thrown")/*$t7..ctor("Purposefully thrown")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    throw r0/*$t7*/;
                }
                case 9:
                {
                    $ep = 10;
                    $f.$ecp = 11/*Frame.ExceptionCatchPointer = 11*/;
                    $$[342](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*System.Threading.Monitor::Exit($tf3)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                }
                case 11:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 12;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    r3[1] = 0/*V_3.secondThreadAcquiredLock = 0*/;
                    $ep = 13;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = {$:_[21],0:null,1:null}/*$t10 = new System.Void System.Threading.Lock::.ctor()()*/;
                    $$[73].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t10..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 15;
                    r2 = {$:_[234],0:null,1:null}/*$t11 = new System.Void System.Threading.Condition::.ctor(System.Threading.Lock)($t10)*/;
                    $$[430].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$t11..ctor($t10)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t13 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)(V_3, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7::<TestLockIdiomUnlocksWhenExceptionsAreThrown>b__6)*/;
                    $$[29](r0,r3,$$[842])/*$t13..ctor(V_3, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7::<TestLockIdiomUnlocksWhenExceptionsAreThrown>b__6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t14 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)($t13)*/;
                    $$[164].call(r1,r0)/*$t14..ctor($t13)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    $$[147].call(r1)/*$t14.Start()*/;
                    $$[429].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null])/*$t11.Await()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r0 = r3[1]/*$t17 = V_3.secondThreadAcquiredLock*/;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"Finally block of lock idiom should have unlocked sync obj",r0])/*this.Assert("Finally block of lock idiom should have unlocked sync obj", $t17)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 831: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::TestManualResetEvent()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = {$:_[428],0:null,1:null,2:0,3:null}/*$t0 = new System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa::.ctor()()*/;
                    $$[845].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r2[3] = this/*$t0.<>4__this = this*/;
                    r0 = {$:_[131],0:0,1:null}/*$t2 = new System.Void System.Threading.ManualResetEvent::.ctor()()*/;
                    $$[272].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t2..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r2[0] = r0/*$t0.firstEvent = $t2*/;
                    r0 = {$:_[131],0:0,1:null}/*$t3 = new System.Void System.Threading.ManualResetEvent::.ctor()()*/;
                    $$[272].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t3..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r2[1] = r0/*$t0.secondEvent = $t3*/;
                    r2[2] = 0/*$t0.firstEventWorked = 0*/;
                    r0 = {$:_[84],0:null,1:null,2:null,3:null}/*$t6 = new System.Void System.Threading.ThreadStart::.ctor(System.Object,System.IntPtr)($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa::<TestManualResetEvent>b__9)*/;
                    $$[29](r0,r2,$$[844])/*$t6..ctor($t0, XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa::<TestManualResetEvent>b__9)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1 = {$:_[81],0:null,1:null,2:null,3:0,4:0,5:null,6:null,7:null,8:null,9:0,10:null,11:null}/*$t7 = new System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart)($t6)*/;
                    $$[164].call(r1,r0)/*$t7..ctor($t6)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    $$[147].call(r1)/*$t7.Start()*/;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Main thread sleeping for 2 seconds.  Sleeping..."])/*this.Log("Main thread sleeping for 2 seconds.  Sleeping...")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,2000])/*System.Threading.Thread::Sleep(2000)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"...main thread awake!  Going to set the first event."])/*this.Log("...main thread awake!  Going to set the first event.")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = r2[0]/*$t13 = $t0.firstEvent*/;
                    $$[268].call(r0)/*$t13.Set()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Main thread set the first event.  Going to wait for the test thread to set the second event"])/*this.Log("Main thread set the first event.  Going to wait for the test thread to set the second event")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    r0 = r2[1]/*$t16 = $t0.secondEvent*/;
                    $$[270].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t16.WaitOne()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    $$[751].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"...main thread awake!"])/*this.Log("...main thread awake!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = r2[2]/*$t21 = $t0.firstEventWorked*/;
                    $$[736].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test thread didn't wake up when the first event was signalled",r0])/*this.Assert("Test thread didn't wake up when the first event was signalled", $t21)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 832: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    $$[754].call(this,0,$end,null,[$ep,$end,$rv,$pc,$f],[null,null])/*this..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 833: System.Void XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1::<TestMethodInliningBreaksLoops>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $f.$ecp = 14/*Frame.ExceptionCatchPointer = 14*/;
                    r1 = {$:_[186],0:null,1:0}/*$t0 = new System.Void System.Collections.Generic.List`1<System.Int32>::.ctor()()*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[384].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t0..ctor()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,5])/*$t0.Add(5)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,53])/*$t0.Add(53)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,25])/*$t0.Add(25)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,2])/*$t0.Add(2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    $ep = 8;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,32131])/*$t0.Add(32131)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    r1.$[9].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,142])/*$t0.Add(142)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    $rv = r1.$[11].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t0.get_Count()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    $ep = 11;
                    r2 = $rv/*$t9 = $rv*/;
                    r0 = {$:_[417],0:null,1:null,2:null,3:null}/*$t14 = new System.Void XaeiOS.TestSuite.Comparison`1<System.Int32>::.ctor(System.Object,System.IntPtr)(null, XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::CompareInts)*/;
                    $$[29](r0,null,$$[756])/*$t14..ctor(null, XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::CompareInts)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 11:
                {
                    $ep = 12;
                    $rv = $$[757](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,0,(r2 - 1),r1,r0])/*$rv = XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::GetPivotPoint(0, $t9 Subtract 1, $t0, $t14)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r0 = $rv/*$t15 = $rv*/;
                    this[1] = r0/*this.resultPivot = $t15*/;
                    r0 = this[2]/*$t17 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"GetPivotPoint complete"])/*$t17.Log("GetPivotPoint complete")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 16;
                    r0 = this[0]/*$t20 = this.done*/;
                    $$[428].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t20.Signal()*/;
                    continue $ctrl;
                }
                case 14:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 15;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 15:
                {
                    $ep = 16;
                    r0 = this[2]/*$t23 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test thread aborted.."])/*$t23.Log("Test thread aborted..")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 834: System.Void XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 835: System.Void XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2,r3)
// 836: System.Void XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3::<PerformTest>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r2 = this[3]/*$t1 = this.<>4__this*/;
                    r1 = $$[422](_[0],4)/*V_0.1 = new System.Object[4]*/;
                    r1[0] = "Starting thread to move element "/*V_0.1[0] = "Starting thread to move element "*/;
                    r0 = this[1]/*$t8 = this.element*/;
                    r1[1] = r0/*V_0.1[1] = $t8*/;
                    r1[2] = ".  Clockwise = "/*V_0.1[2] = ".  Clockwise = "*/;
                    r0 = this[2]/*$t13 = this.clockwiseForThisElement*/;
                    r1[3] = new Boolean(r0)/*V_0.1[3] = box(System.Boolean,$t13)*/;
                    $rv = $$[253](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r1])/*$rv = System.String::Concat(V_0.1)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = $rv/*$t15 = $rv*/;
                    $$[700].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r0])/*$t1.Log($t15)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r1 = this[3]/*$t17 = this.<>4__this*/;
                    r0 = this[0]/*$t20 = this.CS$<>8__locals2*/;
                    r0 = r0[0]/*$t21 = $t20.i*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,"element ",new Number(r0)])/*$rv = System.String::Concat("element ", box(System.Int32,$t21))*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    r3 = $rv/*$t23 = $rv*/;
                    r2 = this[1]/*$t25 = this.element*/;
                    r0 = this[2]/*$t27 = this.clockwiseForThisElement*/;
                    $$[796].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2,r3],[null,null,r3,r2,r0])/*$t17.MoveElement($t23, $t25, $t27)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2,r3]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 837: System.Void XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 838: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1::<TestAbortThread>b__0()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    r0 = this[1]/*$t1 = this.<>4__this*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Test thread sleeping for 8 seconds.."])/*$t1.Log("Test thread sleeping for 8 seconds..")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 7;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,8000])/*System.Threading.Thread::Sleep(8000)*/;
                    continue $ctrl;
                }
                case 4:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    $f.$e = null/*Frame.Exception = null*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[1]/*$t9 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Test thread aborted.."])/*$t9.Log("Test thread aborted..")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[0]/*$t12 = this.aborted*/;
                    $$[428].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t12.Signal()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    r0 = this[1]/*$t5 = this.<>4__this*/;
                    $ep = 8;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 8:
                {
                    $ep = 9;
                    $$[737].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"This line should never be executed"])/*$t5.Fail("This line should never be executed")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 839: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0,r1,r2)
// 840: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4::<TestAbortThreadWithState>b__3()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $f.$ecp = 4/*Frame.ExceptionCatchPointer = 4*/;
                    r0 = this[1]/*$t1 = this.<>4__this*/;
                    $ep = 2;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test thread sleeping for 8 seconds.."])/*$t1.Log("Test thread sleeping for 8 seconds..")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 19;
                    $$[159](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,8000])/*System.Threading.Thread::Sleep(8000)*/;
                    continue $ctrl;
                }
                case 4:
                {
                    $f.$ecp = null/*Frame.ExceptionCatchPointer = null*/;
                    r2 = $f.$e/*$t7 = $e*/;
                    $ep = 5;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    $f.$e = null/*Frame.Exception = null*/;
                    $rv = $$[447].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t7.get_ExceptionState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    r0 = $rv/*$t8 = $rv*/;
                    if((!r0))
                    {
                        $ep = 7;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 8;
                        continue $ctrl;

                    }
                }
                case 7:
                {
                    r0 = 1/*$ts0 = 1*/;
                    $ep = 11;
                    continue $ctrl;
                }
                case 8:
                {
                    $ep = 9;
                    $rv = $$[447].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t7.get_ExceptionState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 9:
                {
                    $ep = 10;
                    r0 = $rv/*$t9 = $rv*/;
                    $rv = r0.$[0].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t9.ToString()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 10:
                {
                    r0 = $rv/*$t10 = $rv*/;
                    r0 = (r0 == "Exception state")/*$t12 = System.String::op_Equality($t10, "Exception state")*/;
                    r0 = (!r0)/*$ts0 = BooleanNot $t12*/;
                    $ep = 11;
                    continue $ctrl;
                }
                case 11:
                {
                    if(r0)
                    {
                        $ep = 12;
                        if(0 > $end--)
                        {
                            throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                        }

                    }
                    else
                    {
                        $ep = 15;
                        continue $ctrl;

                    }
                }
                case 12:
                {
                    $ep = 13;
                    r1 = this[1]/*$t24 = this.<>4__this*/;
                    $rv = $$[447].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t7.get_ExceptionState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 13:
                {
                    $ep = 14;
                    r0 = $rv/*$t26 = $rv*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test thread aborted with unknown state: ",r0])/*$rv = System.String::Concat("Test thread aborted with unknown state: ", $t26)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 14:
                {
                    $ep = 19;
                    r0 = $rv/*$t27 = $rv*/;
                    $$[751].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$t24.Log($t27)*/;
                    continue $ctrl;
                }
                case 15:
                {
                    $ep = 16;
                    r1 = this[1]/*$t17 = this.<>4__this*/;
                    $rv = $$[447].call(r2,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$rv = $t7.get_ExceptionState()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 16:
                {
                    $ep = 17;
                    r0 = $rv/*$t19 = $rv*/;
                    $rv = $$[250](0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"Test thread aborted with state: ",r0])/*$rv = System.String::Concat("Test thread aborted with state: ", $t19)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 17:
                {
                    $ep = 18;
                    r0 = $rv/*$t20 = $rv*/;
                    $$[751].call(r1,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,r0])/*$t17.Log($t20)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 18:
                {
                    $ep = 19;
                    r0 = this[0]/*$t22 = this.aborted*/;
                    $$[428].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null])/*$t22.Signal()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 19:
                {
                    r0 = this[1]/*$t5 = this.<>4__this*/;
                    $ep = 20;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 20:
                {
                    $ep = 21;
                    $$[737].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0,r1,r2],[null,null,"This line should never be executed"])/*$t5.Fail("This line should never be executed")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*[Continuation]*/;

                    }
                }
                case 21:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0,r1,r2]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 841: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 842: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7::<TestLockIdiomUnlocksWhenExceptionsAreThrown>b__6()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[0]/*$t2 = this.sync*/;
                    $rv = $$[343](0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,r0])/*$rv = System.Threading.Monitor::TryEnter($t2)*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    r0 = $rv/*$t3 = $rv*/;
                    this[1] = r0/*this.secondThreadAcquiredLock = $t3*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 843: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f,r0)
// 844: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa::<TestManualResetEvent>b__9()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $ep = 2;
                    r0 = this[3]/*$t1 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Test thread waiting on first event.."])/*$t1.Log("Test thread waiting on first event..")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 2:
                {
                    $ep = 3;
                    r0 = this[0]/*$t4 = this.firstEvent*/;
                    $$[270].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null])/*$t4.WaitOne()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 3:
                {
                    $ep = 4;
                    r0 = this[3]/*$t6 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"....test thread awake!"])/*$t6.Log("....test thread awake!")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 4:
                {
                    $ep = 5;
                    this[2] = 1/*this.firstEventWorked = 1*/;
                    r0 = this[3]/*$t11 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Test thread setting the second event"])/*$t11.Log("Test thread setting the second event")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 5:
                {
                    $ep = 6;
                    r0 = this[1]/*$t14 = this.secondEvent*/;
                    $$[268].call(r0)/*$t14.Set()*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 6:
                {
                    $ep = 7;
                    r0 = this[3]/*$t16 = this.<>4__this*/;
                    $$[751].call(r0,0,$end,null,[$ep,$end,$rv,$pc,$f,r0],[null,null,"Test thread set the second event"])/*$t16.Log("Test thread set the second event")*/;
                    if(0 > $end--)
                    {
                        throw [$ep,$end,$rv,$pc,$f,r0]/*[Continuation]*/;

                    }
                }
                case 7:
                {
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f,r0]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


},
function($ep,$end,$rv,$pc,$f)
// 845: System.Void XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa::.ctor()
{
    if(($ep == 0))
    {
        $f[0] = this/*Frame[This] = this*/;
        $f[1] = arguments.callee/*Frame[Function] = [dynamic expression]*/;
        $ep = 1;

    }
    $ctrl:
    do
    {
        if(0 > $end--)
        {
            throw [$ep,$end,$rv,$pc,$f]/*[Continuation]*/;

        }
        try
        {
            switch($ep)
            {
                case 1:
                {
                    $$[5].call(this)/*this..ctor()*/;
                    return;
                }
                default:
                {
                    throw new Error("Invalid execution pointer")/*[dynamic expression]*/;
                }

            }


        }
        catch($e)
        {
            if($e instanceof Array)
            {
                throw $e/*$e*/;

            }
            $e = $$[575]($e)/*$e = XaeiOS.Kernel.Scheduler::ConvertToManagedException($e)*/;
            if(($e[0] == null))
            {
                $e[0] = [$ep,$end,$rv,$pc,$f]/*$e._throwContext = [Continuation]*/;

            }
            if((!$f.$ecp))
            {
                throw $e/*$e*/;

            }
            $ep = $f.$ecp;
            $f.$e = $e/*Frame.Exception = $e*/;

        }


    } while (true);


}];var _=[
// 0: System.Object
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 1: System.Attribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 2: System.Runtime.InteropServices.GuidAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 3: System.Nullable`1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 4: System.UInt64
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.UInt64 System.UInt64::MinValue */,
null/* System.UInt64 System.UInt64::MaxValue */,

// 7: System.Exception
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 8: System.MulticastNotSupportedException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 9: System.Delegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[24]/* System.Object System.Delegate::Invoke(System.Object[]) */,
    5:$$[25]/* System.Object System.Delegate::InvokeNative(System.Object[]) */,
    6:$$[26]/* System.Void System.Delegate::InternalCombine(System.Delegate) */
},

// 10: System.MulticastDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */
},

// 11: System.EventHandler
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.EventHandler::Invoke(System.Object,System.EventArgs) */,
    8:$$[-1]/* System.IAsyncResult System.EventHandler::BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.EventHandler::EndInvoke(System.IAsyncResult) */
},

// 12: System.Runtime.InteropServices.LayoutKind
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* System.Runtime.InteropServices.LayoutKind System.Runtime.InteropServices.LayoutKind::Sequential */,
2/* System.Runtime.InteropServices.LayoutKind System.Runtime.InteropServices.LayoutKind::Explicit */,
3/* System.Runtime.InteropServices.LayoutKind System.Runtime.InteropServices.LayoutKind::Auto */,

// 16: XaeiOS.Process.ImageFormat.AssemblyName
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 17: System.Reflection.MemberInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */
},

// 18: System.Type
{
    f: 0,
    0:$$[53]/* System.String System.Type::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */,
    7:null/* System.String System.Type::get_Namespace() */,
    8:null/* System.Reflection.PropertyInfo[] System.Type::GetProperties() */,
    9:null/* System.Reflection.MethodInfo[] System.Type::GetMethods() */,
    10:null/* System.Reflection.ConstructorInfo[] System.Type::GetConstructors() */,
    11:$$[52]/* System.RuntimeTypeHandle System.Type::get_TypeHandle() */
},

// 19: System.Reflection.RuntimeType
{
    f: 0,
    0:$$[53]/* System.String System.Type::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[57]/* System.Type System.Reflection.RuntimeType::get_DeclaringType() */,
    5:$$[58]/* System.String System.Reflection.RuntimeType::get_Name() */,
    6:$$[64]/* System.Boolean System.Reflection.RuntimeType::IsDefined(System.Type,System.Boolean) */,
    7:$$[59]/* System.String System.Reflection.RuntimeType::get_Namespace() */,
    8:$$[63]/* System.Reflection.PropertyInfo[] System.Reflection.RuntimeType::GetProperties() */,
    9:$$[62]/* System.Reflection.MethodInfo[] System.Reflection.RuntimeType::GetMethods() */,
    10:$$[61]/* System.Reflection.ConstructorInfo[] System.Reflection.RuntimeType::GetConstructors() */,
    11:$$[52]/* System.RuntimeTypeHandle System.Type::get_TypeHandle() */
},

// 20: System.IAsyncResult
{
    f: 1
},

// 21: System.Threading.Lock
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 22: System.RuntimeTypeHandle
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 23: System.OverflowException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 24: System.IO.TextWriter
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Void System.IO.TextWriter::Write(System.String) */
},
null/* System.IO.TextWriter System.IO.TextWriter::<Null>k__BackingField */,

// 26: System.IO.TextWriter/NullTextWriter
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[79]/* System.Void System.IO.TextWriter/NullTextWriter::Write(System.String) */
},

// 27: System.NativeObject
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 28: System.NativeDate
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 29: System.AttributeTargets
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
32767/* System.AttributeTargets System.AttributeTargets::All */,
1/* System.AttributeTargets System.AttributeTargets::Assembly */,
4/* System.AttributeTargets System.AttributeTargets::Class */,
32/* System.AttributeTargets System.AttributeTargets::Constructor */,
4096/* System.AttributeTargets System.AttributeTargets::Delegate */,
16/* System.AttributeTargets System.AttributeTargets::Enum */,
512/* System.AttributeTargets System.AttributeTargets::Event */,
256/* System.AttributeTargets System.AttributeTargets::Field */,
16384/* System.AttributeTargets System.AttributeTargets::GenericParameter */,
1024/* System.AttributeTargets System.AttributeTargets::Interface */,
64/* System.AttributeTargets System.AttributeTargets::Method */,
2/* System.AttributeTargets System.AttributeTargets::Module */,
2048/* System.AttributeTargets System.AttributeTargets::Parameter */,
128/* System.AttributeTargets System.AttributeTargets::Property */,
8192/* System.AttributeTargets System.AttributeTargets::ReturnValue */,
8/* System.AttributeTargets System.AttributeTargets::Struct */,

// 46: System.Runtime.CompilerServices.CLRConjugateAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 47: System.Runtime.CompilerServices.CorlibCLRConjugateAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 48: System.Diagnostics.ObjectDebugger
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.String System.Diagnostics.ObjectDebugger::DebugFullNameKey */,
null/* System.String System.Diagnostics.ObjectDebugger::DebugFieldsKey */,
null/* System.String System.Diagnostics.ObjectDebugger::DebugBaseKey */,
null/* System.Runtime.XaeiOSObject System.Diagnostics.ObjectDebugger::_object */,

// 53: System.Diagnostics.ObjectDebugger/IntRef
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 54: System.Reflection.ReflectionHelpers
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.NativeArray`1<System.Runtime.Assembly> System.Reflection.ReflectionHelpers::_runtimeAssemblies */,
null/* System.Collections.Generic.Dictionary`2<System.Runtime.Class,System.Reflection.RuntimeType> System.Reflection.ReflectionHelpers::_runtimeTypeCache */,

// 57: System.NativeFunction
{
    f: 0,
    0:$$[108]/* System.String System.NativeFunction::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 58: System.NativeArray`1
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 59: System.NativeArray
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 60: System.Array
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 61: System.Reflection.PropertyInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */,
    7:null/* System.Reflection.MethodInfo System.Reflection.PropertyInfo::get_GetMethod() */,
    8:null/* System.Reflection.MethodInfo System.Reflection.PropertyInfo::get_SetMethod() */
},

// 62: System.Reflection.RuntimePropertyInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[114]/* System.Type System.Reflection.RuntimePropertyInfo::get_DeclaringType() */,
    5:$$[117]/* System.String System.Reflection.RuntimePropertyInfo::get_Name() */,
    6:$$[118]/* System.Boolean System.Reflection.RuntimePropertyInfo::IsDefined(System.Type,System.Boolean) */,
    7:$$[115]/* System.Reflection.MethodInfo System.Reflection.RuntimePropertyInfo::get_GetMethod() */,
    8:$$[116]/* System.Reflection.MethodInfo System.Reflection.RuntimePropertyInfo::get_SetMethod() */
},

// 63: System.Activator
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 64: System.Reflection.MethodBase
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */,
    7:null/* System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[]) */
},

// 65: System.Collections.IList
{
    f: 1,
    0:null/* System.Object System.Collections.IList::get_Item(System.Int32) */,
    1:null/* System.Void System.Collections.IList::set_Item(System.Int32,System.Object) */,
    2:null/* System.Void System.Collections.IList::Add(System.Object) */,
    3:null/* System.Void System.Collections.IList::Clear() */,
    4:null/* System.Int32 System.Collections.IList::get_Count() */
},

// 66: System.Collections.IEnumerable
{
    f: 1,
    0:null/* System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator() */
},

// 67: System.Collections.Generic.IEnumerable`1
{
    f: 1,
    0:null/* System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable`1::GetEnumerator() */
},

// 68: System.Collections.Generic.ICollection`1
{
    f: 1,
    0:null/* System.Int32 System.Collections.Generic.ICollection`1::get_Count() */,
    1:null/* System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly() */,
    2:null/* System.Void System.Collections.Generic.ICollection`1::Add(T) */,
    3:null/* System.Boolean System.Collections.Generic.ICollection`1::Contains(T) */,
    4:null/* System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32) */,
    5:null/* System.Boolean System.Collections.Generic.ICollection`1::Remove(T) */
},

// 69: System.Global
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 70: System.RuntimeMethodHandle
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 71: System.Math
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 72: System.Double
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 73: System.IDisposable
{
    f: 1,
    0:null/* System.Void System.IDisposable::Dispose() */
},

// 74: System.Threading.Semaphore
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 75: System.Threading.Semaphore/WaitingTask
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 76: System.Threading.WaitCallback
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.Threading.WaitCallback::Invoke(System.Object) */,
    8:$$[-1]/* System.IAsyncResult System.Threading.WaitCallback::BeginInvoke(System.Object,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.Threading.WaitCallback::EndInvoke(System.IAsyncResult) */
},

// 77: System.Reflection.ConstructorInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */,
    7:null/* System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[]) */
},

// 78: System.Reflection.RuntimeConstructorInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[130]/* System.Type System.Reflection.RuntimeConstructorInfo::get_DeclaringType() */,
    5:$$[131]/* System.String System.Reflection.RuntimeConstructorInfo::get_Name() */,
    6:$$[133]/* System.Boolean System.Reflection.RuntimeConstructorInfo::IsDefined(System.Type,System.Boolean) */,
    7:$$[132]/* System.Object System.Reflection.RuntimeConstructorInfo::Invoke(System.Object,System.Object[]) */
},

// 79: System.Collections.IEnumerator
{
    f: 1,
    0:null/* System.Object System.Collections.IEnumerator::get_Current() */,
    1:null/* System.Boolean System.Collections.IEnumerator::MoveNext() */,
    2:null/* System.Void System.Collections.IEnumerator::Reset() */
},

// 80: System.Collections.Generic.IEnumerator`1
{
    f: 1,
    i:
    {
  79      :// Interface map: System.Collections.IEnumerator
        {
   0         :$$[-1]/* get_Current -> T System.Collections.Generic.IEnumerator`1::get_Current() */
        }
    },
    0:null/* T System.Collections.Generic.IEnumerator`1::get_Current() */
},

// 81: System.Threading.Thread
{
    f: 0,
    0:$$[157]/* System.String System.Threading.Thread::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Int32 System.Threading.Thread::_idCounter */,

// 83: System.Threading.ThreadCallback
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.Threading.ThreadCallback::Invoke() */,
    8:$$[-1]/* System.IAsyncResult System.Threading.ThreadCallback::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.Threading.ThreadCallback::EndInvoke(System.IAsyncResult) */
},

// 84: System.Threading.ThreadStart
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.Threading.ThreadStart::Invoke() */,
    8:$$[-1]/* System.IAsyncResult System.Threading.ThreadStart::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.Threading.ThreadStart::EndInvoke(System.IAsyncResult) */
},

// 85: System.Threading.ParametizedThreadStart
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.Threading.ParametizedThreadStart::Invoke(System.Object) */,
    8:$$[-1]/* System.IAsyncResult System.Threading.ParametizedThreadStart::BeginInvoke(System.Object,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.Threading.ParametizedThreadStart::EndInvoke(System.IAsyncResult) */
},

// 86: System.Threading.ThreadPriority
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
1/* System.Threading.ThreadPriority System.Threading.ThreadPriority::Background */,
2/* System.Threading.ThreadPriority System.Threading.ThreadPriority::Low */,
3/* System.Threading.ThreadPriority System.Threading.ThreadPriority::Normal */,
4/* System.Threading.ThreadPriority System.Threading.ThreadPriority::High */,
5/* System.Threading.ThreadPriority System.Threading.ThreadPriority::Realtime */,

// 92: System.SystemException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 93: System.NativeNumber
{
    f: 0,
    0:$$[173]/* System.String System.NativeNumber::ToString() */,
    1:$$[172]/* System.Int32 System.NativeNumber::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 94: System.NullReferenceException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 95: System.Runtime.InteropServices.IntrinsicAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 96: System.Reflection.MethodInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Type System.Reflection.MemberInfo::get_DeclaringType() */,
    5:null/* System.String System.Reflection.MemberInfo::get_Name() */,
    6:null/* System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean) */,
    7:null/* System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[]) */
},

// 97: System.ICloneable
{
    f: 1,
    0:null/* System.Object System.ICloneable::Clone() */
},

// 98: System.Runtime.ICustomAttributeProvider
{
    f: 1,
    0:null/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.ICustomAttributeProvider::get_CustomAttributes() */
},

// 99: System.Runtime.Class
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[209]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Class::get_CustomAttributes() */
        }
    },
    0:$$[210]/* System.String System.Runtime.Class::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[209]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Class::get_CustomAttributes() */
},

// 100: System.AsyncCallback
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.AsyncCallback::Invoke(System.IAsyncResult) */,
    8:$$[-1]/* System.IAsyncResult System.AsyncCallback::BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.AsyncCallback::EndInvoke(System.IAsyncResult) */
},

// 101: System.Threading.ThreadManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Threading.ThreadManager/ThreadsByTask System.Threading.ThreadManager::_threadsByTask */,

// 103: System.Threading.ThreadManager/ThreadsByTask
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 104: System.SByte
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.SByte System.SByte::MinValue */,
null/* System.SByte System.SByte::MaxValue */,

// 107: System.AttributeUsageAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.AttributeUsageAttribute System.AttributeUsageAttribute::Default */,

// 109: System.Runtime.VTable
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 110: System.Runtime.VTableFlags
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* System.Runtime.VTableFlags System.Runtime.VTableFlags::None */,
1/* System.Runtime.VTableFlags System.Runtime.VTableFlags::IsInterface */,

// 113: System.Runtime.VTableDebugInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 114: System.Runtime.MethodBase
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[238]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
        }
    },
    0:$$[239]/* System.String System.Runtime.MethodBase::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[238]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
},

// 115: System.Runtime.Constructor
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[238]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
        }
    },
    0:$$[239]/* System.String System.Runtime.MethodBase::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[238]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
},

// 116: System.Runtime.Parameter
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 117: System.var
{
    f: 0,
    0:$$[243]/* System.String System.var::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 118: System.String
{
    f: 0,
    0:$$[248]/* System.String System.String::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.String System.String::Empty */,

// 120: System.Single
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Single System.Single::MaxValue */,
null/* System.Single System.Single::MinValue */,

// 123: System.NotImplementedException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 124: System.Int16
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Int16 System.Int16::MinValue */,
null/* System.Int16 System.Int16::MaxValue */,

// 127: System.InvalidOperationException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 128: System.Resources.ResourceManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Collections.Generic.Dictionary`2<System.Int32,System.NativeArray`1<System.IDisposable>> System.Resources.ResourceManager::_resourceMap */,

// 130: XaeiOS.Boot.BootMethod
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 131: System.Threading.ManualResetEvent
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 132: System.Runtime.Property
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[284]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Property::get_CustomAttributes() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[284]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Property::get_CustomAttributes() */
},

// 133: System.ArgumentException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 134: System.ArgumentOutOfRangeException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 135: System.Collections.Generic.KeyValuePair`2
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 136: System.Runtime.CompilerServices.RequiredAttributeAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 137: System.Runtime.CustomAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 138: System.Diagnostics.Debug
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 139: System.Console
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 140: System.UInt16
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.UInt16 System.UInt16::MaxValue */,
null/* System.UInt16 System.UInt16::MinValue */,

// 143: System.RuntimeFieldHandle
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 144: System.NotSupportedException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 145: System.InvalidCastException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 146: System.EventArgs
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.EventArgs System.EventArgs::Empty */,

// 148: System.Decimal
{
    f: 0,
    0:$$[310]/* System.String System.Decimal::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 149: System.Byte
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Byte System.Byte::MinValue */,
null/* System.Byte System.Byte::MaxValue */,

// 152: System.Runtime.CompilerServices.MethodImplAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 153: System.Runtime.CompilerServices.XaeiOSMethodImplAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 154: System.Reflection.DefaultMemberAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 155: System.Runtime.Method
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[238]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
        }
    },
    0:$$[239]/* System.String System.Runtime.MethodBase::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[238]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.MethodBase::get_CustomAttributes() */
},

// 156: System.Collections.ICollection
{
    f: 1,
    0:null/* System.Int32 System.Collections.ICollection::get_Count() */,
    1:null/* System.Boolean System.Collections.ICollection::get_IsSynchronized() */,
    2:null/* System.Object System.Collections.ICollection::get_SyncRoot() */,
    3:null/* System.Void System.Collections.ICollection::CopyTo(System.Array,System.Int32) */
},

// 157: System.FlagsAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 158: System.Runtime.CompilerServices.MethodImplOptions
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
4096/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::SystemCall */,
65536/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::CompilerImpl */,
1048576/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::NonPreemptive */,
16777216/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::CriticalSection */,
256/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::Inline */,
8/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::NoInlining */,
32/* System.Runtime.CompilerServices.MethodImplOptions System.Runtime.CompilerServices.MethodImplOptions::Synchronized */,

// 166: XaeiOS.Process.ImageFormat.ObjectImage
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 167: System.ExecutionEngineException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 168: System.Collections.Generic.IDictionary`2
{
    f: 1,
    0:null/* System.Int32 System.Collections.Generic.IDictionary`2::get_Count() */,
    1:null/* V System.Collections.Generic.IDictionary`2::get_Item(K) */,
    2:null/* System.Void System.Collections.Generic.IDictionary`2::set_Item(K,V) */,
    3:null/* System.Collections.Generic.ICollection`1<K> System.Collections.Generic.IDictionary`2::get_Keys() */,
    4:null/* System.Boolean System.Collections.Generic.IDictionary`2::ContainsKey(K) */,
    5:null/* System.Boolean System.Collections.Generic.IDictionary`2::ContainsValue(V) */,
    6:null/* System.Boolean System.Collections.Generic.IDictionary`2::Remove(K) */,
    7:null/* System.Void System.Collections.Generic.IDictionary`2::Clear() */
},

// 169: System.Collections.Generic.Dictionary`2
{
    f: 0,
    i:
    {
  168      :// Interface map: System.Collections.Generic.IDictionary`2
        {
   0         :$$[328]/* get_Count -> System.Int32 System.Collections.Generic.Dictionary`2::get_Count() */,
   1         :$$[329]/* get_Item -> V System.Collections.Generic.Dictionary`2::get_Item(K) */,
   2         :$$[330]/* set_Item -> System.Void System.Collections.Generic.Dictionary`2::set_Item(K,V) */,
   3         :$$[331]/* get_Keys -> System.Collections.Generic.ICollection`1<K> System.Collections.Generic.Dictionary`2::get_Keys() */,
   4         :$$[332]/* ContainsKey -> System.Boolean System.Collections.Generic.Dictionary`2::ContainsKey(K) */,
   5         :$$[333]/* ContainsValue -> System.Boolean System.Collections.Generic.Dictionary`2::ContainsValue(V) */,
   6         :$$[334]/* Remove -> System.Boolean System.Collections.Generic.Dictionary`2::Remove(K) */,
   7         :$$[335]/* Clear -> System.Void System.Collections.Generic.Dictionary`2::Clear() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[328]/* System.Int32 System.Collections.Generic.Dictionary`2::get_Count() */,
    5:$$[329]/* V System.Collections.Generic.Dictionary`2::get_Item(K) */,
    6:$$[330]/* System.Void System.Collections.Generic.Dictionary`2::set_Item(K,V) */,
    7:$$[331]/* System.Collections.Generic.ICollection`1<K> System.Collections.Generic.Dictionary`2::get_Keys() */,
    8:$$[332]/* System.Boolean System.Collections.Generic.Dictionary`2::ContainsKey(K) */,
    9:$$[333]/* System.Boolean System.Collections.Generic.Dictionary`2::ContainsValue(V) */,
    10:$$[334]/* System.Boolean System.Collections.Generic.Dictionary`2::Remove(K) */,
    11:$$[335]/* System.Void System.Collections.Generic.Dictionary`2::Clear() */
},

// 170: XaeiOS.OSCorlib
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Boolean XaeiOS.OSCorlib::_initialized */,
null/* System.Boolean XaeiOS.OSCorlib::_initializing */,

// 173: System.IntPtr
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 174: System.UIntPtr
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 175: System.Boolean
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.String System.Boolean::FalseString */,
null/* System.String System.Boolean::TrueString */,

// 178: System.Runtime.InteropServices.ExposedCallbackDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void System.Runtime.InteropServices.ExposedCallbackDelegate::Invoke(System.Object) */,
    8:$$[-1]/* System.IAsyncResult System.Runtime.InteropServices.ExposedCallbackDelegate::BeginInvoke(System.Object,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.Runtime.InteropServices.ExposedCallbackDelegate::EndInvoke(System.IAsyncResult) */
},

// 179: System.Threading.Monitor
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 180: System.Threading.Monitor/MonitorLock
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 181: System.Threading.ThreadPool
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 182: System.Runtime.XaeiOSObject
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 183: System.Runtime.Assembly
{
    f: 0,
    i:
    {
  98      :// Interface map: System.Runtime.ICustomAttributeProvider
        {
   0         :$$[354]/* get_CustomAttributes -> System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Assembly::get_CustomAttributes() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[354]/* System.NativeArray`1<System.Runtime.CustomAttribute> System.Runtime.Assembly::get_CustomAttributes() */
},

// 184: System.Collections.Queue
{
    f: 0,
    i:
    {
  156      :// Interface map: System.Collections.ICollection
        {
   0         :$$[356]/* get_Count -> System.Int32 System.Collections.Queue::get_Count() */,
   1         :$$[357]/* get_IsSynchronized -> System.Boolean System.Collections.Queue::get_IsSynchronized() */,
   2         :$$[359]/* get_SyncRoot -> System.Object System.Collections.Queue::get_SyncRoot() */,
   3         :$$[364]/* CopyTo -> System.Void System.Collections.Queue::CopyTo(System.Array,System.Int32) */
        },
  97      :// Interface map: System.ICloneable
        {
   0         :$$[362]/* Clone -> System.Object System.Collections.Queue::Clone() */
        },
  66      :// Interface map: System.Collections.IEnumerable
        {
   0         :$$[367]/* GetEnumerator -> System.Collections.IEnumerator System.Collections.Queue::GetEnumerator() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[356]/* System.Int32 System.Collections.Queue::get_Count() */,
    5:$$[357]/* System.Boolean System.Collections.Queue::get_IsSynchronized() */,
    6:$$[359]/* System.Object System.Collections.Queue::get_SyncRoot() */,
    7:$$[361]/* System.Void System.Collections.Queue::Clear() */,
    8:$$[362]/* System.Object System.Collections.Queue::Clone() */,
    9:$$[363]/* System.Boolean System.Collections.Queue::Contains(System.Object) */,
    10:$$[364]/* System.Void System.Collections.Queue::CopyTo(System.Array,System.Int32) */,
    11:$$[365]/* System.Object System.Collections.Queue::Dequeue() */,
    12:$$[366]/* System.Void System.Collections.Queue::Enqueue(System.Object) */,
    13:$$[367]/* System.Collections.IEnumerator System.Collections.Queue::GetEnumerator() */,
    14:$$[368]/* System.Object System.Collections.Queue::Peek() */,
    15:$$[370]/* System.Object[] System.Collections.Queue::ToArray() */,
    16:$$[371]/* System.Void System.Collections.Queue::TrimToSize() */
},

// 185: System.Collections.Generic.IList`1
{
    f: 1,
    0:null/* T System.Collections.Generic.IList`1::get_Item(System.Int32) */,
    1:null/* System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T) */,
    2:null/* System.Void System.Collections.Generic.IList`1::Add(T) */,
    3:null/* System.Void System.Collections.Generic.IList`1::Clear() */,
    4:null/* System.Int32 System.Collections.Generic.IList`1::get_Count() */
},

// 186: System.Collections.Generic.List`1
{
    f: 0,
    i:
    {
  185      :// Interface map: System.Collections.Generic.IList`1
        {
   0         :$$[374]/* get_Item -> T System.Collections.Generic.List`1::get_Item(System.Int32) */,
   1         :$$[375]/* set_Item -> System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T) */,
   3         :$$[378]/* Clear -> System.Void System.Collections.Generic.List`1::Clear() */,
   2         :$$[379]/* Add -> System.Void System.Collections.Generic.List`1::Add(T) */,
   4         :$$[381]/* get_Count -> System.Int32 System.Collections.Generic.List`1::get_Count() */
        },
  67      :// Interface map: System.Collections.Generic.IEnumerable`1
        {
   0         :$$[382]/* GetEnumerator -> System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.List`1::GetEnumerator() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[374]/* T System.Collections.Generic.List`1::get_Item(System.Int32) */,
    5:$$[375]/* System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T) */,
    6:$$[376]/* System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32) */,
    7:$$[377]/* System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object) */,
    8:$$[378]/* System.Void System.Collections.Generic.List`1::Clear() */,
    9:$$[379]/* System.Void System.Collections.Generic.List`1::Add(T) */,
    10:$$[380]/* System.Void System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object) */,
    11:$$[381]/* System.Int32 System.Collections.Generic.List`1::get_Count() */,
    12:$$[382]/* System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.List`1::GetEnumerator() */,
    13:$$[383]/* System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator() */
},

// 187: System.Collections.Generic.List`1/Enumerator
{
    f: 0,
    i:
    {
  80      :// Interface map: System.Collections.Generic.IEnumerator`1
        {
   0         :$$[385]/* get_Current -> T System.Collections.Generic.List`1/Enumerator::get_Current() */
        },
  79      :// Interface map: System.Collections.IEnumerator
        {
   1         :$$[387]/* MoveNext -> System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext() */,
   2         :$$[388]/* Reset -> System.Void System.Collections.Generic.List`1/Enumerator::Reset() */
        },
  73      :// Interface map: System.IDisposable
        {
   0         :$$[389]/* Dispose -> System.Void System.Collections.Generic.List`1/Enumerator::Dispose() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[385]/* T System.Collections.Generic.List`1/Enumerator::get_Current() */,
    5:$$[386]/* System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current() */,
    6:$$[387]/* System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext() */,
    7:$$[388]/* System.Void System.Collections.Generic.List`1/Enumerator::Reset() */,
    8:$$[389]/* System.Void System.Collections.Generic.List`1/Enumerator::Dispose() */
},

// 188: System.Collections.ArrayList
{
    f: 0,
    i:
    {
  185      :// Interface map: System.Collections.Generic.IList`1
        {
   0         :$$[374]/* get_Item -> T System.Collections.Generic.List`1::get_Item(System.Int32) */,
   1         :$$[375]/* set_Item -> System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T) */,
   3         :$$[378]/* Clear -> System.Void System.Collections.Generic.List`1::Clear() */,
   2         :$$[379]/* Add -> System.Void System.Collections.Generic.List`1::Add(T) */,
   4         :$$[381]/* get_Count -> System.Int32 System.Collections.Generic.List`1::get_Count() */
        },
  67      :// Interface map: System.Collections.Generic.IEnumerable`1
        {
   0         :$$[382]/* GetEnumerator -> System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.List`1::GetEnumerator() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[374]/* T System.Collections.Generic.List`1::get_Item(System.Int32) */,
    5:$$[375]/* System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T) */,
    6:$$[376]/* System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32) */,
    7:$$[377]/* System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object) */,
    8:$$[378]/* System.Void System.Collections.Generic.List`1::Clear() */,
    9:$$[379]/* System.Void System.Collections.Generic.List`1::Add(T) */,
    10:$$[380]/* System.Void System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object) */,
    11:$$[381]/* System.Int32 System.Collections.Generic.List`1::get_Count() */,
    12:$$[382]/* System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.List`1::GetEnumerator() */,
    13:$$[383]/* System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator() */
},

// 189: System.TypeCode
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
3/* System.TypeCode System.TypeCode::Boolean */,
6/* System.TypeCode System.TypeCode::Byte */,
4/* System.TypeCode System.TypeCode::Char */,
16/* System.TypeCode System.TypeCode::DateTime */,
2/* System.TypeCode System.TypeCode::DBNull */,
15/* System.TypeCode System.TypeCode::Decimal */,
14/* System.TypeCode System.TypeCode::Double */,
0/* System.TypeCode System.TypeCode::Empty */,
7/* System.TypeCode System.TypeCode::Int16 */,
9/* System.TypeCode System.TypeCode::Int32 */,
11/* System.TypeCode System.TypeCode::Int64 */,
1/* System.TypeCode System.TypeCode::Object */,
5/* System.TypeCode System.TypeCode::SByte */,
13/* System.TypeCode System.TypeCode::Single */,
18/* System.TypeCode System.TypeCode::String */,
8/* System.TypeCode System.TypeCode::UInt16 */,
10/* System.TypeCode System.TypeCode::UInt32 */,
12/* System.TypeCode System.TypeCode::UInt64 */,

// 208: System.Char
{
    f: 0,
    0:$$[392]/* System.String System.Char::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Char System.Char::MaxValue */,
null/* System.Char System.Char::MinValue */,

// 211: XaeiOS.Process.DynamicLinker
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Boolean XaeiOS.Process.DynamicLinker::_initialized */,
null/* System.Boolean XaeiOS.Process.DynamicLinker::_initializing */,
null/* System.String XaeiOS.Process.DynamicLinker::_osCorlibObjectImageData */,

// 215: XaeiOS.Boot.BootManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Boolean XaeiOS.Boot.BootManager::_booting */,
null/* System.Boolean XaeiOS.Boot.BootManager::_booted */,
null/* System.NativeFunction XaeiOS.Boot.BootManager::_initFunction */,

// 219: System.NativeVoidDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void System.NativeVoidDelegate::Invoke() */,
    8:$$[-1]/* System.IAsyncResult System.NativeVoidDelegate::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.NativeVoidDelegate::EndInvoke(System.IAsyncResult) */
},

// 220: System.VoidDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void System.VoidDelegate::Invoke() */,
    8:$$[-1]/* System.IAsyncResult System.VoidDelegate::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void System.VoidDelegate::EndInvoke(System.IAsyncResult) */
},

// 221: System.Int32
{
    f: 0,
    0:$$[403]/* System.String System.Int32::ToString() */,
    1:$$[404]/* System.Int32 System.Int32::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Int32 System.Int32::MaxValue */,
null/* System.Int32 System.Int32::MinValue */,

// 224: System.NativeError
{
    f: 0,
    0:$$[405]/* System.String System.NativeError::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 225: System.Diagnostics.Logging
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 226: System.Runtime.InteropServices.NativeDelegateAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 227: System.Runtime.CompilerServices.RuntimeHelpers
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.String System.Runtime.CompilerServices.RuntimeHelpers::DataSegmentName */,
null/* System.String System.Runtime.CompilerServices.RuntimeHelpers::VTableFieldName */,
null/* System.Collections.Generic.Dictionary`2<System.Runtime.Class,System.Runtime.Class> System.Runtime.CompilerServices.RuntimeHelpers::_arrayTypeCache */,
null/* System.Int32 System.Runtime.CompilerServices.RuntimeHelpers::_hashCodeCounter */,

// 232: System.IO.Stream
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 233: XaeiOS.TaskHandle
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 234: System.Threading.Condition
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 235: System.Threading.TimedCondition
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 236: System.Threading.ConditionTimedOutException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 237: System.Int64
{
    f: 0,
    0:$$[435]/* System.String System.Int64::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Int64 System.Int64::MaxValue */,
null/* System.Int64 System.Int64::MinValue */,

// 240: System.WeakReference
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 241: System.Runtime.CompilerServices.CompilerGeneratedAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 242: System.Reflection.RuntimeMethodInfo
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[440]/* System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType() */,
    5:$$[441]/* System.String System.Reflection.RuntimeMethodInfo::get_Name() */,
    6:$$[443]/* System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean) */,
    7:$$[442]/* System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Object[]) */
},

// 243: System.UInt32
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.UInt32 System.UInt32::MinValue */,
null/* System.UInt32 System.UInt32::MaxValue */,

// 246: XaeiOS.TaskCallback
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.TaskCallback::Invoke(XaeiOS.TaskHandle,System.String,System.var,XaeiOS.TaskExitStatus) */,
    8:$$[-1]/* System.IAsyncResult XaeiOS.TaskCallback::BeginInvoke(XaeiOS.TaskHandle,System.String,System.var,XaeiOS.TaskExitStatus,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void XaeiOS.TaskCallback::EndInvoke(System.IAsyncResult) */
},

// 247: XaeiOS.TaskFunction
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.TaskFunction::Invoke() */,
    8:$$[-1]/* System.IAsyncResult XaeiOS.TaskFunction::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void XaeiOS.TaskFunction::EndInvoke(System.IAsyncResult) */
},

// 248: XaeiOS.TaskPriority
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
1/* XaeiOS.TaskPriority XaeiOS.TaskPriority::Background */,
2/* XaeiOS.TaskPriority XaeiOS.TaskPriority::Low */,
3/* XaeiOS.TaskPriority XaeiOS.TaskPriority::Normal */,
4/* XaeiOS.TaskPriority XaeiOS.TaskPriority::High */,
5/* XaeiOS.TaskPriority XaeiOS.TaskPriority::Realtime */,

// 254: XaeiOS.TaskExitStatus
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* XaeiOS.TaskExitStatus XaeiOS.TaskExitStatus::Normal */,
1/* XaeiOS.TaskExitStatus XaeiOS.TaskExitStatus::UnhandledException */,
2/* XaeiOS.TaskExitStatus XaeiOS.TaskExitStatus::Killed */,
3/* XaeiOS.TaskExitStatus XaeiOS.TaskExitStatus::CriticalError */,

// 259: System.CLSCompliantAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 260: System.Threading.ThreadAbortException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 261: System.Security.IPermission
{
    f: 1,
    0:null/* System.Security.IPermission System.Security.IPermission::Copy() */,
    1:null/* System.Void System.Security.IPermission::Demand() */,
    2:null/* System.Security.IPermission System.Security.IPermission::Intersect(System.Security.IPermission) */,
    3:null/* System.Boolean System.Security.IPermission::IsSubsetOf(System.Security.IPermission) */,
    4:null/* System.Security.IPermission System.Security.IPermission::Union(System.Security.IPermission) */
},

// 262: System.Security.Principal.IPrincipal
{
    f: 1,
    0:null/* System.Security.Principal.IIdentity System.Security.Principal.IPrincipal::get_Identity() */,
    1:null/* System.Boolean System.Security.Principal.IPrincipal::IsInRole(System.String) */
},

// 263: System.Security.Principal.IIdentity
{
    f: 1,
    0:null/* System.String System.Security.Principal.IIdentity::get_AuthenticationType() */,
    1:null/* System.Boolean System.Security.Principal.IIdentity::get_IsAuthenticated() */,
    2:null/* System.String System.Security.Principal.IIdentity::get_Name() */
},

// 264: XaeiOS.Security.ExternalIdentity
{
    f: 0,
    i:
    {
  263      :// Interface map: System.Security.Principal.IIdentity
        {
   0         :$$[450]/* get_AuthenticationType -> System.String XaeiOS.Security.ExternalIdentity::get_AuthenticationType() */,
   1         :$$[451]/* get_IsAuthenticated -> System.Boolean XaeiOS.Security.ExternalIdentity::get_IsAuthenticated() */,
   2         :$$[452]/* get_Name -> System.String XaeiOS.Security.ExternalIdentity::get_Name() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[450]/* System.String XaeiOS.Security.ExternalIdentity::get_AuthenticationType() */,
    5:$$[451]/* System.Boolean XaeiOS.Security.ExternalIdentity::get_IsAuthenticated() */,
    6:$$[452]/* System.String XaeiOS.Security.ExternalIdentity::get_Name() */
},

// 265: XaeiOS.Security.ExternalPrincipal
{
    f: 0,
    i:
    {
  262      :// Interface map: System.Security.Principal.IPrincipal
        {
   0         :$$[454]/* get_Identity -> System.Security.Principal.IIdentity XaeiOS.Security.ExternalPrincipal::get_Identity() */,
   1         :$$[456]/* IsInRole -> System.Boolean XaeiOS.Security.ExternalPrincipal::IsInRole(System.String) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[454]/* System.Security.Principal.IIdentity XaeiOS.Security.ExternalPrincipal::get_Identity() */,
    5:$$[456]/* System.Boolean XaeiOS.Security.ExternalPrincipal::IsInRole(System.String) */
},

// 266: System.Security.SecurityException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 267: XaeiOS.DataStructures.DoublyLinkedList`1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 268: XaeiOS.DataStructures.DoublyLinkedListItem`1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 269: XaeiOS.SIPState
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* XaeiOS.SIPState XaeiOS.SIPState::NotStarted */,
1/* XaeiOS.SIPState XaeiOS.SIPState::Running */,
2/* XaeiOS.SIPState XaeiOS.SIPState::Exiting */,
3/* XaeiOS.SIPState XaeiOS.SIPState::Exited */,

// 274: XaeiOS.SIPManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Collections.Generic.Dictionary`2<System.Int32,XaeiOS.SIP> XaeiOS.SIPManager::_sips */,
null/* System.Int32 XaeiOS.SIPManager::_pidCounter */,

// 277: XaeiOS.SIP
{
    f: 0,
    0:$$[504]/* System.String XaeiOS.SIP::ToString() */,
    1:$$[503]/* System.Int32 XaeiOS.SIP::GetHashCode() */,
    2:$$[505]/* System.Boolean XaeiOS.SIP::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 278: XaeiOS.SIP/ConsoleTextWriter
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[522]/* System.Void XaeiOS.SIP/ConsoleTextWriter::Write(System.String) */
},

// 279: XaeiOS.Process.SignalDaemon
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* XaeiOS.SIP XaeiOS.Process.SignalDaemon::_signalDaemonProcess */,
null/* System.Threading.ManualResetEvent XaeiOS.Process.SignalDaemon::_exitLoop */,
null/* System.Threading.ThreadStart XaeiOS.Process.SignalDaemon::CS$<>9__CachedAnonymousMethodDelegate1 */,

// 283: XaeiOS.Process.SignalHandler
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void XaeiOS.Process.SignalHandler::Invoke(XaeiOS.Process.Signal,System.Int32) */,
    8:$$[-1]/* System.IAsyncResult XaeiOS.Process.SignalHandler::BeginInvoke(XaeiOS.Process.Signal,System.Int32,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void XaeiOS.Process.SignalHandler::EndInvoke(System.IAsyncResult) */
},

// 284: XaeiOS.Process.CustomSignalHandler
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Void XaeiOS.Process.CustomSignalHandler::Invoke(System.Int32) */,
    8:$$[-1]/* System.IAsyncResult XaeiOS.Process.CustomSignalHandler::BeginInvoke(System.Int32,System.AsyncCallback,System.Object) */,
    9:$$[-1]/* System.Void XaeiOS.Process.CustomSignalHandler::EndInvoke(System.IAsyncResult) */
},

// 285: XaeiOS.Process.Signal
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
3/* XaeiOS.Process.Signal XaeiOS.Process.Signal::Quit */,
9/* XaeiOS.Process.Signal XaeiOS.Process.Signal::Kill */,
16/* XaeiOS.Process.Signal XaeiOS.Process.Signal::Custom */,

// 289: XaeiOS.Process.SignalPermission
{
    f: 0,
    i:
    {
  261      :// Interface map: System.Security.IPermission
        {
   0         :$$[528]/* Copy -> System.Security.IPermission XaeiOS.Process.SignalPermission::Copy() */,
   1         :$$[529]/* Demand -> System.Void XaeiOS.Process.SignalPermission::Demand() */,
   2         :$$[530]/* Intersect -> System.Security.IPermission XaeiOS.Process.SignalPermission::Intersect(System.Security.IPermission) */,
   3         :$$[531]/* IsSubsetOf -> System.Boolean XaeiOS.Process.SignalPermission::IsSubsetOf(System.Security.IPermission) */,
   4         :$$[532]/* Union -> System.Security.IPermission XaeiOS.Process.SignalPermission::Union(System.Security.IPermission) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[528]/* System.Security.IPermission XaeiOS.Process.SignalPermission::Copy() */,
    5:$$[529]/* System.Void XaeiOS.Process.SignalPermission::Demand() */,
    6:$$[530]/* System.Security.IPermission XaeiOS.Process.SignalPermission::Intersect(System.Security.IPermission) */,
    7:$$[531]/* System.Boolean XaeiOS.Process.SignalPermission::IsSubsetOf(System.Security.IPermission) */,
    8:$$[532]/* System.Security.IPermission XaeiOS.Process.SignalPermission::Union(System.Security.IPermission) */
},

// 290: XaeiOS.Security.ManifestPrincipal
{
    f: 0,
    i:
    {
  262      :// Interface map: System.Security.Principal.IPrincipal
        {
   0         :$$[536]/* get_Identity -> System.Security.Principal.IIdentity XaeiOS.Security.ManifestPrincipal::get_Identity() */,
   1         :$$[538]/* IsInRole -> System.Boolean XaeiOS.Security.ManifestPrincipal::IsInRole(System.String) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[536]/* System.Security.Principal.IIdentity XaeiOS.Security.ManifestPrincipal::get_Identity() */,
    5:$$[538]/* System.Boolean XaeiOS.Security.ManifestPrincipal::IsInRole(System.String) */
},

// 291: XaeiOS.Security.RootIdentity
{
    f: 0,
    i:
    {
  263      :// Interface map: System.Security.Principal.IIdentity
        {
   0         :$$[540]/* get_AuthenticationType -> System.String XaeiOS.Security.RootIdentity::get_AuthenticationType() */,
   1         :$$[541]/* get_IsAuthenticated -> System.Boolean XaeiOS.Security.RootIdentity::get_IsAuthenticated() */,
   2         :$$[542]/* get_Name -> System.String XaeiOS.Security.RootIdentity::get_Name() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[540]/* System.String XaeiOS.Security.RootIdentity::get_AuthenticationType() */,
    5:$$[541]/* System.Boolean XaeiOS.Security.RootIdentity::get_IsAuthenticated() */,
    6:$$[542]/* System.String XaeiOS.Security.RootIdentity::get_Name() */
},

// 292: XaeiOS.Security.RootPrincipal
{
    f: 0,
    i:
    {
  262      :// Interface map: System.Security.Principal.IPrincipal
        {
   0         :$$[544]/* get_Identity -> System.Security.Principal.IIdentity XaeiOS.Security.RootPrincipal::get_Identity() */,
   1         :$$[546]/* IsInRole -> System.Boolean XaeiOS.Security.RootPrincipal::IsInRole(System.String) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[544]/* System.Security.Principal.IIdentity XaeiOS.Security.RootPrincipal::get_Identity() */,
    5:$$[546]/* System.Boolean XaeiOS.Security.RootPrincipal::IsInRole(System.String) */
},

// 293: XaeiOS.Boot.BootManager/<>c__DisplayClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 294: XaeiOS.SIP/<>c__DisplayClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 295: XaeiOS.Process.SignalDaemon/<>c__DisplayClass3
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 296: XaeiOS.Process.SignalDaemon/<>c__DisplayClass6
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
// 297: XaeiOS.Kernel.TaskPriorityQueue
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.NativeArray`1<XaeiOS.Kernel.Task> XaeiOS.Kernel.TaskPriorityQueue::_heap */,
null/* System.Int32 XaeiOS.Kernel.TaskPriorityQueue::_count */,

// 300: XaeiOS.Kernel.Scheduler
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Int64 XaeiOS.Kernel.Scheduler::MinTimeSlice */,
null/* System.Int64 XaeiOS.Kernel.Scheduler::MaxTimeSlice */,
null/* System.Int64 XaeiOS.Kernel.Scheduler::StartingMaxTimeSlice */,
null/* System.Int64 XaeiOS.Kernel.Scheduler::MaxRealTimeSlice */,
null/* System.Int64 XaeiOS.Kernel.Scheduler::CycleAgainThreshold */,
null/* System.Int64 XaeiOS.Kernel.Scheduler::OptimisticStackRebuildingThreshold */,
null/* XaeiOS.Kernel.Task XaeiOS.Kernel.Scheduler::_externalTask */,
null/* XaeiOS.Kernel.Task XaeiOS.Kernel.Scheduler::_kernelTask */,
null/* XaeiOS.Kernel.Task XaeiOS.Kernel.Scheduler::_currentTask */,
null/* System.Boolean XaeiOS.Kernel.Scheduler::_awaitingTask */,
null/* System.var XaeiOS.Kernel.Scheduler::_cpuIntervalId */,
null/* System.NativeObject XaeiOS.Kernel.Scheduler::_taskStatusMap */,
null/* System.Boolean XaeiOS.Kernel.Scheduler::_inCriticalSection */,

// 314: XaeiOS.Kernel.Scheduler/ScheduleTaskDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.Kernel.Scheduler/ScheduleTaskDelegate::Invoke(XaeiOS.Kernel.Task) */,
    8:$$[555]/* System.IAsyncResult XaeiOS.Kernel.Scheduler/ScheduleTaskDelegate::BeginInvoke(XaeiOS.Kernel.Task,System.AsyncCallback,System.Object) */,
    9:$$[555]/* System.Void XaeiOS.Kernel.Scheduler/ScheduleTaskDelegate::EndInvoke(System.IAsyncResult) */
},

// 315: XaeiOS.Kernel.Scheduler/HandleExceptionDelegate
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.Kernel.Scheduler/HandleExceptionDelegate::Invoke(XaeiOS.Kernel.Task,XaeiOS.Kernel.XaeiOSException) */,
    8:$$[555]/* System.IAsyncResult XaeiOS.Kernel.Scheduler/HandleExceptionDelegate::BeginInvoke(XaeiOS.Kernel.Task,XaeiOS.Kernel.XaeiOSException,System.AsyncCallback,System.Object) */,
    9:$$[555]/* System.Void XaeiOS.Kernel.Scheduler/HandleExceptionDelegate::EndInvoke(System.IAsyncResult) */
},

// 316: XaeiOS.Kernel.TaskStatus
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* XaeiOS.Kernel.TaskStatus XaeiOS.Kernel.TaskStatus::Running */,
1/* XaeiOS.Kernel.TaskStatus XaeiOS.Kernel.TaskStatus::Blocked */,
2/* XaeiOS.Kernel.TaskStatus XaeiOS.Kernel.TaskStatus::Killed */,
3/* XaeiOS.Kernel.TaskStatus XaeiOS.Kernel.TaskStatus::Scheduled */,

// 321: XaeiOS.SystemCalls
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 322: XaeiOS.SystemCallAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 323: XaeiOS.Kernel.XaeiOSException
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 324: XaeiOS.Kernel.Frame
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 325: XaeiOS.Kernel.OptimisticStackRebuildingContext
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 326: XaeiOS.Kernel.Task
{
    f: 0,
    0:$$[613]/* System.String XaeiOS.Kernel.Task::ToString() */,
    1:$$[612]/* System.Int32 XaeiOS.Kernel.Task::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.NativeObject XaeiOS.Kernel.Task::IdMap */,
null/* System.NativeObject XaeiOS.Kernel.Task::NameMap */,
null/* System.Int32 XaeiOS.Kernel.Task::_idCounter */,
null/* System.Int32 XaeiOS.Kernel.Task::_taskCount */,

// 331: XaeiOS.Kernel.TaskCallback
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.Kernel.TaskCallback::Invoke(System.Int32,System.String,System.var,XaeiOS.Kernel.TaskExitStatus) */,
    8:$$[555]/* System.IAsyncResult XaeiOS.Kernel.TaskCallback::BeginInvoke(System.Int32,System.String,System.var,XaeiOS.Kernel.TaskExitStatus,System.AsyncCallback,System.Object) */,
    9:$$[555]/* System.Void XaeiOS.Kernel.TaskCallback::EndInvoke(System.IAsyncResult) */
},

// 332: XaeiOS.Kernel.TaskFunction
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[25]/* System.Void XaeiOS.Kernel.TaskFunction::Invoke() */,
    8:$$[555]/* System.IAsyncResult XaeiOS.Kernel.TaskFunction::BeginInvoke(System.AsyncCallback,System.Object) */,
    9:$$[555]/* System.Void XaeiOS.Kernel.TaskFunction::EndInvoke(System.IAsyncResult) */
},

// 333: XaeiOS.Kernel.TaskExitStatus
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* XaeiOS.Kernel.TaskExitStatus XaeiOS.Kernel.TaskExitStatus::Normal */,
1/* XaeiOS.Kernel.TaskExitStatus XaeiOS.Kernel.TaskExitStatus::UnhandledException */,
2/* XaeiOS.Kernel.TaskExitStatus XaeiOS.Kernel.TaskExitStatus::Killed */,
3/* XaeiOS.Kernel.TaskExitStatus XaeiOS.Kernel.TaskExitStatus::CriticalError */,

// 338: XaeiOS.Kernel.TaskPriority
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
1/* XaeiOS.Kernel.TaskPriority XaeiOS.Kernel.TaskPriority::Background */,
2/* XaeiOS.Kernel.TaskPriority XaeiOS.Kernel.TaskPriority::Low */,
3/* XaeiOS.Kernel.TaskPriority XaeiOS.Kernel.TaskPriority::Normal */,
4/* XaeiOS.Kernel.TaskPriority XaeiOS.Kernel.TaskPriority::High */,
5/* XaeiOS.Kernel.TaskPriority XaeiOS.Kernel.TaskPriority::Realtime */,

// 344: XaeiOS.Kernel.Continuation
{
    f: 0,
    0:$$[82]/* System.String System.NativeObject::ToString() */,
    1:$$[83]/* System.Int32 System.NativeObject::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
// 345: System.Text.RegularExpressions.Regex
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 346: System.Text.StringBuilder
{
    f: 0,
    0:$$[627]/* System.String System.Text.StringBuilder::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
// 347: System.Browser.XmlHttpRequest.IXmlHttpRequest
{
    f: 1,
    0:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Abort() */,
    1:null/* System.String System.Browser.XmlHttpRequest.IXmlHttpRequest::GetAllResponseHeaders() */,
    2:null/* System.String System.Browser.XmlHttpRequest.IXmlHttpRequest::GetResponseHeader(System.String) */,
    3:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Open(System.String,System.String) */,
    4:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Open(System.String,System.String,System.Boolean) */,
    5:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Open(System.String,System.String,System.Boolean,System.String) */,
    6:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Open(System.String,System.String,System.Boolean,System.String,System.String) */,
    7:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::Send(System.String) */,
    8:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::SetRequestHeader(System.String,System.String) */,
    9:null/* System.String System.Browser.XmlHttpRequest.IXmlHttpRequest::get_ResponseText() */,
    10:null/* System.Int32 System.Browser.XmlHttpRequest.IXmlHttpRequest::get_Status() */,
    11:null/* System.String System.Browser.XmlHttpRequest.IXmlHttpRequest::get_StatusText() */,
    12:null/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.IXmlHttpRequest::get_ReadyState() */,
    13:null/* System.NativeFunction System.Browser.XmlHttpRequest.IXmlHttpRequest::get_OnReadyStateChange() */,
    14:null/* System.Void System.Browser.XmlHttpRequest.IXmlHttpRequest::set_OnReadyStateChange(System.NativeFunction) */
},

// 348: System.Browser.XmlHttpRequest.ReadyState
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.ReadyState::Uninitialized */,
1/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.ReadyState::Open */,
2/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.ReadyState::Sent */,
3/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.ReadyState::Receiving */,
4/* System.Browser.XmlHttpRequest.ReadyState System.Browser.XmlHttpRequest.ReadyState::Loaded */,

// 354: System.Browser.Css.IStyle
{
    f: 1,
    0:null/* System.String System.Browser.Css.IStyle::get_Left() */,
    1:null/* System.Void System.Browser.Css.IStyle::set_Left(System.String) */,
    2:null/* System.String System.Browser.Css.IStyle::get_Top() */,
    3:null/* System.Void System.Browser.Css.IStyle::set_Top(System.String) */,
    4:null/* System.String System.Browser.Css.IStyle::get_Width() */,
    5:null/* System.Void System.Browser.Css.IStyle::set_Width(System.String) */,
    6:null/* System.String System.Browser.Css.IStyle::get_Height() */,
    7:null/* System.Void System.Browser.Css.IStyle::set_Height(System.String) */,
    8:null/* System.String System.Browser.Css.IStyle::get_BackgroundColor() */,
    9:null/* System.Void System.Browser.Css.IStyle::set_BackgroundColor(System.String) */,
    10:null/* System.String System.Browser.Css.IStyle::get_Position() */,
    11:null/* System.Void System.Browser.Css.IStyle::set_Position(System.String) */,
    12:null/* System.String System.Browser.Css.IStyle::get_Opacity() */,
    13:null/* System.Void System.Browser.Css.IStyle::set_Opacity(System.String) */
},

// 355: System.Browser.XmlHttpRequest.XmlHttpRequestManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* XaeiOS.SIP System.Browser.XmlHttpRequest.XmlHttpRequestManager::_driverProcess */,
null/* System.Threading.ManualResetEvent System.Browser.XmlHttpRequest.XmlHttpRequestManager::_driverExit */,
null/* System.Int32 System.Browser.XmlHttpRequest.XmlHttpRequestManager::_customSignalIdCounter */,
null/* System.Collections.Generic.Dictionary`2<System.Int32,System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler> System.Browser.XmlHttpRequest.XmlHttpRequestManager::_onReadyStateChangeSignalHandlers */,
null/* System.Threading.ThreadStart System.Browser.XmlHttpRequest.XmlHttpRequestManager::CS$<>9__CachedAnonymousMethodDelegate1 */,

// 361: System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 362: System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 363: System.Browser.XmlHttpRequest.RequestMethod
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
0/* System.Browser.XmlHttpRequest.RequestMethod System.Browser.XmlHttpRequest.RequestMethod::Get */,
1/* System.Browser.XmlHttpRequest.RequestMethod System.Browser.XmlHttpRequest.RequestMethod::Post */,

// 366: System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 367: System.Browser.Dom.IDomNode
{
    f: 1,
    0:null/* System.Browser.Dom.IDomNode System.Browser.Dom.IDomNode::get_ParentNode() */,
    1:null/* System.Void System.Browser.Dom.IDomNode::RemoveChild(System.Browser.Dom.IDomNode) */,
    2:null/* System.Void System.Browser.Dom.IDomNode::AppendChild(System.Browser.Dom.IDomNode) */
},

// 368: System.Browser.Dom.DomManager
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 369: System.Browser.Dom.DomManager/DomElementResourceWrapper
{
    f: 0,
    i:
    {
  73      :// Interface map: System.IDisposable
        {
   0         :$$[650]/* Dispose -> System.Void System.Browser.Dom.DomManager/DomElementResourceWrapper::Dispose() */
        }
    },
    0:$$[651]/* System.String System.Browser.Dom.DomManager/DomElementResourceWrapper::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[650]/* System.Void System.Browser.Dom.DomManager/DomElementResourceWrapper::Dispose() */
},

// 370: System.Browser.Dom.IDomElement
{
    f: 1,
    0:null/* System.Browser.Css.IStyle System.Browser.Dom.IDomElement::get_Style() */,
    1:null/* System.String System.Browser.Dom.IDomElement::get_InnerHtml() */,
    2:null/* System.Void System.Browser.Dom.IDomElement::set_InnerHtml(System.String) */,
    3:null/* System.String System.Browser.Dom.IDomElement::GetAttribute(System.String) */,
    4:null/* System.String System.Browser.Dom.IDomElement::SetAttribute(System.String,System.String) */
},

// 371: System.Browser.XmlHttpRequest.XmlHttpRequest
{
    f: 0,
    0:$$[668]/* System.String System.Browser.XmlHttpRequest.XmlHttpRequest::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 372: System.Browser.Dom.IDomDocument
{
    f: 1,
    0:null/* System.Browser.Dom.IDomElement System.Browser.Dom.IDomDocument::CreateElement(System.String) */,
    1:null/* System.Browser.Dom.IDomElement System.Browser.Dom.IDomDocument::GetElementById(System.String) */
},
// 373: XaeiOS.ProcessViewer.ProcessViewer
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 374: XaeiOS.ProcessViewer.Program
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
// 375: XaeiOS.TestSuite.TestRunner
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Type[] XaeiOS.TestSuite.TestRunner::_testSuites */,
null/* System.Int32 XaeiOS.TestSuite.TestRunner::_passCount */,
null/* System.Collections.Generic.List`1<XaeiOS.TestSuite.ITest> XaeiOS.TestSuite.TestRunner::_failures */,
null/* System.Threading.ThreadStart XaeiOS.TestSuite.TestRunner::CS$<>9__CachedAnonymousMethodDelegate2 */,
null/* System.EventHandler XaeiOS.TestSuite.TestRunner::CS$<>9__CachedAnonymousMethodDelegate3 */,
null/* System.Threading.ThreadStart XaeiOS.TestSuite.TestRunner::CS$<>9__CachedAnonymousMethodDelegate6 */,
null/* System.EventHandler XaeiOS.TestSuite.TestRunner::CS$<>9__CachedAnonymousMethodDelegate7 */,

// 383: XaeiOS.TestSuite.AssertException
{
    f: 0,
    0:$$[16]/* System.String System.Exception::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[10]/* System.Exception System.Exception::GetBaseException() */,
    5:$$[11]/* System.String System.Exception::get_HelpLink() */,
    6:$$[12]/* System.Void System.Exception::set_HelpLink(System.String) */,
    7:$$[13]/* System.String System.Exception::get_Source() */,
    8:$$[14]/* System.Void System.Exception::set_Source(System.String) */,
    9:$$[15]/* System.String System.Exception::get_StackTrace() */
},

// 384: XaeiOS.TestSuite.ITest
{
    f: 1,
    0:null/* System.String XaeiOS.TestSuite.ITest::get_Name() */,
    1:null/* System.Boolean XaeiOS.TestSuite.ITest::get_Passed() */,
    2:null/* System.Exception XaeiOS.TestSuite.ITest::get_Exception() */,
    3:null/* System.Void XaeiOS.TestSuite.ITest::Test() */
},

// 385: XaeiOS.TestSuite.TestBase
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:null/* System.Void XaeiOS.TestSuite.TestBase::PerformTest() */
},

// 386: XaeiOS.TestSuite.Tests.XmlHttpRequestTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[708]/* System.Void XaeiOS.TestSuite.Tests.XmlHttpRequestTest::PerformTest() */
},

// 387: XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[710]/* System.Void XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest::PerformTest() */
},

// 388: XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[714]/* System.Void XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest::PerformTest() */
},

// 389: XaeiOS.TestSuite.Tests.ThreadSleepTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[716]/* System.Void XaeiOS.TestSuite.Tests.ThreadSleepTest::PerformTest() */
},

// 390: XaeiOS.TestSuite.Tests.AlertHelloWorldTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[718]/* System.Void XaeiOS.TestSuite.Tests.AlertHelloWorldTest::PerformTest() */
},

// 391: XaeiOS.TestSuite.Assert
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 392: XaeiOS.TestSuite.Tests.EventTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[731]/* System.Void XaeiOS.TestSuite.Tests.EventTest::PerformTest() */
},

// 393: XaeiOS.TestSuite.TestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 394: XaeiOS.TestSuite.Tests.CompilerBugsTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},
null/* System.Int32 XaeiOS.TestSuite.Tests.CompilerBugsTestSuite::Timeout */,

// 396: XaeiOS.TestSuite.Tests.CompilerFlowControlTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[762]/* System.Void XaeiOS.TestSuite.Tests.CompilerFlowControlTest::PerformTest() */
},

// 397: XaeiOS.TestSuite.Tests.MultiThreadingTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[765]/* System.Void XaeiOS.TestSuite.Tests.MultiThreadingTest::PerformTest() */
},

// 398: XaeiOS.TestSuite.Tests.ReflectionTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 399: XaeiOS.TestSuite.Tests.ReflectionTestSuite/ReflectionTestAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 400: XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 401: XaeiOS.TestSuite.Tests.NullReferenceExceptionTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[790]/* System.Void XaeiOS.TestSuite.Tests.NullReferenceExceptionTest::PerformTest() */
},

// 402: XaeiOS.TestSuite.Tests.SynchronizationTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[792]/* System.Void XaeiOS.TestSuite.Tests.SynchronizationTest::PerformTest() */
},

// 403: XaeiOS.TestSuite.Tests.DomTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[795]/* System.Void XaeiOS.TestSuite.Tests.DomTest::PerformTest() */
},

// 404: XaeiOS.TestSuite.Tests.ResourceTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[798]/* System.Void XaeiOS.TestSuite.Tests.ResourceTest::PerformTest() */
},

// 405: XaeiOS.TestSuite.Tests.DomElementResource
{
    f: 0,
    i:
    {
  73      :// Interface map: System.IDisposable
        {
   0         :$$[800]/* Dispose -> System.Void XaeiOS.TestSuite.Tests.DomElementResource::Dispose() */
        }
    },
    0:$$[801]/* System.String XaeiOS.TestSuite.Tests.DomElementResource::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[800]/* System.Void XaeiOS.TestSuite.Tests.DomElementResource::Dispose() */
},

// 406: XaeiOS.TestSuite.Tests.ClassStructureTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 407: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/IAdder
{
    f: 1,
    0:null/* System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/IAdder::AddTen(System.Int32) */
},

// 408: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase
{
    f: 0,
    i:
    {
  407      :// Interface map: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/IAdder
        {
   0         :$$[680]/* AddTen -> System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase::AddTen(System.Int32) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:null/* System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase::AddTen(System.Int32) */
},

// 409: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder
{
    f: 0,
    i:
    {
  407      :// Interface map: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/IAdder
        {
   0         :$$[807]/* AddTen -> System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder::AddTen(System.Int32) */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[807]/* System.Int32 XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder::AddTen(System.Int32) */
},

// 410: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Object XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1::property */,

// 412: XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.Object XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2::property */,

// 414: XaeiOS.TestSuite.TestAttribute
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 415: XaeiOS.TestSuite.Tests.MultiThreadingStressTest
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[695]/* get_Name -> System.String XaeiOS.TestSuite.TestBase::get_Name() */,
   1         :$$[696]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
   2         :$$[697]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
   3         :$$[698]/* Test -> System.Void XaeiOS.TestSuite.TestBase::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[695]/* System.String XaeiOS.TestSuite.TestBase::get_Name() */,
    5:$$[696]/* System.Boolean XaeiOS.TestSuite.TestBase::get_Passed() */,
    6:$$[697]/* System.Exception XaeiOS.TestSuite.TestBase::get_Exception() */,
    7:$$[698]/* System.Void XaeiOS.TestSuite.TestBase::Test() */,
    8:$$[814]/* System.Void XaeiOS.TestSuite.Tests.MultiThreadingStressTest::PerformTest() */
},

// 416: XaeiOS.TestSuite.QuickSortTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 417: XaeiOS.TestSuite.Comparison`1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[37]/* System.Object System.MulticastDelegate::Invoke(System.Object[]) */,
    5:$$[38]/* System.Object System.MulticastDelegate::InvokeNative(System.Object[]) */,
    6:$$[39]/* System.Void System.MulticastDelegate::InternalCombine(System.Delegate) */,
    7:$$[24]/* System.Int32 XaeiOS.TestSuite.Comparison`1::Invoke(T,T) */,
    8:$$[680]/* System.IAsyncResult XaeiOS.TestSuite.Comparison`1::BeginInvoke(T,T,System.AsyncCallback,System.Object) */,
    9:$$[680]/* System.Int32 XaeiOS.TestSuite.Comparison`1::EndInvoke(System.IAsyncResult) */
},

// 418: XaeiOS.TestSuite.Tests.ThreadingTestSuite
{
    f: 0,
    i:
    {
  384      :// Interface map: XaeiOS.TestSuite.ITest
        {
   0         :$$[743]/* get_Name -> System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
   1         :$$[745]/* get_Passed -> System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
   2         :$$[747]/* get_Exception -> System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
   3         :$$[749]/* Test -> System.Void XaeiOS.TestSuite.TestSuite::Test() */
        }
    },
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */,
    4:$$[743]/* System.String XaeiOS.TestSuite.TestSuite::get_Name() */,
    5:$$[745]/* System.Boolean XaeiOS.TestSuite.TestSuite::get_Passed() */,
    6:$$[747]/* System.Exception XaeiOS.TestSuite.TestSuite::get_Exception() */,
    7:$$[749]/* System.Void XaeiOS.TestSuite.TestSuite::Test() */,
    8:$$[752]/* System.Void XaeiOS.TestSuite.TestSuite::Setup() */,
    9:$$[753]/* System.Void XaeiOS.TestSuite.TestSuite::TearDown() */
},

// 419: XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 420: XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 421: XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 422: <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
[2,0,0,0,5,0,0,0,25,0,0,0,53,0,0,0,142,0,0,0,131,125,0,0]/* <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}/__StaticArrayInitTypeSize=24 <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}::$$method0x600008e-1 */,

// 424: <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}/__StaticArrayInitTypeSize=24
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 425: XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 426: XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 427: XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},

// 428: XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa
{
    f: 0,
    0:$$[0]/* System.String System.Object::ToString() */,
    1:$$[1]/* System.Int32 System.Object::GetHashCode() */,
    2:$$[2]/* System.Boolean System.Object::Equals(System.Object) */,
    3:$$[4]/* System.Void System.Object::Finalize() */
},
null/* System.EventArgs System.EventArgs::Empty */,
null/* System.Int32 System.Threading.Thread::_idCounter */];var __module__={Initialize:function(){_[1].b = _[0];// System.Attribute extends System.Object
_[2].b = _[1];// System.Runtime.InteropServices.GuidAttribute extends System.Attribute
_[7].b = _[0];// System.Exception extends System.Object
_[8].b = _[7];// System.MulticastNotSupportedException extends System.Exception
_[9].b = _[0];// System.Delegate extends System.Object
_[10].b = _[9];// System.MulticastDelegate extends System.Delegate
_[11].b = _[10];// System.EventHandler extends System.MulticastDelegate
_[16].b = _[0];// XaeiOS.Process.ImageFormat.AssemblyName extends System.Object
_[17].b = _[0];// System.Reflection.MemberInfo extends System.Object
_[18].b = _[17];// System.Type extends System.Reflection.MemberInfo
_[19].b = _[18];// System.Reflection.RuntimeType extends System.Type
_[21].b = _[0];// System.Threading.Lock extends System.Object
_[23].b = _[7];// System.OverflowException extends System.Exception
_[24].b = _[0];// System.IO.TextWriter extends System.Object
_[26].b = _[24];// System.IO.TextWriter/NullTextWriter extends System.IO.TextWriter
_[27].b = _[0];// System.NativeObject extends System.Object
Object.prototype.$ = _[27];
_[28].b = _[27];// System.NativeDate extends System.NativeObject
Date.prototype.$ = _[28];
_[46].b = _[1];// System.Runtime.CompilerServices.CLRConjugateAttribute extends System.Attribute
_[47].b = _[1];// System.Runtime.CompilerServices.CorlibCLRConjugateAttribute extends System.Attribute
_[48].b = _[0];// System.Diagnostics.ObjectDebugger extends System.Object
_[53].b = _[0];// System.Diagnostics.ObjectDebugger/IntRef extends System.Object
_[54].b = _[0];// System.Reflection.ReflectionHelpers extends System.Object
_[57].b = _[27];// System.NativeFunction extends System.NativeObject
Function.prototype.$ = _[57];
_[58].b = _[27];// System.NativeArray`1 extends System.NativeObject
Array.prototype.$ = _[58];
_[59].b = _[58];// System.NativeArray extends System.NativeArray`1<System.var>
_[60].b = _[0];// System.Array extends System.Object
_[61].b = _[17];// System.Reflection.PropertyInfo extends System.Reflection.MemberInfo
_[62].b = _[61];// System.Reflection.RuntimePropertyInfo extends System.Reflection.PropertyInfo
_[63].b = _[0];// System.Activator extends System.Object
_[64].b = _[17];// System.Reflection.MethodBase extends System.Reflection.MemberInfo
_[69].b = _[0];// System.Global extends System.Object
_[71].b = _[0];// System.Math extends System.Object
_[74].b = _[0];// System.Threading.Semaphore extends System.Object
_[75].b = _[0];// System.Threading.Semaphore/WaitingTask extends System.Object
_[76].b = _[10];// System.Threading.WaitCallback extends System.MulticastDelegate
_[77].b = _[64];// System.Reflection.ConstructorInfo extends System.Reflection.MethodBase
_[78].b = _[77];// System.Reflection.RuntimeConstructorInfo extends System.Reflection.ConstructorInfo
_[81].b = _[0];// System.Threading.Thread extends System.Object
_[83].b = _[10];// System.Threading.ThreadCallback extends System.MulticastDelegate
_[84].b = _[10];// System.Threading.ThreadStart extends System.MulticastDelegate
_[85].b = _[10];// System.Threading.ParametizedThreadStart extends System.MulticastDelegate
_[92].b = _[7];// System.SystemException extends System.Exception
Number.prototype.$ = _[93];
_[94].b = _[92];// System.NullReferenceException extends System.SystemException
_[95].b = _[1];// System.Runtime.InteropServices.IntrinsicAttribute extends System.Attribute
_[96].b = _[64];// System.Reflection.MethodInfo extends System.Reflection.MethodBase
_[99].b = _[0];// System.Runtime.Class extends System.Object
_[100].b = _[10];// System.AsyncCallback extends System.MulticastDelegate
_[101].b = _[0];// System.Threading.ThreadManager extends System.Object
_[103].b = _[27];// System.Threading.ThreadManager/ThreadsByTask extends System.NativeObject
_[107].b = _[1];// System.AttributeUsageAttribute extends System.Attribute
_[109].b = _[0];// System.Runtime.VTable extends System.Object
_[113].b = _[0];// System.Runtime.VTableDebugInfo extends System.Object
_[114].b = _[0];// System.Runtime.MethodBase extends System.Object
_[115].b = _[114];// System.Runtime.Constructor extends System.Runtime.MethodBase
_[116].b = _[0];// System.Runtime.Parameter extends System.Object
_[117].b = _[0];// System.var extends System.Object
_[118].b = _[0];// System.String extends System.Object
String.prototype.$ = _[118];
_[123].b = _[92];// System.NotImplementedException extends System.SystemException
_[127].b = _[92];// System.InvalidOperationException extends System.SystemException
_[128].b = _[0];// System.Resources.ResourceManager extends System.Object
_[130].b = _[1];// XaeiOS.Boot.BootMethod extends System.Attribute
_[131].b = _[0];// System.Threading.ManualResetEvent extends System.Object
_[132].b = _[0];// System.Runtime.Property extends System.Object
_[133].b = _[7];// System.ArgumentException extends System.Exception
_[134].b = _[133];// System.ArgumentOutOfRangeException extends System.ArgumentException
_[135].b = _[0];// System.Collections.Generic.KeyValuePair`2 extends System.Object
_[136].b = _[1];// System.Runtime.CompilerServices.RequiredAttributeAttribute extends System.Attribute
_[137].b = _[0];// System.Runtime.CustomAttribute extends System.Object
_[138].b = _[0];// System.Diagnostics.Debug extends System.Object
_[139].b = _[0];// System.Console extends System.Object
_[144].b = _[92];// System.NotSupportedException extends System.SystemException
_[145].b = _[7];// System.InvalidCastException extends System.Exception
_[146].b = _[0];// System.EventArgs extends System.Object
_[152].b = _[1];// System.Runtime.CompilerServices.MethodImplAttribute extends System.Attribute
_[153].b = _[1];// System.Runtime.CompilerServices.XaeiOSMethodImplAttribute extends System.Attribute
_[154].b = _[1];// System.Reflection.DefaultMemberAttribute extends System.Attribute
_[155].b = _[114];// System.Runtime.Method extends System.Runtime.MethodBase
_[157].b = _[1];// System.FlagsAttribute extends System.Attribute
_[166].b = _[0];// XaeiOS.Process.ImageFormat.ObjectImage extends System.Object
_[167].b = _[92];// System.ExecutionEngineException extends System.SystemException
_[169].b = _[0];// System.Collections.Generic.Dictionary`2 extends System.Object
_[170].b = _[0];// XaeiOS.OSCorlib extends System.Object
_[178].b = _[10];// System.Runtime.InteropServices.ExposedCallbackDelegate extends System.MulticastDelegate
_[179].b = _[0];// System.Threading.Monitor extends System.Object
_[180].b = _[0];// System.Threading.Monitor/MonitorLock extends System.Object
_[181].b = _[0];// System.Threading.ThreadPool extends System.Object
_[182].b = _[27];// System.Runtime.XaeiOSObject extends System.NativeObject
_[183].b = _[0];// System.Runtime.Assembly extends System.Object
_[184].b = _[0];// System.Collections.Queue extends System.Object
_[186].b = _[0];// System.Collections.Generic.List`1 extends System.Object
_[187].b = _[0];// System.Collections.Generic.List`1/Enumerator extends System.Object
_[188].b = _[186];// System.Collections.ArrayList extends System.Collections.Generic.List`1<System.Object>
_[211].b = _[0];// XaeiOS.Process.DynamicLinker extends System.Object
_[215].b = _[0];// XaeiOS.Boot.BootManager extends System.Object
_[219].b = _[10];// System.NativeVoidDelegate extends System.MulticastDelegate
_[220].b = _[10];// System.VoidDelegate extends System.MulticastDelegate
_[224].b = _[7];// System.NativeError extends System.Exception
_[225].b = _[0];// System.Diagnostics.Logging extends System.Object
_[226].b = _[1];// System.Runtime.InteropServices.NativeDelegateAttribute extends System.Attribute
_[227].b = _[0];// System.Runtime.CompilerServices.RuntimeHelpers extends System.Object
_[232].b = _[0];// System.IO.Stream extends System.Object
_[233].b = _[0];// XaeiOS.TaskHandle extends System.Object
_[234].b = _[0];// System.Threading.Condition extends System.Object
_[235].b = _[234];// System.Threading.TimedCondition extends System.Threading.Condition
_[236].b = _[7];// System.Threading.ConditionTimedOutException extends System.Exception
_[240].b = _[0];// System.WeakReference extends System.Object
_[241].b = _[1];// System.Runtime.CompilerServices.CompilerGeneratedAttribute extends System.Attribute
_[242].b = _[96];// System.Reflection.RuntimeMethodInfo extends System.Reflection.MethodInfo
_[246].b = _[10];// XaeiOS.TaskCallback extends System.MulticastDelegate
_[247].b = _[10];// XaeiOS.TaskFunction extends System.MulticastDelegate
_[259].b = _[1];// System.CLSCompliantAttribute extends System.Attribute
_[260].b = _[92];// System.Threading.ThreadAbortException extends System.SystemException
_[264].b = _[0];// XaeiOS.Security.ExternalIdentity extends System.Object
_[265].b = _[0];// XaeiOS.Security.ExternalPrincipal extends System.Object
_[266].b = _[7];// System.Security.SecurityException extends System.Exception
_[267].b = _[0];// XaeiOS.DataStructures.DoublyLinkedList`1 extends System.Object
_[268].b = _[0];// XaeiOS.DataStructures.DoublyLinkedListItem`1 extends System.Object
_[274].b = _[0];// XaeiOS.SIPManager extends System.Object
_[277].b = _[0];// XaeiOS.SIP extends System.Object
_[278].b = _[24];// XaeiOS.SIP/ConsoleTextWriter extends System.IO.TextWriter
_[279].b = _[0];// XaeiOS.Process.SignalDaemon extends System.Object
_[283].b = _[10];// XaeiOS.Process.SignalHandler extends System.MulticastDelegate
_[284].b = _[10];// XaeiOS.Process.CustomSignalHandler extends System.MulticastDelegate
_[289].b = _[0];// XaeiOS.Process.SignalPermission extends System.Object
_[290].b = _[0];// XaeiOS.Security.ManifestPrincipal extends System.Object
_[291].b = _[0];// XaeiOS.Security.RootIdentity extends System.Object
_[292].b = _[0];// XaeiOS.Security.RootPrincipal extends System.Object
_[293].b = _[0];// XaeiOS.Boot.BootManager/<>c__DisplayClass1 extends System.Object
_[294].b = _[0];// XaeiOS.SIP/<>c__DisplayClass1 extends System.Object
_[295].b = _[0];// XaeiOS.Process.SignalDaemon/<>c__DisplayClass3 extends System.Object
_[296].b = _[0];// XaeiOS.Process.SignalDaemon/<>c__DisplayClass6 extends System.Object
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("OSCorlib")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("OSCorlib")*/;
t0[1] = $$[416]("System","Object",t0[0],0,null,false,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Object", t0[0], [dynamic expression], null, False, False)*/;
t0[2] = $$[417](t0[1],"ToString",$$[0],0)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "ToString", [dynamic expression], [dynamic expression])*/;
t0[3] = $$[417](t0[1],"GetHashCode",$$[1],1)/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "GetHashCode", [dynamic expression], [dynamic expression])*/;
t0[4] = $$[417](t0[1],"Equals",$$[2],2)/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Equals", [dynamic expression], [dynamic expression])*/;
t0[5] = $$[417](t0[1],"GetType",$$[3],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "GetType", [dynamic expression], -1)*/;
t0[6] = $$[417](t0[1],"Finalize",$$[4],3)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Finalize", [dynamic expression], [dynamic expression])*/;
t0[7] = $$[418](t0[1],".ctor",$$[5])/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1], ".ctor", [dynamic expression])*/;
t0[8] = $$[416]("System.Runtime.CompilerServices","XaeiOSMethodImplAttribute",t0[0],153,null,false,false)/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "XaeiOSMethodImplAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[9] = $$[417](t0[8],"get_Options",$$[314],-1)/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[8], "get_Options", [dynamic expression], -1)*/;
t0[10] = $$[417](t0[8],"get_Implementation",$$[315],-1)/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[8], "get_Implementation", [dynamic expression], -1)*/;
t0[11] = $$[417](t0[8],"set_Implementation",$$[316],-1)/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[8], "set_Implementation", [dynamic expression], -1)*/;
t0[12] = $$[418](t0[8],".ctor",$$[317])/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[8], ".ctor", [dynamic expression])*/;
t0[13] = $$[419](t0[8],"Options",t0[9],null)/*t0[13] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[8], "Options", t0[9], null)*/;
t0[14] = $$[419](t0[8],"Implementation",t0[10],t0[11])/*t0[14] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[8], "Implementation", t0[10], t0[11])*/;
t0[15] = $$[416]("System","AttributeUsageAttribute",t0[0],107,null,false,false)/*t0[15] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "AttributeUsageAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[16] = $$[417](t0[15],"get_AllowMultiple",$$[218],-1)/*t0[16] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[15], "get_AllowMultiple", [dynamic expression], -1)*/;
t0[17] = $$[417](t0[15],"set_AllowMultiple",$$[219],-1)/*t0[17] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[15], "set_AllowMultiple", [dynamic expression], -1)*/;
t0[18] = $$[417](t0[15],"get_Inherited",$$[220],-1)/*t0[18] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[15], "get_Inherited", [dynamic expression], -1)*/;
t0[19] = $$[417](t0[15],"set_Inherited",$$[221],-1)/*t0[19] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[15], "set_Inherited", [dynamic expression], -1)*/;
t0[20] = $$[417](t0[15],"get_ValidOn",$$[222],-1)/*t0[20] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[15], "get_ValidOn", [dynamic expression], -1)*/;
t0[21] = $$[418](t0[15],".ctor",$$[223])/*t0[21] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[15], ".ctor", [dynamic expression])*/;
t0[22] = $$[418](t0[15],".ctor",$$[224])/*t0[22] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[15], ".ctor", [dynamic expression])*/;
t0[23] = $$[418](t0[15],".cctor",$$[225])/*t0[23] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[15], ".cctor", [dynamic expression])*/;
t0[24] = $$[419](t0[15],"AllowMultiple",t0[16],t0[17])/*t0[24] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[15], "AllowMultiple", t0[16], t0[17])*/;
t0[25] = $$[419](t0[15],"Inherited",t0[18],t0[19])/*t0[25] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[15], "Inherited", t0[18], t0[19])*/;
t0[26] = $$[419](t0[15],"ValidOn",t0[20],null)/*t0[26] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[15], "ValidOn", t0[20], null)*/;
$$[420](t0[15],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[15], [dynamic expression])*/;
$$[420](t0[8],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[8], [dynamic expression])*/;
$$[420](t0[7],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[7], [dynamic expression])*/;
t0[27] = $$[416]("System","CLSCompliantAttribute",t0[0],259,null,false,false)/*t0[27] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "CLSCompliantAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[28] = $$[417](t0[27],"get_IsCompliant",$$[445],-1)/*t0[28] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "get_IsCompliant", [dynamic expression], -1)*/;
t0[29] = $$[418](t0[27],".ctor",$$[446])/*t0[29] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[27], ".ctor", [dynamic expression])*/;
t0[30] = $$[419](t0[27],"IsCompliant",t0[28],null)/*t0[30] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[27], "IsCompliant", t0[28], null)*/;
$$[420](t0[1],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1], [dynamic expression])*/;
t0[31] = $$[416]("System.Runtime.CompilerServices","CorlibCLRConjugateAttribute",t0[0],47,null,false,false)/*t0[31] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CorlibCLRConjugateAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[32] = $$[418](t0[31],".ctor",$$[87])/*t0[32] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[31], ".ctor", [dynamic expression])*/;
$$[420](t0[31],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[31], [dynamic expression])*/;
$$[420](t0[1],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1], [dynamic expression])*/;
t0[33] = $$[416]("System","Attribute",t0[0],1,null,false,false)/*t0[33] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Attribute", t0[0], [dynamic expression], null, False, False)*/;
t0[34] = $$[418](t0[33],".ctor",$$[6])/*t0[34] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[33], ".ctor", [dynamic expression])*/;
$$[420](t0[33],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[33], [dynamic expression])*/;
t0[35] = $$[416]("System.Runtime.InteropServices","GuidAttribute",t0[0],2,null,false,false)/*t0[35] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "GuidAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[36] = $$[418](t0[35],".ctor",$$[7])/*t0[36] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[35], ".ctor", [dynamic expression])*/;
$$[420](t0[35],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[35], [dynamic expression])*/;
t0[37] = $$[416]("System","Nullable`1",t0[0],3,null,false,false)/*t0[37] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Nullable`1", t0[0], [dynamic expression], null, False, False)*/;
t0[38] = $$[416]("System","UInt64",t0[0],4,null,false,false)/*t0[38] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "UInt64", t0[0], [dynamic expression], null, False, False)*/;
t0[39] = $$[416]("System.Runtime.InteropServices","IntrinsicAttribute",t0[0],95,null,false,false)/*t0[39] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "IntrinsicAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[40] = $$[417](t0[39],"get_UseGlobalNamespace",$$[177],-1)/*t0[40] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "get_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[41] = $$[417](t0[39],"set_UseGlobalNamespace",$$[178],-1)/*t0[41] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "set_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[42] = $$[417](t0[39],"get_SetVTable",$$[179],-1)/*t0[42] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "get_SetVTable", [dynamic expression], -1)*/;
t0[43] = $$[417](t0[39],"set_SetVTable",$$[180],-1)/*t0[43] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "set_SetVTable", [dynamic expression], -1)*/;
t0[44] = $$[417](t0[39],"get_Name",$$[181],-1)/*t0[44] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "get_Name", [dynamic expression], -1)*/;
t0[45] = $$[417](t0[39],"set_Name",$$[182],-1)/*t0[45] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[39], "set_Name", [dynamic expression], -1)*/;
t0[46] = $$[418](t0[39],".ctor",$$[183])/*t0[46] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[39], ".ctor", [dynamic expression])*/;
t0[47] = $$[418](t0[39],".ctor",$$[184])/*t0[47] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[39], ".ctor", [dynamic expression])*/;
t0[48] = $$[419](t0[39],"UseGlobalNamespace",t0[40],t0[41])/*t0[48] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[39], "UseGlobalNamespace", t0[40], t0[41])*/;
t0[49] = $$[419](t0[39],"SetVTable",t0[42],t0[43])/*t0[49] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[39], "SetVTable", t0[42], t0[43])*/;
t0[50] = $$[419](t0[39],"Name",t0[44],t0[45])/*t0[50] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[39], "Name", t0[44], t0[45])*/;
$$[420](t0[39],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[39], [dynamic expression])*/;
$$[420](t0[38],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[38], [dynamic expression])*/;
$$[420](t0[38],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[38], [dynamic expression])*/;
t0[51] = $$[416]("System","Exception",t0[0],7,null,false,false)/*t0[51] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Exception", t0[0], [dynamic expression], null, False, False)*/;
t0[52] = $$[417](t0[51],"get_Message",$$[8],-1)/*t0[52] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "get_Message", [dynamic expression], -1)*/;
t0[53] = $$[417](t0[51],"get_InnerException",$$[9],-1)/*t0[53] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "get_InnerException", [dynamic expression], -1)*/;
t0[54] = $$[417](t0[51],"GetBaseException",$$[10],4)/*t0[54] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "GetBaseException", [dynamic expression], [dynamic expression])*/;
t0[55] = $$[417](t0[51],"get_HelpLink",$$[11],5)/*t0[55] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "get_HelpLink", [dynamic expression], [dynamic expression])*/;
t0[56] = $$[417](t0[51],"set_HelpLink",$$[12],6)/*t0[56] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "set_HelpLink", [dynamic expression], [dynamic expression])*/;
t0[57] = $$[417](t0[51],"get_Source",$$[13],7)/*t0[57] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "get_Source", [dynamic expression], [dynamic expression])*/;
t0[58] = $$[417](t0[51],"set_Source",$$[14],8)/*t0[58] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "set_Source", [dynamic expression], [dynamic expression])*/;
t0[59] = $$[417](t0[51],"get_StackTrace",$$[15],9)/*t0[59] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "get_StackTrace", [dynamic expression], [dynamic expression])*/;
t0[60] = $$[417](t0[51],"ToString",$$[16],0)/*t0[60] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[51], "ToString", [dynamic expression], [dynamic expression])*/;
t0[61] = $$[418](t0[51],".ctor",$$[17])/*t0[61] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[51], ".ctor", [dynamic expression])*/;
$$[420](t0[61],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[61], [dynamic expression])*/;
t0[62] = $$[418](t0[51],".ctor",$$[18])/*t0[62] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[51], ".ctor", [dynamic expression])*/;
$$[420](t0[62],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[62], [dynamic expression])*/;
t0[63] = $$[418](t0[51],".ctor",$$[19])/*t0[63] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[51], ".ctor", [dynamic expression])*/;
$$[420](t0[63],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[63], [dynamic expression])*/;
t0[64] = $$[419](t0[51],"Message",t0[52],null)/*t0[64] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[51], "Message", t0[52], null)*/;
t0[65] = $$[419](t0[51],"InnerException",t0[53],null)/*t0[65] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[51], "InnerException", t0[53], null)*/;
t0[66] = $$[419](t0[51],"HelpLink",t0[55],t0[56])/*t0[66] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[51], "HelpLink", t0[55], t0[56])*/;
t0[67] = $$[419](t0[51],"Source",t0[57],t0[58])/*t0[67] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[51], "Source", t0[57], t0[58])*/;
t0[68] = $$[419](t0[51],"StackTrace",t0[59],null)/*t0[68] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[51], "StackTrace", t0[59], null)*/;
$$[420](t0[51],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[51], [dynamic expression])*/;
t0[69] = $$[416]("System","MulticastNotSupportedException",t0[0],8,null,false,false)/*t0[69] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "MulticastNotSupportedException", t0[0], [dynamic expression], null, False, False)*/;
t0[70] = $$[418](t0[69],".ctor",$$[20])/*t0[70] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[69], ".ctor", [dynamic expression])*/;
t0[71] = $$[418](t0[69],".ctor",$$[21])/*t0[71] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[69], ".ctor", [dynamic expression])*/;
t0[72] = $$[416]("System","Delegate",t0[0],9,null,false,false)/*t0[72] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Delegate", t0[0], [dynamic expression], null, False, False)*/;
t0[73] = $$[417](t0[72],"get_Target",$$[22],-1)/*t0[73] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "get_Target", [dynamic expression], -1)*/;
$$[420](t0[73],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[73], [dynamic expression])*/;
t0[74] = $$[417](t0[72],"get_Function",$$[23],-1)/*t0[74] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "get_Function", [dynamic expression], -1)*/;
$$[420](t0[74],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[74], [dynamic expression])*/;
t0[75] = $$[417](t0[72],"Invoke",$$[24],4)/*t0[75] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "Invoke", [dynamic expression], [dynamic expression])*/;
$$[420](t0[75],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[75], [dynamic expression])*/;
t0[76] = $$[417](t0[72],"InvokeNative",$$[25],5)/*t0[76] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "InvokeNative", [dynamic expression], [dynamic expression])*/;
$$[420](t0[76],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[76], [dynamic expression])*/;
t0[77] = $$[417](t0[72],"InternalCombine",$$[26],6)/*t0[77] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "InternalCombine", [dynamic expression], [dynamic expression])*/;
t0[78] = $$[417](t0[72],"DynamicInvoke",$$[27],-1)/*t0[78] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "DynamicInvoke", [dynamic expression], -1)*/;
t0[79] = $$[417](t0[72],"Create",$$[28],-1)/*t0[79] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "Create", [dynamic expression], -1)*/;
$$[420](t0[79],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[79], [dynamic expression])*/;
t0[80] = $$[417](t0[72],"InternalCreate",$$[29],-1)/*t0[80] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "InternalCreate", [dynamic expression], -1)*/;
$$[420](t0[80],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[80], [dynamic expression])*/;
t0[81] = $$[417](t0[72],"BrokenCombine",$$[30],-1)/*t0[81] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "BrokenCombine", [dynamic expression], -1)*/;
t0[82] = $$[417](t0[72],"Combine",$$[31],-1)/*t0[82] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "Combine", [dynamic expression], -1)*/;
t0[83] = $$[417](t0[72],"Remove",$$[32],-1)/*t0[83] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "Remove", [dynamic expression], -1)*/;
t0[84] = $$[417](t0[72],"op_Equality",$$[33],-1)/*t0[84] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "op_Equality", [dynamic expression], -1)*/;
t0[85] = $$[417](t0[72],"op_Inequality",$$[34],-1)/*t0[85] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[72], "op_Inequality", [dynamic expression], -1)*/;
t0[86] = $$[418](t0[72],".ctor",$$[35])/*t0[86] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[72], ".ctor", [dynamic expression])*/;
$$[420](t0[86],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[86], [dynamic expression])*/;
t0[87] = $$[418](t0[72],".ctor",$$[36])/*t0[87] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[72], ".ctor", [dynamic expression])*/;
$$[420](t0[87],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[87], [dynamic expression])*/;
t0[88] = $$[419](t0[72],"Target",t0[73],null)/*t0[88] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[72], "Target", t0[73], null)*/;
t0[89] = $$[419](t0[72],"Function",t0[74],null)/*t0[89] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[72], "Function", t0[74], null)*/;
$$[420](t0[72],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[72], [dynamic expression])*/;
$$[420](t0[72],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[72], [dynamic expression])*/;
t0[90] = $$[416]("System","MulticastDelegate",t0[0],10,null,false,false)/*t0[90] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "MulticastDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[91] = $$[417](t0[90],"Invoke",$$[37],4)/*t0[91] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[90], "Invoke", [dynamic expression], [dynamic expression])*/;
t0[92] = $$[417](t0[90],"InvokeNative",$$[38],5)/*t0[92] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[90], "InvokeNative", [dynamic expression], [dynamic expression])*/;
t0[93] = $$[417](t0[90],"InternalCombine",$$[39],6)/*t0[93] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[90], "InternalCombine", [dynamic expression], [dynamic expression])*/;
t0[94] = $$[417](t0[90],"Clone",$$[40],-1)/*t0[94] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[90], "Clone", [dynamic expression], -1)*/;
t0[95] = $$[417](t0[90],"InternalCreate",$$[41],-1)/*t0[95] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[90], "InternalCreate", [dynamic expression], -1)*/;
t0[96] = $$[418](t0[90],".ctor",$$[42])/*t0[96] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[90], ".ctor", [dynamic expression])*/;
$$[420](t0[90],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[90], [dynamic expression])*/;
$$[420](t0[90],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[90], [dynamic expression])*/;
t0[97] = $$[416]("System","EventHandler",t0[0],11,null,false,false)/*t0[97] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "EventHandler", t0[0], [dynamic expression], null, False, False)*/;
t0[98] = $$[417](t0[97],"Invoke",null,4)/*t0[98] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "Invoke", null, [dynamic expression])*/;
t0[99] = $$[417](t0[97],"BeginInvoke",null,8)/*t0[99] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "BeginInvoke", null, [dynamic expression])*/;
t0[100] = $$[417](t0[97],"EndInvoke",null,9)/*t0[100] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "EndInvoke", null, [dynamic expression])*/;
t0[101] = $$[418](t0[97],".ctor",null)/*t0[101] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[97], ".ctor", null)*/;
t0[102] = $$[416]("System.Runtime.InteropServices","LayoutKind",t0[0],12,null,false,false)/*t0[102] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "LayoutKind", t0[0], [dynamic expression], null, False, False)*/;
t0[103] = $$[416]("XaeiOS.Process.ImageFormat","AssemblyName",t0[0],16,null,false,false)/*t0[103] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process.ImageFormat", "AssemblyName", t0[0], [dynamic expression], null, False, False)*/;
t0[104] = $$[417](t0[103],"get_Name",$$[43],-1)/*t0[104] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "get_Name", [dynamic expression], -1)*/;
t0[105] = $$[417](t0[103],"set_Name",$$[44],-1)/*t0[105] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "set_Name", [dynamic expression], -1)*/;
t0[106] = $$[417](t0[103],"get_Version",$$[45],-1)/*t0[106] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "get_Version", [dynamic expression], -1)*/;
t0[107] = $$[417](t0[103],"set_Version",$$[46],-1)/*t0[107] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "set_Version", [dynamic expression], -1)*/;
t0[108] = $$[417](t0[103],"get_Culture",$$[47],-1)/*t0[108] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "get_Culture", [dynamic expression], -1)*/;
t0[109] = $$[417](t0[103],"set_Culture",$$[48],-1)/*t0[109] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[103], "set_Culture", [dynamic expression], -1)*/;
t0[110] = $$[418](t0[103],".ctor",$$[49])/*t0[110] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[103], ".ctor", [dynamic expression])*/;
t0[111] = $$[419](t0[103],"Name",t0[104],t0[105])/*t0[111] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[103], "Name", t0[104], t0[105])*/;
t0[112] = $$[419](t0[103],"Version",t0[106],t0[107])/*t0[112] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[103], "Version", t0[106], t0[107])*/;
t0[113] = $$[419](t0[103],"Culture",t0[108],t0[109])/*t0[113] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[103], "Culture", t0[108], t0[109])*/;
t0[114] = $$[416]("System.Reflection","MemberInfo",t0[0],17,null,false,false)/*t0[114] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "MemberInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[115] = $$[417](t0[114],"get_DeclaringType",null,4)/*t0[115] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "get_DeclaringType", null, [dynamic expression])*/;
t0[116] = $$[417](t0[114],"get_Name",null,5)/*t0[116] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "get_Name", null, [dynamic expression])*/;
t0[117] = $$[417](t0[114],"IsDefined",null,6)/*t0[117] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "IsDefined", null, [dynamic expression])*/;
t0[118] = $$[418](t0[114],".ctor",$$[50])/*t0[118] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[114], ".ctor", [dynamic expression])*/;
t0[119] = $$[419](t0[114],"DeclaringType",t0[115],null)/*t0[119] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[114], "DeclaringType", t0[115], null)*/;
t0[120] = $$[419](t0[114],"Name",t0[116],null)/*t0[120] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[114], "Name", t0[116], null)*/;
t0[121] = $$[416]("System","Type",t0[0],18,null,false,false)/*t0[121] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Type", t0[0], [dynamic expression], null, False, False)*/;
t0[122] = $$[417](t0[121],"get_Namespace",null,7)/*t0[122] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "get_Namespace", null, [dynamic expression])*/;
t0[123] = $$[417](t0[121],"get_FullName",$$[51],-1)/*t0[123] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "get_FullName", [dynamic expression], -1)*/;
t0[124] = $$[417](t0[121],"GetProperties",null,8)/*t0[124] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "GetProperties", null, [dynamic expression])*/;
t0[125] = $$[417](t0[121],"GetMethods",null,9)/*t0[125] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "GetMethods", null, [dynamic expression])*/;
t0[126] = $$[417](t0[121],"GetConstructors",null,10)/*t0[126] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "GetConstructors", null, [dynamic expression])*/;
t0[127] = $$[417](t0[121],"get_TypeHandle",$$[52],11)/*t0[127] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "get_TypeHandle", [dynamic expression], [dynamic expression])*/;
t0[128] = $$[417](t0[121],"ToString",$$[53],0)/*t0[128] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "ToString", [dynamic expression], [dynamic expression])*/;
t0[129] = $$[417](t0[121],"GetTypeFromHandle",$$[54],-1)/*t0[129] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "GetTypeFromHandle", [dynamic expression], -1)*/;
t0[130] = $$[417](t0[121],"GetType",$$[55],-1)/*t0[130] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[121], "GetType", [dynamic expression], -1)*/;
t0[131] = $$[418](t0[121],".ctor",$$[56])/*t0[131] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[121], ".ctor", [dynamic expression])*/;
t0[132] = $$[419](t0[121],"Namespace",t0[122],null)/*t0[132] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[121], "Namespace", t0[122], null)*/;
t0[133] = $$[419](t0[121],"FullName",t0[123],null)/*t0[133] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[121], "FullName", t0[123], null)*/;
t0[134] = $$[419](t0[121],"TypeHandle",t0[127],null)/*t0[134] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[121], "TypeHandle", t0[127], null)*/;
t0[135] = $$[416]("System.Reflection","RuntimeType",t0[0],19,null,false,false)/*t0[135] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "RuntimeType", t0[0], [dynamic expression], null, False, False)*/;
t0[136] = $$[417](t0[135],"get_DeclaringType",$$[57],4)/*t0[136] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "get_DeclaringType", [dynamic expression], [dynamic expression])*/;
t0[137] = $$[417](t0[135],"get_Name",$$[58],5)/*t0[137] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[138] = $$[417](t0[135],"get_Namespace",$$[59],7)/*t0[138] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "get_Namespace", [dynamic expression], [dynamic expression])*/;
t0[139] = $$[417](t0[135],"get_Class",$$[60],-1)/*t0[139] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "get_Class", [dynamic expression], -1)*/;
t0[140] = $$[417](t0[135],"GetConstructors",$$[61],10)/*t0[140] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "GetConstructors", [dynamic expression], [dynamic expression])*/;
t0[141] = $$[417](t0[135],"GetMethods",$$[62],9)/*t0[141] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "GetMethods", [dynamic expression], [dynamic expression])*/;
t0[142] = $$[417](t0[135],"GetProperties",$$[63],8)/*t0[142] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "GetProperties", [dynamic expression], [dynamic expression])*/;
t0[143] = $$[417](t0[135],"IsDefined",$$[64],6)/*t0[143] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "IsDefined", [dynamic expression], [dynamic expression])*/;
t0[144] = $$[417](t0[135],"CreateInstance",$$[65],-1)/*t0[144] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "CreateInstance", [dynamic expression], -1)*/;
t0[145] = $$[417](t0[135],"LoadConstructorInfo",$$[66],-1)/*t0[145] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "LoadConstructorInfo", [dynamic expression], -1)*/;
t0[146] = $$[417](t0[135],"LoadMethodInfo",$$[67],-1)/*t0[146] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "LoadMethodInfo", [dynamic expression], -1)*/;
t0[147] = $$[417](t0[135],"LoadPropertyInfo",$$[68],-1)/*t0[147] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[135], "LoadPropertyInfo", [dynamic expression], -1)*/;
t0[148] = $$[418](t0[135],".ctor",$$[69])/*t0[148] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[135], ".ctor", [dynamic expression])*/;
t0[149] = $$[419](t0[135],"DeclaringType",t0[136],null)/*t0[149] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[135], "DeclaringType", t0[136], null)*/;
t0[150] = $$[419](t0[135],"Name",t0[137],null)/*t0[150] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[135], "Name", t0[137], null)*/;
t0[151] = $$[419](t0[135],"Namespace",t0[138],null)/*t0[151] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[135], "Namespace", t0[138], null)*/;
t0[152] = $$[419](t0[135],"Class",t0[139],null)/*t0[152] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[135], "Class", t0[139], null)*/;
t0[153] = $$[416]("System","IAsyncResult",t0[0],20,null,true,false)/*t0[153] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "IAsyncResult", t0[0], [dynamic expression], null, True, False)*/;
t0[154] = $$[416]("System.Threading","Lock",t0[0],21,null,false,false)/*t0[154] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "Lock", t0[0], [dynamic expression], null, False, False)*/;
t0[155] = $$[417](t0[154],"Acquire",$$[70],-1)/*t0[155] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[154], "Acquire", [dynamic expression], -1)*/;
$$[420](t0[155],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[155], [dynamic expression])*/;
t0[156] = $$[417](t0[154],"TryAcquire",$$[71],-1)/*t0[156] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[154], "TryAcquire", [dynamic expression], -1)*/;
$$[420](t0[156],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[156], [dynamic expression])*/;
t0[157] = $$[417](t0[154],"Release",$$[72],-1)/*t0[157] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[154], "Release", [dynamic expression], -1)*/;
$$[420](t0[157],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[157], [dynamic expression])*/;
t0[158] = $$[418](t0[154],".ctor",$$[73])/*t0[158] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[154], ".ctor", [dynamic expression])*/;
t0[159] = $$[416]("System","RuntimeTypeHandle",t0[0],22,null,false,false)/*t0[159] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "RuntimeTypeHandle", t0[0], [dynamic expression], null, False, False)*/;
t0[160] = $$[416]("System","OverflowException",t0[0],23,null,false,false)/*t0[160] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "OverflowException", t0[0], [dynamic expression], null, False, False)*/;
t0[161] = $$[418](t0[160],".ctor",$$[74])/*t0[161] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[160], ".ctor", [dynamic expression])*/;
t0[162] = $$[416]("System.IO","TextWriter",t0[0],24,null,false,false)/*t0[162] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.IO", "TextWriter", t0[0], [dynamic expression], null, False, False)*/;
t0[163] = $$[417](t0[162],"Write",null,4)/*t0[163] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[162], "Write", null, [dynamic expression])*/;
t0[164] = $$[417](t0[162],"get_Null",$$[75],-1)/*t0[164] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[162], "get_Null", [dynamic expression], -1)*/;
t0[165] = $$[416]("System.Runtime.CompilerServices","CompilerGeneratedAttribute",t0[0],241,null,false,false)/*t0[165] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CompilerGeneratedAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[166] = $$[418](t0[165],".ctor",$$[439])/*t0[166] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[165], ".ctor", [dynamic expression])*/;
$$[420](t0[165],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[165], [dynamic expression])*/;
$$[420](t0[164],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[164], [dynamic expression])*/;
t0[167] = $$[417](t0[162],"set_Null",$$[76],-1)/*t0[167] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[162], "set_Null", [dynamic expression], -1)*/;
$$[420](t0[167],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[167], [dynamic expression])*/;
t0[168] = $$[418](t0[162],".cctor",$$[77])/*t0[168] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[162], ".cctor", [dynamic expression])*/;
t0[169] = $$[418](t0[162],".ctor",$$[78])/*t0[169] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[162], ".ctor", [dynamic expression])*/;
t0[170] = $$[419](t0[162],"Null",t0[164],t0[167])/*t0[170] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[162], "Null", t0[164], t0[167])*/;
t0[171] = $$[416]("","NullTextWriter",t0[0],26,null,false,false)/*t0[171] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "NullTextWriter", t0[0], [dynamic expression], null, False, False)*/;
t0[172] = $$[417](t0[171],"Write",$$[79],4)/*t0[172] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[171], "Write", [dynamic expression], [dynamic expression])*/;
t0[173] = $$[418](t0[171],".ctor",$$[80])/*t0[173] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[171], ".ctor", [dynamic expression])*/;
t0[174] = $$[416]("System","NativeObject",t0[0],27,null,false,false)/*t0[174] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeObject", t0[0], [dynamic expression], null, False, False)*/;
t0[175] = $$[417](t0[174],"get_Item",$$[-1],-1)/*t0[175] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "get_Item", [dynamic expression], -1)*/;
$$[420](t0[175],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[175], [dynamic expression])*/;
t0[176] = $$[417](t0[174],"set_Item",$$[-1],-1)/*t0[176] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "set_Item", [dynamic expression], -1)*/;
$$[420](t0[176],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[176], [dynamic expression])*/;
t0[177] = $$[417](t0[174],"get_Item",$$[-1],-1)/*t0[177] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "get_Item", [dynamic expression], -1)*/;
$$[420](t0[177],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[177], [dynamic expression])*/;
t0[178] = $$[417](t0[174],"set_Item",$$[-1],-1)/*t0[178] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "set_Item", [dynamic expression], -1)*/;
$$[420](t0[178],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[178], [dynamic expression])*/;
t0[179] = $$[417](t0[174],"get_Item",$$[-1],-1)/*t0[179] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "get_Item", [dynamic expression], -1)*/;
$$[420](t0[179],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[179], [dynamic expression])*/;
t0[180] = $$[417](t0[174],"set_Item",$$[-1],-1)/*t0[180] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "set_Item", [dynamic expression], -1)*/;
$$[420](t0[180],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[180], [dynamic expression])*/;
t0[181] = $$[417](t0[174],"GetKeys",$$[81],-1)/*t0[181] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "GetKeys", [dynamic expression], -1)*/;
$$[420](t0[181],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[181], [dynamic expression])*/;
t0[182] = $$[417](t0[174],"ContainsKey",$$[-1],-1)/*t0[182] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "ContainsKey", [dynamic expression], -1)*/;
$$[420](t0[182],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[182], [dynamic expression])*/;
t0[183] = $$[417](t0[174],"ContainsKey",$$[-1],-1)/*t0[183] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "ContainsKey", [dynamic expression], -1)*/;
$$[420](t0[183],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[183], [dynamic expression])*/;
t0[184] = $$[417](t0[174],"RemoveKey",$$[-1],-1)/*t0[184] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "RemoveKey", [dynamic expression], -1)*/;
$$[420](t0[184],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[184], [dynamic expression])*/;
t0[185] = $$[417](t0[174],"RemoveKey",$$[-1],-1)/*t0[185] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "RemoveKey", [dynamic expression], -1)*/;
$$[420](t0[185],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[185], [dynamic expression])*/;
t0[186] = $$[417](t0[174],"RemoveKey",$$[-1],-1)/*t0[186] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "RemoveKey", [dynamic expression], -1)*/;
$$[420](t0[186],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[186], [dynamic expression])*/;
t0[187] = $$[417](t0[174],"NativeToString",$$[-1],-1)/*t0[187] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "NativeToString", [dynamic expression], -1)*/;
$$[420](t0[187],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[187], [dynamic expression])*/;
t0[188] = $$[417](t0[174],"ToString",$$[82],0)/*t0[188] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[188],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[188], [dynamic expression])*/;
t0[189] = $$[417](t0[174],"GetHashCode",$$[83],1)/*t0[189] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[174], "GetHashCode", [dynamic expression], [dynamic expression])*/;
$$[420](t0[189],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[189], [dynamic expression])*/;
t0[190] = $$[419](t0[174],"Item",t0[175],t0[176])/*t0[190] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[174], "Item", t0[175], t0[176])*/;
t0[191] = $$[419](t0[174],"Item",t0[177],t0[178])/*t0[191] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[174], "Item", t0[177], t0[178])*/;
t0[192] = $$[419](t0[174],"Item",t0[179],t0[180])/*t0[192] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[174], "Item", t0[179], t0[180])*/;
t0[193] = $$[416]("System.Runtime.CompilerServices","CLRConjugateAttribute",t0[0],46,null,false,false)/*t0[193] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CLRConjugateAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[194] = $$[417](t0[193],"get_ConjugateName",$$[84],-1)/*t0[194] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[193], "get_ConjugateName", [dynamic expression], -1)*/;
t0[195] = $$[417](t0[193],"set_ConjugateName",$$[85],-1)/*t0[195] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[193], "set_ConjugateName", [dynamic expression], -1)*/;
t0[196] = $$[418](t0[193],".ctor",$$[86])/*t0[196] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[193], ".ctor", [dynamic expression])*/;
t0[197] = $$[419](t0[193],"ConjugateName",t0[194],t0[195])/*t0[197] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[193], "ConjugateName", t0[194], t0[195])*/;
$$[420](t0[193],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[193], [dynamic expression])*/;
$$[420](t0[174],$$[86].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[174], [dynamic expression])*/;
t0[198] = $$[416]("System.Reflection","DefaultMemberAttribute",t0[0],154,null,false,false)/*t0[198] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "DefaultMemberAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[199] = $$[417](t0[198],"get_MemberName",$$[318],-1)/*t0[199] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[198], "get_MemberName", [dynamic expression], -1)*/;
t0[200] = $$[418](t0[198],".ctor",$$[319])/*t0[200] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[198], ".ctor", [dynamic expression])*/;
t0[201] = $$[419](t0[198],"MemberName",t0[199],null)/*t0[201] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[198], "MemberName", t0[199], null)*/;
$$[420](t0[198],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[198], [dynamic expression])*/;
$$[420](t0[174],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[174], [dynamic expression])*/;
$$[420](t0[174],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[174], [dynamic expression])*/;
$$[420](t0[174],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[174], [dynamic expression])*/;
t0[202] = $$[416]("System","NativeDate",t0[0],28,null,false,false)/*t0[202] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeDate", t0[0], [dynamic expression], null, False, False)*/;
t0[203] = $$[417](t0[202],"GetTime",$$[-1],-1)/*t0[203] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "GetTime", [dynamic expression], -1)*/;
$$[420](t0[203],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[203], [dynamic expression])*/;
t0[204] = $$[417](t0[202],"op_LessThan",$$[-1],-1)/*t0[204] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_LessThan", [dynamic expression], -1)*/;
$$[420](t0[204],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[204], [dynamic expression])*/;
t0[205] = $$[417](t0[202],"op_LessThanOrEqual",$$[-1],-1)/*t0[205] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_LessThanOrEqual", [dynamic expression], -1)*/;
$$[420](t0[205],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[205], [dynamic expression])*/;
t0[206] = $$[417](t0[202],"op_GreaterThan",$$[-1],-1)/*t0[206] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_GreaterThan", [dynamic expression], -1)*/;
$$[420](t0[206],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[206], [dynamic expression])*/;
t0[207] = $$[417](t0[202],"op_GreaterThanOrEqual",$$[-1],-1)/*t0[207] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_GreaterThanOrEqual", [dynamic expression], -1)*/;
$$[420](t0[207],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[207], [dynamic expression])*/;
t0[208] = $$[417](t0[202],"op_Equality",$$[-1],-1)/*t0[208] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Equality", [dynamic expression], -1)*/;
$$[420](t0[208],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[208], [dynamic expression])*/;
t0[209] = $$[417](t0[202],"op_Inequality",$$[-1],-1)/*t0[209] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Inequality", [dynamic expression], -1)*/;
$$[420](t0[209],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[209], [dynamic expression])*/;
t0[210] = $$[417](t0[202],"op_LessThan",$$[-1],-1)/*t0[210] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_LessThan", [dynamic expression], -1)*/;
$$[420](t0[210],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[210], [dynamic expression])*/;
t0[211] = $$[417](t0[202],"op_LessThanOrEqual",$$[-1],-1)/*t0[211] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_LessThanOrEqual", [dynamic expression], -1)*/;
$$[420](t0[211],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[211], [dynamic expression])*/;
t0[212] = $$[417](t0[202],"op_GreaterThan",$$[-1],-1)/*t0[212] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_GreaterThan", [dynamic expression], -1)*/;
$$[420](t0[212],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[212], [dynamic expression])*/;
t0[213] = $$[417](t0[202],"op_GreaterThanOrEqual",$$[-1],-1)/*t0[213] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_GreaterThanOrEqual", [dynamic expression], -1)*/;
$$[420](t0[213],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[213], [dynamic expression])*/;
t0[214] = $$[417](t0[202],"op_Equality",$$[-1],-1)/*t0[214] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Equality", [dynamic expression], -1)*/;
$$[420](t0[214],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[214], [dynamic expression])*/;
t0[215] = $$[417](t0[202],"op_Inequality",$$[-1],-1)/*t0[215] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Inequality", [dynamic expression], -1)*/;
$$[420](t0[215],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[215], [dynamic expression])*/;
t0[216] = $$[417](t0[202],"op_Subtraction",$$[-1],-1)/*t0[216] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Subtraction", [dynamic expression], -1)*/;
$$[420](t0[216],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[216], [dynamic expression])*/;
t0[217] = $$[417](t0[202],"op_Subtraction",$$[-1],-1)/*t0[217] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Subtraction", [dynamic expression], -1)*/;
$$[420](t0[217],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[217], [dynamic expression])*/;
t0[218] = $$[417](t0[202],"op_Subtraction",$$[-1],-1)/*t0[218] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[202], "op_Subtraction", [dynamic expression], -1)*/;
$$[420](t0[218],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[218], [dynamic expression])*/;
$$[420](t0[202],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[202], [dynamic expression])*/;
$$[420](t0[202],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[202], [dynamic expression])*/;
t0[219] = $$[416]("System","AttributeTargets",t0[0],29,null,false,false)/*t0[219] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "AttributeTargets", t0[0], [dynamic expression], null, False, False)*/;
t0[220] = $$[416]("System","FlagsAttribute",t0[0],157,null,false,false)/*t0[220] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "FlagsAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[221] = $$[418](t0[220],".ctor",$$[323])/*t0[221] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[220], ".ctor", [dynamic expression])*/;
$$[420](t0[219],$$[323].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[219], [dynamic expression])*/;
t0[222] = $$[416]("System.Diagnostics","ObjectDebugger",t0[0],48,null,false,false)/*t0[222] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Diagnostics", "ObjectDebugger", t0[0], [dynamic expression], null, False, False)*/;
t0[223] = $$[417](t0[222],"GetSystemObjectVTable",$$[88],-1)/*t0[223] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[222], "GetSystemObjectVTable", [dynamic expression], -1)*/;
$$[420](t0[223],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[223], [dynamic expression])*/;
t0[224] = $$[417](t0[222],"GetTypeFullName",$$[89],-1)/*t0[224] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[222], "GetTypeFullName", [dynamic expression], -1)*/;
t0[225] = $$[417](t0[222],"DebugObject",$$[90],-1)/*t0[225] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[222], "DebugObject", [dynamic expression], -1)*/;
$$[420](t0[225],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[225], [dynamic expression])*/;
$$[420](t0[225],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[225], [dynamic expression])*/;
t0[226] = $$[417](t0[222],"BuildDebuggableObject",$$[91],-1)/*t0[226] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[222], "BuildDebuggableObject", [dynamic expression], -1)*/;
$$[420](t0[226],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[226], [dynamic expression])*/;
t0[227] = $$[416]("","IntRef",t0[0],53,null,false,false)/*t0[227] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "IntRef", t0[0], [dynamic expression], null, False, False)*/;
t0[228] = $$[418](t0[227],".ctor",$$[92])/*t0[228] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[227], ".ctor", [dynamic expression])*/;
$$[420](t0[228],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[228], [dynamic expression])*/;
t0[229] = $$[416]("System.Reflection","ReflectionHelpers",t0[0],54,null,false,false)/*t0[229] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "ReflectionHelpers", t0[0], [dynamic expression], null, False, False)*/;
t0[230] = $$[417](t0[229],"Initialize",$$[93],-1)/*t0[230] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "Initialize", [dynamic expression], -1)*/;
t0[231] = $$[417](t0[229],"GetType",$$[94],-1)/*t0[231] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetType", [dynamic expression], -1)*/;
t0[232] = $$[417](t0[229],"GetTypeFromHandle",$$[95],-1)/*t0[232] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetTypeFromHandle", [dynamic expression], -1)*/;
t0[233] = $$[417](t0[229],"GetTypeByName",$$[96],-1)/*t0[233] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetTypeByName", [dynamic expression], -1)*/;
t0[234] = $$[417](t0[229],"GetClassFromAssembly",$$[97],-1)/*t0[234] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetClassFromAssembly", [dynamic expression], -1)*/;
t0[235] = $$[417](t0[229],"GetTypeFromClass",$$[98],-1)/*t0[235] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetTypeFromClass", [dynamic expression], -1)*/;
t0[236] = $$[417](t0[229],"BrokenGetTypeFromClass",$$[99],-1)/*t0[236] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "BrokenGetTypeFromClass", [dynamic expression], -1)*/;
t0[237] = $$[417](t0[229],"BrokenGetType",$$[100],-1)/*t0[237] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "BrokenGetType", [dynamic expression], -1)*/;
t0[238] = $$[417](t0[229],"TrampolineInvokeMethod",$$[101],-1)/*t0[238] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "TrampolineInvokeMethod", [dynamic expression], -1)*/;
t0[239] = $$[417](t0[229],"TrampolineInvokeConstructor",$$[102],-1)/*t0[239] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "TrampolineInvokeConstructor", [dynamic expression], -1)*/;
t0[240] = $$[417](t0[229],"CreateInstance",$$[103],-1)/*t0[240] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "CreateInstance", [dynamic expression], -1)*/;
t0[241] = $$[417](t0[229],"CreateInstance",$$[104],-1)/*t0[241] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "CreateInstance", [dynamic expression], -1)*/;
t0[242] = $$[417](t0[229],"GetDefaultConstructor",$$[105],-1)/*t0[242] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GetDefaultConstructor", [dynamic expression], -1)*/;
t0[243] = $$[417](t0[229],"CreateInstance",$$[106],-1)/*t0[243] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "CreateInstance", [dynamic expression], -1)*/;
t0[244] = $$[417](t0[229],"IsDefined",$$[107],-1)/*t0[244] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "IsDefined", [dynamic expression], -1)*/;
t0[245] = $$[417](t0[229],"TempHackGenerateCodeForTrampolineInvokeMethod",$$[-1],-1)/*t0[245] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "TempHackGenerateCodeForTrampolineInvokeMethod", [dynamic expression], -1)*/;
$$[420](t0[245],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[245], [dynamic expression])*/;
t0[246] = $$[417](t0[229],"TempHackGenerateCodeForTrampolineInvokeInterfaceMethod",$$[-1],-1)/*t0[246] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "TempHackGenerateCodeForTrampolineInvokeInterfaceMethod", [dynamic expression], -1)*/;
$$[420](t0[246],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[246], [dynamic expression])*/;
t0[247] = $$[417](t0[229],"GenerateCodeForNewObject",$$[-1],-1)/*t0[247] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[229], "GenerateCodeForNewObject", [dynamic expression], -1)*/;
$$[420](t0[247],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[247], [dynamic expression])*/;
t0[248] = $$[416]("System","NativeFunction",t0[0],57,null,false,false)/*t0[248] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeFunction", t0[0], [dynamic expression], null, False, False)*/;
t0[249] = $$[417](t0[248],"Apply",$$[-1],-1)/*t0[249] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "Apply", [dynamic expression], -1)*/;
$$[420](t0[249],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[249], [dynamic expression])*/;
t0[250] = $$[417](t0[248],"Call",$$[-1],-1)/*t0[250] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "Call", [dynamic expression], -1)*/;
$$[420](t0[250],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[250], [dynamic expression])*/;
t0[251] = $$[417](t0[248],"op_Equality",$$[-1],-1)/*t0[251] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "op_Equality", [dynamic expression], -1)*/;
$$[420](t0[251],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[251], [dynamic expression])*/;
t0[252] = $$[417](t0[248],"op_Inequality",$$[-1],-1)/*t0[252] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "op_Inequality", [dynamic expression], -1)*/;
$$[420](t0[252],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[252], [dynamic expression])*/;
t0[253] = $$[417](t0[248],"GetArguments",$$[-1],-1)/*t0[253] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "GetArguments", [dynamic expression], -1)*/;
$$[420](t0[253],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[253], [dynamic expression])*/;
t0[254] = $$[417](t0[248],"NativeToString",$$[-1],-1)/*t0[254] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "NativeToString", [dynamic expression], -1)*/;
$$[420](t0[254],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[254], [dynamic expression])*/;
t0[255] = $$[417](t0[248],"ToString",$$[108],0)/*t0[255] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "ToString", [dynamic expression], [dynamic expression])*/;
t0[256] = $$[417](t0[248],"Bind",$$[109],-1)/*t0[256] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "Bind", [dynamic expression], -1)*/;
$$[420](t0[256],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[256], [dynamic expression])*/;
t0[257] = $$[417](t0[248],"GenerateCodeForThis",$$[-1],-1)/*t0[257] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "GenerateCodeForThis", [dynamic expression], -1)*/;
$$[420](t0[257],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[257], [dynamic expression])*/;
t0[258] = $$[417](t0[248],"GenerateCodeForBoundNativeFunctionSimple",$$[-1],-1)/*t0[258] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "GenerateCodeForBoundNativeFunctionSimple", [dynamic expression], -1)*/;
$$[420](t0[258],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[258], [dynamic expression])*/;
t0[259] = $$[417](t0[248],"GenerateCodeForBoundNativeFunction",$$[-1],-1)/*t0[259] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "GenerateCodeForBoundNativeFunction", [dynamic expression], -1)*/;
$$[420](t0[259],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[259], [dynamic expression])*/;
t0[260] = $$[417](t0[248],"op_Explicit",$$[110],-1)/*t0[260] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[260],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[260], [dynamic expression])*/;
t0[261] = $$[418](t0[248],".ctor",$$[-1])/*t0[261] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[248], ".ctor", [dynamic expression])*/;
$$[420](t0[261],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[261], [dynamic expression])*/;
$$[420](t0[248],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[248], [dynamic expression])*/;
$$[420](t0[248],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[248], [dynamic expression])*/;
t0[262] = $$[416]("System","NativeArray`1",t0[0],58,null,false,false)/*t0[262] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeArray`1", t0[0], [dynamic expression], null, False, False)*/;
t0[263] = $$[417](t0[262],"get_Length",$$[-1],-1)/*t0[263] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "get_Length", [dynamic expression], -1)*/;
$$[420](t0[263],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[263], [dynamic expression])*/;
t0[264] = $$[417](t0[262],"set_Length",$$[-1],-1)/*t0[264] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "set_Length", [dynamic expression], -1)*/;
$$[420](t0[264],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[264], [dynamic expression])*/;
t0[265] = $$[417](t0[262],"get_Item",$$[-1],-1)/*t0[265] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "get_Item", [dynamic expression], -1)*/;
$$[420](t0[265],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[265], [dynamic expression])*/;
t0[266] = $$[417](t0[262],"set_Item",$$[-1],-1)/*t0[266] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "set_Item", [dynamic expression], -1)*/;
$$[420](t0[266],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[266], [dynamic expression])*/;
t0[267] = $$[417](t0[262],"Push",$$[-1],-1)/*t0[267] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Push", [dynamic expression], -1)*/;
$$[420](t0[267],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[267], [dynamic expression])*/;
$$[420](t0[267],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[267], [dynamic expression])*/;
t0[268] = $$[417](t0[262],"Join",$$[-1],-1)/*t0[268] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Join", [dynamic expression], -1)*/;
$$[420](t0[268],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[268], [dynamic expression])*/;
$$[420](t0[268],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[268], [dynamic expression])*/;
t0[269] = $$[417](t0[262],"Split",$$[-1],-1)/*t0[269] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Split", [dynamic expression], -1)*/;
$$[420](t0[269],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[269], [dynamic expression])*/;
$$[420](t0[269],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[269], [dynamic expression])*/;
t0[270] = $$[417](t0[262],"Pop",$$[-1],-1)/*t0[270] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Pop", [dynamic expression], -1)*/;
$$[420](t0[270],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[270], [dynamic expression])*/;
$$[420](t0[270],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[270], [dynamic expression])*/;
t0[271] = $$[417](t0[262],"Shift",$$[-1],-1)/*t0[271] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Shift", [dynamic expression], -1)*/;
$$[420](t0[271],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[271], [dynamic expression])*/;
$$[420](t0[271],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[271], [dynamic expression])*/;
t0[272] = $$[417](t0[262],"Unshift",$$[-1],-1)/*t0[272] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "Unshift", [dynamic expression], -1)*/;
$$[420](t0[272],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[272], [dynamic expression])*/;
$$[420](t0[272],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[272], [dynamic expression])*/;
t0[273] = $$[417](t0[262],"RemoveAt",$$[111],-1)/*t0[273] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[262], "RemoveAt", [dynamic expression], -1)*/;
t0[274] = $$[419](t0[262],"Length",t0[263],t0[264])/*t0[274] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[262], "Length", t0[263], t0[264])*/;
t0[275] = $$[419](t0[262],"Item",t0[265],t0[266])/*t0[275] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[262], "Item", t0[265], t0[266])*/;
$$[420](t0[262],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[262], [dynamic expression])*/;
$$[420](t0[262],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[262], [dynamic expression])*/;
$$[420](t0[262],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[262], [dynamic expression])*/;
t0[276] = $$[416]("System","NativeArray",t0[0],59,null,false,false)/*t0[276] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeArray", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[276],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[276], [dynamic expression])*/;
$$[420](t0[276],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[276], [dynamic expression])*/;
t0[277] = $$[416]("System","Array",t0[0],60,null,false,false)/*t0[277] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Array", t0[0], [dynamic expression], null, False, False)*/;
t0[278] = $$[417](t0[277],"get_Length",$$[-1],-1)/*t0[278] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[277], "get_Length", [dynamic expression], -1)*/;
$$[420](t0[278],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[278], [dynamic expression])*/;
t0[279] = $$[418](t0[277],".ctor",$$[112])/*t0[279] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[277], ".ctor", [dynamic expression])*/;
t0[280] = $$[419](t0[277],"Length",t0[278],null)/*t0[280] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[277], "Length", t0[278], null)*/;
$$[420](t0[277],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[277], [dynamic expression])*/;
$$[420](t0[277],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[277], [dynamic expression])*/;
t0[281] = $$[416]("System.Reflection","PropertyInfo",t0[0],61,null,false,false)/*t0[281] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "PropertyInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[282] = $$[417](t0[281],"get_GetMethod",null,7)/*t0[282] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[281], "get_GetMethod", null, [dynamic expression])*/;
t0[283] = $$[417](t0[281],"get_SetMethod",null,8)/*t0[283] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[281], "get_SetMethod", null, [dynamic expression])*/;
t0[284] = $$[418](t0[281],".ctor",$$[113])/*t0[284] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[281], ".ctor", [dynamic expression])*/;
t0[285] = $$[419](t0[281],"GetMethod",t0[282],null)/*t0[285] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[281], "GetMethod", t0[282], null)*/;
t0[286] = $$[419](t0[281],"SetMethod",t0[283],null)/*t0[286] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[281], "SetMethod", t0[283], null)*/;
t0[287] = $$[416]("System.Reflection","RuntimePropertyInfo",t0[0],62,null,false,false)/*t0[287] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "RuntimePropertyInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[288] = $$[417](t0[287],"get_DeclaringType",$$[114],4)/*t0[288] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[287], "get_DeclaringType", [dynamic expression], [dynamic expression])*/;
t0[289] = $$[417](t0[287],"get_GetMethod",$$[115],7)/*t0[289] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[287], "get_GetMethod", [dynamic expression], [dynamic expression])*/;
t0[290] = $$[417](t0[287],"get_SetMethod",$$[116],8)/*t0[290] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[287], "get_SetMethod", [dynamic expression], [dynamic expression])*/;
t0[291] = $$[417](t0[287],"get_Name",$$[117],5)/*t0[291] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[287], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[292] = $$[417](t0[287],"IsDefined",$$[118],6)/*t0[292] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[287], "IsDefined", [dynamic expression], [dynamic expression])*/;
t0[293] = $$[418](t0[287],".ctor",$$[119])/*t0[293] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[287], ".ctor", [dynamic expression])*/;
t0[294] = $$[419](t0[287],"DeclaringType",t0[288],null)/*t0[294] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[287], "DeclaringType", t0[288], null)*/;
t0[295] = $$[419](t0[287],"GetMethod",t0[289],null)/*t0[295] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[287], "GetMethod", t0[289], null)*/;
t0[296] = $$[419](t0[287],"SetMethod",t0[290],null)/*t0[296] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[287], "SetMethod", t0[290], null)*/;
t0[297] = $$[419](t0[287],"Name",t0[291],null)/*t0[297] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[287], "Name", t0[291], null)*/;
t0[298] = $$[416]("System","Activator",t0[0],63,null,false,false)/*t0[298] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Activator", t0[0], [dynamic expression], null, False, False)*/;
t0[299] = $$[417](t0[298],"CreateInstance",$$[120],-1)/*t0[299] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[298], "CreateInstance", [dynamic expression], -1)*/;
t0[300] = $$[417](t0[298],"CreateInstance",$$[120],-1)/*t0[300] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[298], "CreateInstance", [dynamic expression], -1)*/;
t0[301] = $$[416]("System.Reflection","MethodBase",t0[0],64,null,false,false)/*t0[301] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "MethodBase", t0[0], [dynamic expression], null, False, False)*/;
t0[302] = $$[417](t0[301],"Invoke",null,7)/*t0[302] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[301], "Invoke", null, [dynamic expression])*/;
t0[303] = $$[418](t0[301],".ctor",$$[122])/*t0[303] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[301], ".ctor", [dynamic expression])*/;
t0[304] = $$[416]("System.Collections","IList",t0[0],65,null,true,false)/*t0[304] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "IList", t0[0], [dynamic expression], null, True, False)*/;
t0[305] = $$[417](t0[304],"get_Item",null,0)/*t0[305] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[304], "get_Item", null, [dynamic expression])*/;
t0[306] = $$[417](t0[304],"set_Item",null,1)/*t0[306] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[304], "set_Item", null, [dynamic expression])*/;
t0[307] = $$[417](t0[304],"Add",null,2)/*t0[307] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[304], "Add", null, [dynamic expression])*/;
t0[308] = $$[417](t0[304],"Clear",null,3)/*t0[308] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[304], "Clear", null, [dynamic expression])*/;
t0[309] = $$[417](t0[304],"get_Count",null,4)/*t0[309] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[304], "get_Count", null, [dynamic expression])*/;
t0[310] = $$[419](t0[304],"Item",t0[305],t0[306])/*t0[310] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[304], "Item", t0[305], t0[306])*/;
t0[311] = $$[419](t0[304],"Count",t0[309],null)/*t0[311] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[304], "Count", t0[309], null)*/;
$$[420](t0[304],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[304], [dynamic expression])*/;
$$[420](t0[304],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[304], [dynamic expression])*/;
t0[312] = $$[416]("System.Collections","IEnumerable",t0[0],66,null,true,false)/*t0[312] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "IEnumerable", t0[0], [dynamic expression], null, True, False)*/;
t0[313] = $$[417](t0[312],"GetEnumerator",null,0)/*t0[313] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[312], "GetEnumerator", null, [dynamic expression])*/;
$$[420](t0[312],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[312], [dynamic expression])*/;
t0[314] = $$[416]("System.Collections.Generic","IEnumerable`1",t0[0],67,null,true,false)/*t0[314] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "IEnumerable`1", t0[0], [dynamic expression], null, True, False)*/;
t0[315] = $$[417](t0[314],"GetEnumerator",null,0)/*t0[315] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[314], "GetEnumerator", null, [dynamic expression])*/;
$$[420](t0[314],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[314], [dynamic expression])*/;
t0[316] = $$[416]("System.Collections.Generic","ICollection`1",t0[0],68,null,true,false)/*t0[316] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "ICollection`1", t0[0], [dynamic expression], null, True, False)*/;
t0[317] = $$[417](t0[316],"get_Count",null,0)/*t0[317] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "get_Count", null, [dynamic expression])*/;
t0[318] = $$[417](t0[316],"get_IsReadOnly",null,1)/*t0[318] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "get_IsReadOnly", null, [dynamic expression])*/;
t0[319] = $$[417](t0[316],"Add",null,2)/*t0[319] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "Add", null, [dynamic expression])*/;
t0[320] = $$[417](t0[316],"Contains",null,3)/*t0[320] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "Contains", null, [dynamic expression])*/;
t0[321] = $$[417](t0[316],"CopyTo",null,4)/*t0[321] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "CopyTo", null, [dynamic expression])*/;
t0[322] = $$[417](t0[316],"Remove",null,5)/*t0[322] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[316], "Remove", null, [dynamic expression])*/;
t0[323] = $$[419](t0[316],"Count",t0[317],null)/*t0[323] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[316], "Count", t0[317], null)*/;
t0[324] = $$[419](t0[316],"IsReadOnly",t0[318],null)/*t0[324] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[316], "IsReadOnly", t0[318], null)*/;
$$[420](t0[316],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[316], [dynamic expression])*/;
t0[325] = $$[416]("System","Global",t0[0],69,null,false,false)/*t0[325] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Global", t0[0], [dynamic expression], null, False, False)*/;
t0[326] = $$[417](t0[325],"SetInterval",$$[-1],-1)/*t0[326] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[325], "SetInterval", [dynamic expression], -1)*/;
$$[420](t0[326],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[326], [dynamic expression])*/;
t0[327] = $$[417](t0[325],"ClearInterval",$$[-1],-1)/*t0[327] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[325], "ClearInterval", [dynamic expression], -1)*/;
$$[420](t0[327],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[327], [dynamic expression])*/;
t0[328] = $$[417](t0[325],"SetTimeout",$$[-1],-1)/*t0[328] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[325], "SetTimeout", [dynamic expression], -1)*/;
$$[420](t0[328],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[328], [dynamic expression])*/;
t0[329] = $$[417](t0[325],"ClearTimeout",$$[-1],-1)/*t0[329] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[325], "ClearTimeout", [dynamic expression], -1)*/;
$$[420](t0[329],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[329], [dynamic expression])*/;
$$[420](t0[325],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[325], [dynamic expression])*/;
t0[330] = $$[416]("System","RuntimeMethodHandle",t0[0],70,null,false,false)/*t0[330] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "RuntimeMethodHandle", t0[0], [dynamic expression], null, False, False)*/;
t0[331] = $$[416]("System","Math",t0[0],71,null,false,false)/*t0[331] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Math", t0[0], [dynamic expression], null, False, False)*/;
t0[332] = $$[417](t0[331],"Ceiling",$$[-1],-1)/*t0[332] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Ceiling", [dynamic expression], -1)*/;
$$[420](t0[332],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[332], [dynamic expression])*/;
t0[333] = $$[417](t0[331],"Floor",$$[-1],-1)/*t0[333] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Floor", [dynamic expression], -1)*/;
$$[420](t0[333],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[333], [dynamic expression])*/;
t0[334] = $$[417](t0[331],"Abs",$$[-1],-1)/*t0[334] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Abs", [dynamic expression], -1)*/;
$$[420](t0[334],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[334], [dynamic expression])*/;
t0[335] = $$[417](t0[331],"Round",$$[-1],-1)/*t0[335] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Round", [dynamic expression], -1)*/;
$$[420](t0[335],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[335], [dynamic expression])*/;
t0[336] = $$[417](t0[331],"Max",$$[-1],-1)/*t0[336] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Max", [dynamic expression], -1)*/;
$$[420](t0[336],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[336], [dynamic expression])*/;
t0[337] = $$[417](t0[331],"Min",$$[-1],-1)/*t0[337] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Min", [dynamic expression], -1)*/;
$$[420](t0[337],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[337], [dynamic expression])*/;
t0[338] = $$[417](t0[331],"Min",$$[-1],-1)/*t0[338] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Min", [dynamic expression], -1)*/;
$$[420](t0[338],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[338], [dynamic expression])*/;
t0[339] = $$[417](t0[331],"Sin",$$[-1],-1)/*t0[339] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Sin", [dynamic expression], -1)*/;
$$[420](t0[339],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[339], [dynamic expression])*/;
t0[340] = $$[417](t0[331],"Cos",$$[-1],-1)/*t0[340] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Cos", [dynamic expression], -1)*/;
$$[420](t0[340],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[340], [dynamic expression])*/;
t0[341] = $$[417](t0[331],"Tan",$$[-1],-1)/*t0[341] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Tan", [dynamic expression], -1)*/;
$$[420](t0[341],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[341], [dynamic expression])*/;
t0[342] = $$[417](t0[331],"Sqrt",$$[-1],-1)/*t0[342] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Sqrt", [dynamic expression], -1)*/;
$$[420](t0[342],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[342], [dynamic expression])*/;
t0[343] = $$[417](t0[331],"Sqrt",$$[-1],-1)/*t0[343] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Sqrt", [dynamic expression], -1)*/;
$$[420](t0[343],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[343], [dynamic expression])*/;
t0[344] = $$[417](t0[331],"Sqrt",$$[-1],-1)/*t0[344] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[331], "Sqrt", [dynamic expression], -1)*/;
$$[420](t0[344],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[344], [dynamic expression])*/;
$$[420](t0[331],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[331], [dynamic expression])*/;
t0[345] = $$[416]("System","Double",t0[0],72,null,false,false)/*t0[345] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Double", t0[0], [dynamic expression], null, False, False)*/;
t0[346] = $$[417](t0[345],"op_Explicit",$$[-1],-1)/*t0[346] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[345], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[346],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[346], [dynamic expression])*/;
t0[347] = $$[417](t0[345],"op_Explicit",$$[-1],-1)/*t0[347] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[345], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[347],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[347], [dynamic expression])*/;
$$[420](t0[345],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[345], [dynamic expression])*/;
$$[420](t0[345],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[345], [dynamic expression])*/;
t0[348] = $$[416]("System","IDisposable",t0[0],73,null,true,false)/*t0[348] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "IDisposable", t0[0], [dynamic expression], null, True, False)*/;
t0[349] = $$[417](t0[348],"Dispose",null,0)/*t0[349] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[348], "Dispose", null, [dynamic expression])*/;
$$[420](t0[348],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[348], [dynamic expression])*/;
t0[350] = $$[416]("System.Threading","Semaphore",t0[0],74,null,false,false)/*t0[350] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "Semaphore", t0[0], [dynamic expression], null, False, False)*/;
t0[351] = $$[417](t0[350],"Acquire",$$[123],-1)/*t0[351] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[350], "Acquire", [dynamic expression], -1)*/;
t0[352] = $$[417](t0[350],"Acquire",$$[124],-1)/*t0[352] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[350], "Acquire", [dynamic expression], -1)*/;
$$[420](t0[352],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[352], [dynamic expression])*/;
t0[353] = $$[417](t0[350],"Release",$$[125],-1)/*t0[353] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[350], "Release", [dynamic expression], -1)*/;
t0[354] = $$[417](t0[350],"Release",$$[126],-1)/*t0[354] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[350], "Release", [dynamic expression], -1)*/;
$$[420](t0[354],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[354], [dynamic expression])*/;
t0[355] = $$[418](t0[350],".ctor",$$[127])/*t0[355] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[350], ".ctor", [dynamic expression])*/;
t0[356] = $$[416]("","WaitingTask",t0[0],75,null,false,false)/*t0[356] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "WaitingTask", t0[0], [dynamic expression], null, False, False)*/;
t0[357] = $$[418](t0[356],".ctor",$$[128])/*t0[357] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[356], ".ctor", [dynamic expression])*/;
t0[358] = $$[416]("System.Threading","WaitCallback",t0[0],76,null,false,false)/*t0[358] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "WaitCallback", t0[0], [dynamic expression], null, False, False)*/;
t0[359] = $$[417](t0[358],"Invoke",null,4)/*t0[359] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[358], "Invoke", null, [dynamic expression])*/;
t0[360] = $$[417](t0[358],"BeginInvoke",null,8)/*t0[360] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[358], "BeginInvoke", null, [dynamic expression])*/;
t0[361] = $$[417](t0[358],"EndInvoke",null,9)/*t0[361] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[358], "EndInvoke", null, [dynamic expression])*/;
t0[362] = $$[418](t0[358],".ctor",null)/*t0[362] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[358], ".ctor", null)*/;
t0[363] = $$[416]("System.Reflection","ConstructorInfo",t0[0],77,null,false,false)/*t0[363] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "ConstructorInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[364] = $$[418](t0[363],".ctor",$$[129])/*t0[364] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[363], ".ctor", [dynamic expression])*/;
t0[365] = $$[416]("System.Reflection","RuntimeConstructorInfo",t0[0],78,null,false,false)/*t0[365] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "RuntimeConstructorInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[366] = $$[417](t0[365],"get_DeclaringType",$$[130],4)/*t0[366] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[365], "get_DeclaringType", [dynamic expression], [dynamic expression])*/;
t0[367] = $$[417](t0[365],"get_Name",$$[131],5)/*t0[367] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[365], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[368] = $$[417](t0[365],"Invoke",$$[132],7)/*t0[368] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[365], "Invoke", [dynamic expression], [dynamic expression])*/;
t0[369] = $$[417](t0[365],"IsDefined",$$[133],6)/*t0[369] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[365], "IsDefined", [dynamic expression], [dynamic expression])*/;
t0[370] = $$[418](t0[365],".ctor",$$[134])/*t0[370] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[365], ".ctor", [dynamic expression])*/;
t0[371] = $$[419](t0[365],"DeclaringType",t0[366],null)/*t0[371] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[365], "DeclaringType", t0[366], null)*/;
t0[372] = $$[419](t0[365],"Name",t0[367],null)/*t0[372] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[365], "Name", t0[367], null)*/;
t0[373] = $$[416]("System.Collections","IEnumerator",t0[0],79,null,true,false)/*t0[373] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "IEnumerator", t0[0], [dynamic expression], null, True, False)*/;
t0[374] = $$[417](t0[373],"get_Current",null,0)/*t0[374] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[373], "get_Current", null, [dynamic expression])*/;
t0[375] = $$[417](t0[373],"MoveNext",null,1)/*t0[375] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[373], "MoveNext", null, [dynamic expression])*/;
t0[376] = $$[417](t0[373],"Reset",null,2)/*t0[376] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[373], "Reset", null, [dynamic expression])*/;
t0[377] = $$[419](t0[373],"Current",t0[374],null)/*t0[377] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[373], "Current", t0[374], null)*/;
$$[420](t0[373],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[373], [dynamic expression])*/;
t0[378] = $$[416]("System.Collections.Generic","IEnumerator`1",t0[0],80,null,true,false)/*t0[378] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "IEnumerator`1", t0[0], [dynamic expression], null, True, False)*/;
t0[379] = $$[417](t0[378],"get_Current",null,0)/*t0[379] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[378], "get_Current", null, [dynamic expression])*/;
t0[380] = $$[419](t0[378],"Current",t0[379],null)/*t0[380] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[378], "Current", t0[379], null)*/;
$$[420](t0[378],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[378], [dynamic expression])*/;
t0[381] = $$[416]("System.Threading","Thread",t0[0],81,null,false,false)/*t0[381] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "Thread", t0[0], [dynamic expression], null, False, False)*/;
t0[382] = $$[417](t0[381],"get_Task",$$[135],-1)/*t0[382] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_Task", [dynamic expression], -1)*/;
$$[420](t0[382],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[382], [dynamic expression])*/;
$$[420](t0[382],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[382], [dynamic expression])*/;
t0[383] = $$[417](t0[381],"set_Task",$$[136],-1)/*t0[383] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "set_Task", [dynamic expression], -1)*/;
$$[420](t0[383],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[383], [dynamic expression])*/;
$$[420](t0[383],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[383], [dynamic expression])*/;
t0[384] = $$[417](t0[381],"get_SIP",$$[137],-1)/*t0[384] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_SIP", [dynamic expression], -1)*/;
t0[385] = $$[417](t0[381],"get_Priority",$$[138],-1)/*t0[385] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_Priority", [dynamic expression], -1)*/;
t0[386] = $$[417](t0[381],"get_UnhandledException",$$[139],-1)/*t0[386] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_UnhandledException", [dynamic expression], -1)*/;
t0[387] = $$[417](t0[381],"get_Callback",$$[140],-1)/*t0[387] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_Callback", [dynamic expression], -1)*/;
$$[420](t0[387],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[387], [dynamic expression])*/;
t0[388] = $$[417](t0[381],"set_Callback",$$[141],-1)/*t0[388] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "set_Callback", [dynamic expression], -1)*/;
$$[420](t0[388],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[388], [dynamic expression])*/;
t0[389] = $$[417](t0[381],"get_Name",$$[142],-1)/*t0[389] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[389],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[389], [dynamic expression])*/;
t0[390] = $$[417](t0[381],"set_Name",$$[143],-1)/*t0[390] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[390],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[390], [dynamic expression])*/;
t0[391] = $$[417](t0[381],"get_IsBackground",$$[144],-1)/*t0[391] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_IsBackground", [dynamic expression], -1)*/;
t0[392] = $$[417](t0[381],"set_IsBackground",$$[145],-1)/*t0[392] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "set_IsBackground", [dynamic expression], -1)*/;
t0[393] = $$[417](t0[381],"CreateSystemThread",$$[146],-1)/*t0[393] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "CreateSystemThread", [dynamic expression], -1)*/;
$$[420](t0[393],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[393], [dynamic expression])*/;
t0[394] = $$[417](t0[381],"Start",$$[147],-1)/*t0[394] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Start", [dynamic expression], -1)*/;
$$[420](t0[394],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[394], [dynamic expression])*/;
t0[395] = $$[417](t0[381],"Start",$$[148],-1)/*t0[395] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Start", [dynamic expression], -1)*/;
t0[396] = $$[417](t0[381],"Abort",$$[149],-1)/*t0[396] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Abort", [dynamic expression], -1)*/;
t0[397] = $$[417](t0[381],"Abort",$$[150],-1)/*t0[397] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Abort", [dynamic expression], -1)*/;
t0[398] = $$[417](t0[381],"ParametizedTaskFunction",$$[151],-1)/*t0[398] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "ParametizedTaskFunction", [dynamic expression], -1)*/;
t0[399] = $$[417](t0[381],"InternalCallback",$$[152],-1)/*t0[399] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "InternalCallback", [dynamic expression], -1)*/;
$$[420](t0[399],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[399], [dynamic expression])*/;
t0[400] = $$[417](t0[381],"InternalSleep",$$[153],-1)/*t0[400] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "InternalSleep", [dynamic expression], -1)*/;
t0[401] = $$[417](t0[381],"InternalSleep",$$[154],-1)/*t0[401] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "InternalSleep", [dynamic expression], -1)*/;
t0[402] = $$[417](t0[381],"HandleAbortException",$$[155],-1)/*t0[402] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "HandleAbortException", [dynamic expression], -1)*/;
$$[420](t0[402],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[402], [dynamic expression])*/;
t0[403] = $$[417](t0[381],"WakeUp",$$[156],-1)/*t0[403] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "WakeUp", [dynamic expression], -1)*/;
$$[420](t0[403],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[403], [dynamic expression])*/;
t0[404] = $$[417](t0[381],"ToString",$$[157],0)/*t0[404] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "ToString", [dynamic expression], [dynamic expression])*/;
t0[405] = $$[417](t0[381],"get_CurrentThread",$$[158],-1)/*t0[405] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "get_CurrentThread", [dynamic expression], -1)*/;
t0[406] = $$[417](t0[381],"Sleep",$$[159],-1)/*t0[406] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Sleep", [dynamic expression], -1)*/;
t0[407] = $$[417](t0[381],"Sleep",$$[160],-1)/*t0[407] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Sleep", [dynamic expression], -1)*/;
t0[408] = $$[417](t0[381],"GetThreads",$$[161],-1)/*t0[408] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "GetThreads", [dynamic expression], -1)*/;
t0[409] = $$[417](t0[381],"Initialize",$$[162],-1)/*t0[409] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[381], "Initialize", [dynamic expression], -1)*/;
t0[410] = $$[418](t0[381],".ctor",$$[163])/*t0[410] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[410],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[410], [dynamic expression])*/;
t0[411] = $$[418](t0[381],".ctor",$$[164])/*t0[411] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[411],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[411], [dynamic expression])*/;
t0[412] = $$[418](t0[381],".ctor",$$[165])/*t0[412] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[412],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[412], [dynamic expression])*/;
t0[413] = $$[418](t0[381],".ctor",$$[166])/*t0[413] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[413],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[413], [dynamic expression])*/;
t0[414] = $$[418](t0[381],".ctor",$$[167])/*t0[414] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[414],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[414], [dynamic expression])*/;
t0[415] = $$[418](t0[381],".ctor",$$[168])/*t0[415] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[381], ".ctor", [dynamic expression])*/;
$$[420](t0[415],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[415], [dynamic expression])*/;
t0[416] = $$[419](t0[381],"Task",t0[382],t0[383])/*t0[416] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "Task", t0[382], t0[383])*/;
t0[417] = $$[419](t0[381],"SIP",t0[384],null)/*t0[417] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "SIP", t0[384], null)*/;
t0[418] = $$[419](t0[381],"Priority",t0[385],null)/*t0[418] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "Priority", t0[385], null)*/;
t0[419] = $$[419](t0[381],"UnhandledException",t0[386],null)/*t0[419] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "UnhandledException", t0[386], null)*/;
t0[420] = $$[419](t0[381],"Callback",t0[387],t0[388])/*t0[420] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "Callback", t0[387], t0[388])*/;
t0[421] = $$[419](t0[381],"Name",t0[389],t0[390])/*t0[421] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "Name", t0[389], t0[390])*/;
t0[422] = $$[419](t0[381],"IsBackground",t0[391],t0[392])/*t0[422] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "IsBackground", t0[391], t0[392])*/;
t0[423] = $$[419](t0[381],"CurrentThread",t0[405],null)/*t0[423] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[381], "CurrentThread", t0[405], null)*/;
$$[420](t0[381],$$[86].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[381], [dynamic expression])*/;
t0[424] = $$[416]("System.Threading","ThreadCallback",t0[0],83,null,false,false)/*t0[424] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadCallback", t0[0], [dynamic expression], null, False, False)*/;
t0[425] = $$[417](t0[424],"Invoke",null,4)/*t0[425] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[424], "Invoke", null, [dynamic expression])*/;
t0[426] = $$[417](t0[424],"BeginInvoke",null,8)/*t0[426] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[424], "BeginInvoke", null, [dynamic expression])*/;
t0[427] = $$[417](t0[424],"EndInvoke",null,9)/*t0[427] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[424], "EndInvoke", null, [dynamic expression])*/;
t0[428] = $$[418](t0[424],".ctor",null)/*t0[428] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[424], ".ctor", null)*/;
t0[429] = $$[416]("System.Threading","ThreadStart",t0[0],84,null,false,false)/*t0[429] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadStart", t0[0], [dynamic expression], null, False, False)*/;
t0[430] = $$[417](t0[429],"Invoke",null,4)/*t0[430] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[429], "Invoke", null, [dynamic expression])*/;
t0[431] = $$[417](t0[429],"BeginInvoke",null,8)/*t0[431] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[429], "BeginInvoke", null, [dynamic expression])*/;
t0[432] = $$[417](t0[429],"EndInvoke",null,9)/*t0[432] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[429], "EndInvoke", null, [dynamic expression])*/;
t0[433] = $$[418](t0[429],".ctor",null)/*t0[433] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[429], ".ctor", null)*/;
t0[434] = $$[416]("System.Threading","ParametizedThreadStart",t0[0],85,null,false,false)/*t0[434] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ParametizedThreadStart", t0[0], [dynamic expression], null, False, False)*/;
t0[435] = $$[417](t0[434],"Invoke",null,4)/*t0[435] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[434], "Invoke", null, [dynamic expression])*/;
t0[436] = $$[417](t0[434],"BeginInvoke",null,8)/*t0[436] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[434], "BeginInvoke", null, [dynamic expression])*/;
t0[437] = $$[417](t0[434],"EndInvoke",null,9)/*t0[437] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[434], "EndInvoke", null, [dynamic expression])*/;
t0[438] = $$[418](t0[434],".ctor",null)/*t0[438] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[434], ".ctor", null)*/;
t0[439] = $$[416]("System.Threading","ThreadPriority",t0[0],86,null,false,false)/*t0[439] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadPriority", t0[0], [dynamic expression], null, False, False)*/;
t0[440] = $$[416]("System","SystemException",t0[0],92,null,false,false)/*t0[440] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "SystemException", t0[0], [dynamic expression], null, False, False)*/;
t0[441] = $$[418](t0[440],".ctor",$$[169])/*t0[441] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[440], ".ctor", [dynamic expression])*/;
$$[420](t0[441],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[441], [dynamic expression])*/;
t0[442] = $$[418](t0[440],".ctor",$$[170])/*t0[442] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[440], ".ctor", [dynamic expression])*/;
$$[420](t0[442],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[442], [dynamic expression])*/;
t0[443] = $$[418](t0[440],".ctor",$$[171])/*t0[443] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[440], ".ctor", [dynamic expression])*/;
$$[420](t0[443],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[443], [dynamic expression])*/;
$$[420](t0[440],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[440], [dynamic expression])*/;
t0[444] = $$[416]("System","NativeNumber",t0[0],93,null,false,false)/*t0[444] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeNumber", t0[0], [dynamic expression], null, False, False)*/;
t0[445] = $$[417](t0[444],"GetHashCode",$$[172],1)/*t0[445] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "GetHashCode", [dynamic expression], [dynamic expression])*/;
t0[446] = $$[417](t0[444],"ToString",$$[173],0)/*t0[446] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "ToString", [dynamic expression], [dynamic expression])*/;
t0[447] = $$[417](t0[444],"NativeToString",$$[-1],-1)/*t0[447] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "NativeToString", [dynamic expression], -1)*/;
$$[420](t0[447],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[447], [dynamic expression])*/;
t0[448] = $$[417](t0[444],"op_Addition",$$[-1],-1)/*t0[448] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Addition", [dynamic expression], -1)*/;
$$[420](t0[448],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[448], [dynamic expression])*/;
t0[449] = $$[417](t0[444],"op_Addition",$$[-1],-1)/*t0[449] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Addition", [dynamic expression], -1)*/;
$$[420](t0[449],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[449], [dynamic expression])*/;
t0[450] = $$[417](t0[444],"op_Subtraction",$$[-1],-1)/*t0[450] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Subtraction", [dynamic expression], -1)*/;
$$[420](t0[450],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[450], [dynamic expression])*/;
t0[451] = $$[417](t0[444],"op_Division",$$[-1],-1)/*t0[451] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Division", [dynamic expression], -1)*/;
$$[420](t0[451],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[451], [dynamic expression])*/;
t0[452] = $$[417](t0[444],"op_Multiply",$$[-1],-1)/*t0[452] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Multiply", [dynamic expression], -1)*/;
$$[420](t0[452],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[452], [dynamic expression])*/;
t0[453] = $$[417](t0[444],"op_GreaterThan",$$[-1],-1)/*t0[453] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_GreaterThan", [dynamic expression], -1)*/;
$$[420](t0[453],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[453], [dynamic expression])*/;
t0[454] = $$[417](t0[444],"op_LessThan",$$[-1],-1)/*t0[454] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_LessThan", [dynamic expression], -1)*/;
$$[420](t0[454],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[454], [dynamic expression])*/;
t0[455] = $$[417](t0[444],"op_Equality",$$[-1],-1)/*t0[455] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Equality", [dynamic expression], -1)*/;
$$[420](t0[455],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[455], [dynamic expression])*/;
t0[456] = $$[417](t0[444],"op_Inequality",$$[-1],-1)/*t0[456] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "op_Inequality", [dynamic expression], -1)*/;
$$[420](t0[456],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[456], [dynamic expression])*/;
t0[457] = $$[417](t0[444],"ParseInt",$$[-1],-1)/*t0[457] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[444], "ParseInt", [dynamic expression], -1)*/;
$$[420](t0[457],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[457], [dynamic expression])*/;
$$[420](t0[444],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[444], [dynamic expression])*/;
$$[420](t0[444],$$[86].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[444], [dynamic expression])*/;
t0[458] = $$[416]("System","NullReferenceException",t0[0],94,null,false,false)/*t0[458] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NullReferenceException", t0[0], [dynamic expression], null, False, False)*/;
t0[459] = $$[418](t0[458],".ctor",$$[174])/*t0[459] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[458], ".ctor", [dynamic expression])*/;
$$[420](t0[459],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[459], [dynamic expression])*/;
t0[460] = $$[418](t0[458],".ctor",$$[175])/*t0[460] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[458], ".ctor", [dynamic expression])*/;
$$[420](t0[460],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[460], [dynamic expression])*/;
t0[461] = $$[418](t0[458],".ctor",$$[176])/*t0[461] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[458], ".ctor", [dynamic expression])*/;
$$[420](t0[458],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[458], [dynamic expression])*/;
t0[462] = $$[416]("System.Reflection","MethodInfo",t0[0],96,null,false,false)/*t0[462] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "MethodInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[463] = $$[418](t0[462],".ctor",$$[185])/*t0[463] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[462], ".ctor", [dynamic expression])*/;
t0[464] = $$[416]("System","ICloneable",t0[0],97,null,true,false)/*t0[464] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "ICloneable", t0[0], [dynamic expression], null, True, False)*/;
t0[465] = $$[417](t0[464],"Clone",null,0)/*t0[465] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[464], "Clone", null, [dynamic expression])*/;
$$[420](t0[464],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[464], [dynamic expression])*/;
t0[466] = $$[416]("System.Runtime","ICustomAttributeProvider",t0[0],98,null,true,false)/*t0[466] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "ICustomAttributeProvider", t0[0], [dynamic expression], null, True, False)*/;
t0[467] = $$[417](t0[466],"get_CustomAttributes",null,0)/*t0[467] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[466], "get_CustomAttributes", null, [dynamic expression])*/;
$$[420](t0[467],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[467], [dynamic expression])*/;
t0[468] = $$[419](t0[466],"CustomAttributes",t0[467],null)/*t0[468] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[466], "CustomAttributes", t0[467], null)*/;
t0[469] = $$[416]("System.Runtime","Class",t0[0],99,null,false,false)/*t0[469] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Class", t0[0], [dynamic expression], null, False, False)*/;
t0[470] = $$[417](t0[469],"get_Assembly",$$[186],-1)/*t0[470] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Assembly", [dynamic expression], -1)*/;
$$[420](t0[470],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[470], [dynamic expression])*/;
$$[420](t0[470],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[470], [dynamic expression])*/;
t0[471] = $$[417](t0[469],"set_Assembly",$$[187],-1)/*t0[471] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_Assembly", [dynamic expression], -1)*/;
$$[420](t0[471],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[471], [dynamic expression])*/;
$$[420](t0[471],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[471], [dynamic expression])*/;
t0[472] = $$[417](t0[469],"get_Name",$$[188],-1)/*t0[472] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[472],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[472], [dynamic expression])*/;
$$[420](t0[472],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[472], [dynamic expression])*/;
t0[473] = $$[417](t0[469],"set_Name",$$[189],-1)/*t0[473] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[473],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[473], [dynamic expression])*/;
$$[420](t0[473],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[473], [dynamic expression])*/;
t0[474] = $$[417](t0[469],"get_Namespace",$$[190],-1)/*t0[474] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Namespace", [dynamic expression], -1)*/;
$$[420](t0[474],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[474], [dynamic expression])*/;
$$[420](t0[474],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[474], [dynamic expression])*/;
t0[475] = $$[417](t0[469],"set_Namespace",$$[191],-1)/*t0[475] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_Namespace", [dynamic expression], -1)*/;
$$[420](t0[475],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[475], [dynamic expression])*/;
$$[420](t0[475],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[475], [dynamic expression])*/;
t0[476] = $$[417](t0[469],"get_DeclaringClass",$$[192],-1)/*t0[476] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[476],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[476], [dynamic expression])*/;
$$[420](t0[476],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[476], [dynamic expression])*/;
t0[477] = $$[417](t0[469],"set_DeclaringClass",$$[193],-1)/*t0[477] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[477],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[477], [dynamic expression])*/;
$$[420](t0[477],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[477], [dynamic expression])*/;
t0[478] = $$[417](t0[469],"get_BaseClass",$$[194],-1)/*t0[478] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_BaseClass", [dynamic expression], -1)*/;
t0[479] = $$[417](t0[469],"get_VTable",$$[195],-1)/*t0[479] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_VTable", [dynamic expression], -1)*/;
$$[420](t0[479],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[479], [dynamic expression])*/;
$$[420](t0[479],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[479], [dynamic expression])*/;
t0[480] = $$[417](t0[469],"set_VTable",$$[196],-1)/*t0[480] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_VTable", [dynamic expression], -1)*/;
$$[420](t0[480],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[480], [dynamic expression])*/;
$$[420](t0[480],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[480], [dynamic expression])*/;
t0[481] = $$[417](t0[469],"get_VTableDataPointer",$$[197],-1)/*t0[481] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_VTableDataPointer", [dynamic expression], -1)*/;
$$[420](t0[481],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[481], [dynamic expression])*/;
$$[420](t0[481],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[481], [dynamic expression])*/;
t0[482] = $$[417](t0[469],"set_VTableDataPointer",$$[198],-1)/*t0[482] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_VTableDataPointer", [dynamic expression], -1)*/;
$$[420](t0[482],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[482], [dynamic expression])*/;
$$[420](t0[482],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[482], [dynamic expression])*/;
t0[483] = $$[417](t0[469],"get_IsInterface",$$[199],-1)/*t0[483] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_IsInterface", [dynamic expression], -1)*/;
$$[420](t0[483],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[483], [dynamic expression])*/;
$$[420](t0[483],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[483], [dynamic expression])*/;
t0[484] = $$[417](t0[469],"set_IsInterface",$$[200],-1)/*t0[484] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_IsInterface", [dynamic expression], -1)*/;
$$[420](t0[484],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[484], [dynamic expression])*/;
$$[420](t0[484],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[484], [dynamic expression])*/;
t0[485] = $$[417](t0[469],"get_IsArray",$$[201],-1)/*t0[485] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_IsArray", [dynamic expression], -1)*/;
$$[420](t0[485],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[485], [dynamic expression])*/;
$$[420](t0[485],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[485], [dynamic expression])*/;
t0[486] = $$[417](t0[469],"set_IsArray",$$[202],-1)/*t0[486] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_IsArray", [dynamic expression], -1)*/;
$$[420](t0[486],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[486], [dynamic expression])*/;
$$[420](t0[486],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[486], [dynamic expression])*/;
t0[487] = $$[417](t0[469],"get_ElementClass",$$[203],-1)/*t0[487] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_ElementClass", [dynamic expression], -1)*/;
$$[420](t0[487],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[487], [dynamic expression])*/;
$$[420](t0[487],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[487], [dynamic expression])*/;
t0[488] = $$[417](t0[469],"set_ElementClass",$$[204],-1)/*t0[488] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "set_ElementClass", [dynamic expression], -1)*/;
$$[420](t0[488],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[488], [dynamic expression])*/;
$$[420](t0[488],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[488], [dynamic expression])*/;
t0[489] = $$[417](t0[469],"get_FullName",$$[205],-1)/*t0[489] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_FullName", [dynamic expression], -1)*/;
$$[420](t0[489],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[489], [dynamic expression])*/;
t0[490] = $$[417](t0[469],"get_Methods",$$[206],-1)/*t0[490] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Methods", [dynamic expression], -1)*/;
$$[420](t0[490],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[490], [dynamic expression])*/;
t0[491] = $$[417](t0[469],"get_Constructors",$$[207],-1)/*t0[491] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Constructors", [dynamic expression], -1)*/;
$$[420](t0[491],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[491], [dynamic expression])*/;
t0[492] = $$[417](t0[469],"get_Properties",$$[208],-1)/*t0[492] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_Properties", [dynamic expression], -1)*/;
$$[420](t0[492],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[492], [dynamic expression])*/;
t0[493] = $$[417](t0[469],"get_CustomAttributes",$$[209],4)/*t0[493] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "get_CustomAttributes", [dynamic expression], [dynamic expression])*/;
$$[420](t0[493],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[493], [dynamic expression])*/;
t0[494] = $$[417](t0[469],"ToString",$$[210],0)/*t0[494] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[469], "ToString", [dynamic expression], [dynamic expression])*/;
t0[495] = $$[418](t0[469],".ctor",$$[211])/*t0[495] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[469], ".ctor", [dynamic expression])*/;
$$[420](t0[495],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[495], [dynamic expression])*/;
t0[496] = $$[419](t0[469],"Assembly",t0[470],t0[471])/*t0[496] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Assembly", t0[470], t0[471])*/;
t0[497] = $$[419](t0[469],"Name",t0[472],t0[473])/*t0[497] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Name", t0[472], t0[473])*/;
t0[498] = $$[419](t0[469],"Namespace",t0[474],t0[475])/*t0[498] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Namespace", t0[474], t0[475])*/;
t0[499] = $$[419](t0[469],"DeclaringClass",t0[476],t0[477])/*t0[499] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "DeclaringClass", t0[476], t0[477])*/;
t0[500] = $$[419](t0[469],"BaseClass",t0[478],null)/*t0[500] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "BaseClass", t0[478], null)*/;
t0[501] = $$[419](t0[469],"VTable",t0[479],t0[480])/*t0[501] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "VTable", t0[479], t0[480])*/;
t0[502] = $$[419](t0[469],"VTableDataPointer",t0[481],t0[482])/*t0[502] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "VTableDataPointer", t0[481], t0[482])*/;
t0[503] = $$[419](t0[469],"IsInterface",t0[483],t0[484])/*t0[503] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "IsInterface", t0[483], t0[484])*/;
t0[504] = $$[419](t0[469],"IsArray",t0[485],t0[486])/*t0[504] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "IsArray", t0[485], t0[486])*/;
t0[505] = $$[419](t0[469],"ElementClass",t0[487],t0[488])/*t0[505] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "ElementClass", t0[487], t0[488])*/;
t0[506] = $$[419](t0[469],"FullName",t0[489],null)/*t0[506] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "FullName", t0[489], null)*/;
t0[507] = $$[419](t0[469],"Methods",t0[490],null)/*t0[507] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Methods", t0[490], null)*/;
t0[508] = $$[419](t0[469],"Constructors",t0[491],null)/*t0[508] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Constructors", t0[491], null)*/;
t0[509] = $$[419](t0[469],"Properties",t0[492],null)/*t0[509] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "Properties", t0[492], null)*/;
t0[510] = $$[419](t0[469],"CustomAttributes",t0[493],null)/*t0[510] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[469], "CustomAttributes", t0[493], null)*/;
t0[511] = $$[416]("System","AsyncCallback",t0[0],100,null,false,false)/*t0[511] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "AsyncCallback", t0[0], [dynamic expression], null, False, False)*/;
t0[512] = $$[417](t0[511],"Invoke",null,4)/*t0[512] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[511], "Invoke", null, [dynamic expression])*/;
t0[513] = $$[417](t0[511],"BeginInvoke",null,8)/*t0[513] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[511], "BeginInvoke", null, [dynamic expression])*/;
t0[514] = $$[417](t0[511],"EndInvoke",null,9)/*t0[514] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[511], "EndInvoke", null, [dynamic expression])*/;
t0[515] = $$[418](t0[511],".ctor",null)/*t0[515] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[511], ".ctor", null)*/;
t0[516] = $$[416]("System.Threading","ThreadManager",t0[0],101,null,false,false)/*t0[516] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadManager", t0[0], [dynamic expression], null, False, False)*/;
t0[517] = $$[417](t0[516],"get_CurrentThread",$$[212],-1)/*t0[517] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[516], "get_CurrentThread", [dynamic expression], -1)*/;
t0[518] = $$[417](t0[516],"RegisterThread",$$[213],-1)/*t0[518] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[516], "RegisterThread", [dynamic expression], -1)*/;
t0[519] = $$[417](t0[516],"UnregisterThread",$$[214],-1)/*t0[519] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[516], "UnregisterThread", [dynamic expression], -1)*/;
t0[520] = $$[417](t0[516],"Initialize",$$[215],-1)/*t0[520] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[516], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[520],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[520], [dynamic expression])*/;
t0[521] = $$[417](t0[516],"GetThreads",$$[216],-1)/*t0[521] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[516], "GetThreads", [dynamic expression], -1)*/;
t0[522] = $$[419](t0[516],"CurrentThread",t0[517],null)/*t0[522] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[516], "CurrentThread", t0[517], null)*/;
t0[523] = $$[416]("","ThreadsByTask",t0[0],103,null,false,false)/*t0[523] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "ThreadsByTask", t0[0], [dynamic expression], null, False, False)*/;
t0[524] = $$[417](t0[523],"get_Item",$$[-1],-1)/*t0[524] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[523], "get_Item", [dynamic expression], -1)*/;
$$[420](t0[524],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[524], [dynamic expression])*/;
t0[525] = $$[417](t0[523],"set_Item",$$[-1],-1)/*t0[525] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[523], "set_Item", [dynamic expression], -1)*/;
$$[420](t0[525],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[525], [dynamic expression])*/;
t0[526] = $$[417](t0[523],"Remove",$$[-1],-1)/*t0[526] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[523], "Remove", [dynamic expression], -1)*/;
$$[420](t0[526],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[526], [dynamic expression])*/;
t0[527] = $$[418](t0[523],".ctor",$$[217])/*t0[527] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[523], ".ctor", [dynamic expression])*/;
t0[528] = $$[419](t0[523],"Item",t0[524],t0[525])/*t0[528] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[523], "Item", t0[524], t0[525])*/;
$$[420](t0[523],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[523], [dynamic expression])*/;
t0[529] = $$[416]("System","SByte",t0[0],104,null,false,false)/*t0[529] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "SByte", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[529],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[529], [dynamic expression])*/;
$$[420](t0[529],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[529], [dynamic expression])*/;
t0[530] = $$[416]("System.Runtime","VTable",t0[0],109,null,false,false)/*t0[530] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "VTable", t0[0], [dynamic expression], null, False, False)*/;
t0[531] = $$[417](t0[530],"get_DebugInfo",$$[-1],-1)/*t0[531] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "get_DebugInfo", [dynamic expression], -1)*/;
$$[420](t0[531],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[531], [dynamic expression])*/;
t0[532] = $$[417](t0[530],"set_DebugInfo",$$[-1],-1)/*t0[532] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "set_DebugInfo", [dynamic expression], -1)*/;
$$[420](t0[532],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[532], [dynamic expression])*/;
t0[533] = $$[417](t0[530],"get_Flags",$$[-1],-1)/*t0[533] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "get_Flags", [dynamic expression], -1)*/;
$$[420](t0[533],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[533], [dynamic expression])*/;
t0[534] = $$[417](t0[530],"set_Flags",$$[-1],-1)/*t0[534] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "set_Flags", [dynamic expression], -1)*/;
$$[420](t0[534],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[534], [dynamic expression])*/;
t0[535] = $$[417](t0[530],"get_BaseVTable",$$[-1],-1)/*t0[535] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "get_BaseVTable", [dynamic expression], -1)*/;
$$[420](t0[535],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[535], [dynamic expression])*/;
t0[536] = $$[417](t0[530],"set_BaseVTable",$$[-1],-1)/*t0[536] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "set_BaseVTable", [dynamic expression], -1)*/;
$$[420](t0[536],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[536], [dynamic expression])*/;
t0[537] = $$[417](t0[530],"get_Class",$$[-1],-1)/*t0[537] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "get_Class", [dynamic expression], -1)*/;
$$[420](t0[537],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[537], [dynamic expression])*/;
t0[538] = $$[417](t0[530],"set_Class",$$[-1],-1)/*t0[538] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "set_Class", [dynamic expression], -1)*/;
$$[420](t0[538],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[538], [dynamic expression])*/;
t0[539] = $$[417](t0[530],"get_Interfaces",$$[-1],-1)/*t0[539] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "get_Interfaces", [dynamic expression], -1)*/;
$$[420](t0[539],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[539], [dynamic expression])*/;
t0[540] = $$[417](t0[530],"set_Interfaces",$$[-1],-1)/*t0[540] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "set_Interfaces", [dynamic expression], -1)*/;
$$[420](t0[540],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[540], [dynamic expression])*/;
t0[541] = $$[417](t0[530],"op_Explicit",$$[-1],-1)/*t0[541] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[541],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[541], [dynamic expression])*/;
t0[542] = $$[417](t0[530],"op_Explicit",$$[-1],-1)/*t0[542] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[530], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[542],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[542], [dynamic expression])*/;
t0[543] = $$[418](t0[530],".ctor",$$[226])/*t0[543] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[530], ".ctor", [dynamic expression])*/;
t0[544] = $$[419](t0[530],"DebugInfo",t0[531],t0[532])/*t0[544] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[530], "DebugInfo", t0[531], t0[532])*/;
t0[545] = $$[419](t0[530],"Flags",t0[533],t0[534])/*t0[545] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[530], "Flags", t0[533], t0[534])*/;
t0[546] = $$[419](t0[530],"BaseVTable",t0[535],t0[536])/*t0[546] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[530], "BaseVTable", t0[535], t0[536])*/;
t0[547] = $$[419](t0[530],"Class",t0[537],t0[538])/*t0[547] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[530], "Class", t0[537], t0[538])*/;
t0[548] = $$[419](t0[530],"Interfaces",t0[539],t0[540])/*t0[548] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[530], "Interfaces", t0[539], t0[540])*/;
$$[420](t0[530],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[530], [dynamic expression])*/;
t0[549] = $$[416]("System.Runtime","VTableFlags",t0[0],110,null,false,false)/*t0[549] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "VTableFlags", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[549],$$[323].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[549], [dynamic expression])*/;
t0[550] = $$[416]("System.Runtime","VTableDebugInfo",t0[0],113,null,false,false)/*t0[550] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "VTableDebugInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[551] = $$[417](t0[550],"get_Fields",$$[-1],-1)/*t0[551] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[550], "get_Fields", [dynamic expression], -1)*/;
$$[420](t0[551],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[551], [dynamic expression])*/;
t0[552] = $$[417](t0[550],"set_Fields",$$[-1],-1)/*t0[552] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[550], "set_Fields", [dynamic expression], -1)*/;
$$[420](t0[552],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[552], [dynamic expression])*/;
t0[553] = $$[417](t0[550],"get_FullName",$$[-1],-1)/*t0[553] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[550], "get_FullName", [dynamic expression], -1)*/;
$$[420](t0[553],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[553], [dynamic expression])*/;
t0[554] = $$[417](t0[550],"set_FullName",$$[-1],-1)/*t0[554] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[550], "set_FullName", [dynamic expression], -1)*/;
$$[420](t0[554],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[554], [dynamic expression])*/;
t0[555] = $$[418](t0[550],".ctor",$$[227])/*t0[555] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[550], ".ctor", [dynamic expression])*/;
t0[556] = $$[419](t0[550],"Fields",t0[551],t0[552])/*t0[556] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[550], "Fields", t0[551], t0[552])*/;
t0[557] = $$[419](t0[550],"FullName",t0[553],t0[554])/*t0[557] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[550], "FullName", t0[553], t0[554])*/;
$$[420](t0[550],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[550], [dynamic expression])*/;
t0[558] = $$[416]("System.Runtime","MethodBase",t0[0],114,null,false,false)/*t0[558] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "MethodBase", t0[0], [dynamic expression], null, False, False)*/;
t0[559] = $$[417](t0[558],"get_DeclaringClass",$$[228],-1)/*t0[559] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[559],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[559], [dynamic expression])*/;
$$[420](t0[559],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[559], [dynamic expression])*/;
t0[560] = $$[417](t0[558],"set_DeclaringClass",$$[229],-1)/*t0[560] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "set_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[560],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[560], [dynamic expression])*/;
$$[420](t0[560],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[560], [dynamic expression])*/;
t0[561] = $$[417](t0[558],"get_ReturnType",$$[230],-1)/*t0[561] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_ReturnType", [dynamic expression], -1)*/;
$$[420](t0[561],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[561], [dynamic expression])*/;
$$[420](t0[561],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[561], [dynamic expression])*/;
t0[562] = $$[417](t0[558],"set_ReturnType",$$[231],-1)/*t0[562] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "set_ReturnType", [dynamic expression], -1)*/;
$$[420](t0[562],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[562], [dynamic expression])*/;
$$[420](t0[562],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[562], [dynamic expression])*/;
t0[563] = $$[417](t0[558],"get_Name",$$[232],-1)/*t0[563] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[563],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[563], [dynamic expression])*/;
$$[420](t0[563],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[563], [dynamic expression])*/;
t0[564] = $$[417](t0[558],"set_Name",$$[233],-1)/*t0[564] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[564],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[564], [dynamic expression])*/;
$$[420](t0[564],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[564], [dynamic expression])*/;
t0[565] = $$[417](t0[558],"get_FullName",$$[234],-1)/*t0[565] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_FullName", [dynamic expression], -1)*/;
$$[420](t0[565],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[565], [dynamic expression])*/;
t0[566] = $$[417](t0[558],"get_Function",$$[235],-1)/*t0[566] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_Function", [dynamic expression], -1)*/;
$$[420](t0[566],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[566], [dynamic expression])*/;
$$[420](t0[566],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[566], [dynamic expression])*/;
t0[567] = $$[417](t0[558],"set_Function",$$[236],-1)/*t0[567] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "set_Function", [dynamic expression], -1)*/;
$$[420](t0[567],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[567], [dynamic expression])*/;
$$[420](t0[567],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[567], [dynamic expression])*/;
t0[568] = $$[417](t0[558],"get_Parameters",$$[237],-1)/*t0[568] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_Parameters", [dynamic expression], -1)*/;
t0[569] = $$[417](t0[558],"get_CustomAttributes",$$[238],4)/*t0[569] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "get_CustomAttributes", [dynamic expression], [dynamic expression])*/;
$$[420](t0[569],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[569], [dynamic expression])*/;
t0[570] = $$[417](t0[558],"ToString",$$[239],0)/*t0[570] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[558], "ToString", [dynamic expression], [dynamic expression])*/;
t0[571] = $$[418](t0[558],".ctor",$$[240])/*t0[571] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[558], ".ctor", [dynamic expression])*/;
$$[420](t0[571],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[571], [dynamic expression])*/;
t0[572] = $$[419](t0[558],"DeclaringClass",t0[559],t0[560])/*t0[572] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "DeclaringClass", t0[559], t0[560])*/;
t0[573] = $$[419](t0[558],"ReturnType",t0[561],t0[562])/*t0[573] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "ReturnType", t0[561], t0[562])*/;
t0[574] = $$[419](t0[558],"Name",t0[563],t0[564])/*t0[574] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "Name", t0[563], t0[564])*/;
t0[575] = $$[419](t0[558],"FullName",t0[565],null)/*t0[575] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "FullName", t0[565], null)*/;
t0[576] = $$[419](t0[558],"Function",t0[566],t0[567])/*t0[576] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "Function", t0[566], t0[567])*/;
t0[577] = $$[419](t0[558],"Parameters",t0[568],null)/*t0[577] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "Parameters", t0[568], null)*/;
t0[578] = $$[419](t0[558],"CustomAttributes",t0[569],null)/*t0[578] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[558], "CustomAttributes", t0[569], null)*/;
t0[579] = $$[416]("System.Runtime","Constructor",t0[0],115,null,false,false)/*t0[579] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Constructor", t0[0], [dynamic expression], null, False, False)*/;
t0[580] = $$[418](t0[579],".ctor",$$[241])/*t0[580] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[579], ".ctor", [dynamic expression])*/;
$$[420](t0[580],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[580], [dynamic expression])*/;
t0[581] = $$[416]("System.Runtime","Parameter",t0[0],116,null,false,false)/*t0[581] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Parameter", t0[0], [dynamic expression], null, False, False)*/;
t0[582] = $$[418](t0[581],".ctor",$$[242])/*t0[582] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[581], ".ctor", [dynamic expression])*/;
$$[420](t0[582],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[582], [dynamic expression])*/;
t0[583] = $$[416]("System","var",t0[0],117,null,false,false)/*t0[583] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "var", t0[0], [dynamic expression], null, False, False)*/;
t0[584] = $$[417](t0[583],"Cast",$$[-1],-1)/*t0[584] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "Cast", [dynamic expression], -1)*/;
$$[420](t0[584],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[584], [dynamic expression])*/;
t0[585] = $$[417](t0[583],"Cast",$$[-1],-1)/*t0[585] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "Cast", [dynamic expression], -1)*/;
$$[420](t0[585],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[585], [dynamic expression])*/;
t0[586] = $$[417](t0[583],"Cast",$$[-1],-1)/*t0[586] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "Cast", [dynamic expression], -1)*/;
$$[420](t0[586],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[586], [dynamic expression])*/;
t0[587] = $$[417](t0[583],"ToString",$$[243],0)/*t0[587] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[587],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[587], [dynamic expression])*/;
t0[588] = $$[417](t0[583],"InstanceOf",$$[-1],-1)/*t0[588] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "InstanceOf", [dynamic expression], -1)*/;
$$[420](t0[588],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[588], [dynamic expression])*/;
t0[589] = $$[417](t0[583],"TypeOf",$$[-1],-1)/*t0[589] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "TypeOf", [dynamic expression], -1)*/;
$$[420](t0[589],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[589], [dynamic expression])*/;
t0[590] = $$[417](t0[583],"IsDefined",$$[-1],-1)/*t0[590] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "IsDefined", [dynamic expression], -1)*/;
$$[420](t0[590],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[590], [dynamic expression])*/;
t0[591] = $$[417](t0[583],"IsNull",$$[-1],-1)/*t0[591] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "IsNull", [dynamic expression], -1)*/;
$$[420](t0[591],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[591], [dynamic expression])*/;
t0[592] = $$[417](t0[583],"Not",$$[-1],-1)/*t0[592] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "Not", [dynamic expression], -1)*/;
$$[420](t0[592],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[592], [dynamic expression])*/;
t0[593] = $$[417](t0[583],"NativeToString",$$[-1],-1)/*t0[593] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "NativeToString", [dynamic expression], -1)*/;
$$[420](t0[593],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[593], [dynamic expression])*/;
t0[594] = $$[417](t0[583],"IsDefined",$$[-1],-1)/*t0[594] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[583], "IsDefined", [dynamic expression], -1)*/;
$$[420](t0[594],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[594], [dynamic expression])*/;
t0[595] = $$[418](t0[583],".ctor",$$[244])/*t0[595] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[583], ".ctor", [dynamic expression])*/;
$$[420](t0[583],$$[86].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[583], [dynamic expression])*/;
$$[420](t0[583],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[583], [dynamic expression])*/;
t0[596] = $$[416]("System","String",t0[0],118,null,false,false)/*t0[596] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "String", t0[0], [dynamic expression], null, False, False)*/;
t0[597] = $$[417](t0[596],"get_Length",$$[-1],-1)/*t0[597] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "get_Length", [dynamic expression], -1)*/;
$$[420](t0[597],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[597], [dynamic expression])*/;
t0[598] = $$[417](t0[596],"InternalEquals",$$[-1],-1)/*t0[598] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "InternalEquals", [dynamic expression], -1)*/;
$$[420](t0[598],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[598], [dynamic expression])*/;
t0[599] = $$[417](t0[596],"get_Chars",$$[-1],-1)/*t0[599] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "get_Chars", [dynamic expression], -1)*/;
$$[420](t0[599],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[599], [dynamic expression])*/;
$$[420](t0[599],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[599], [dynamic expression])*/;
t0[600] = $$[417](t0[596],"ToLower",$$[-1],-1)/*t0[600] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "ToLower", [dynamic expression], -1)*/;
$$[420](t0[600],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[600], [dynamic expression])*/;
$$[420](t0[600],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[600], [dynamic expression])*/;
t0[601] = $$[417](t0[596],"IndexOf",$$[-1],-1)/*t0[601] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "IndexOf", [dynamic expression], -1)*/;
$$[420](t0[601],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[601], [dynamic expression])*/;
$$[420](t0[601],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[601], [dynamic expression])*/;
t0[602] = $$[417](t0[596],"Substr",$$[-1],-1)/*t0[602] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Substr", [dynamic expression], -1)*/;
$$[420](t0[602],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[602], [dynamic expression])*/;
$$[420](t0[602],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[602], [dynamic expression])*/;
t0[603] = $$[417](t0[596],"Substr",$$[-1],-1)/*t0[603] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Substr", [dynamic expression], -1)*/;
$$[420](t0[603],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[603], [dynamic expression])*/;
$$[420](t0[603],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[603], [dynamic expression])*/;
t0[604] = $$[417](t0[596],"Substring",$$[-1],-1)/*t0[604] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Substring", [dynamic expression], -1)*/;
$$[420](t0[604],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[604], [dynamic expression])*/;
$$[420](t0[604],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[604], [dynamic expression])*/;
t0[605] = $$[417](t0[596],"Substring",$$[-1],-1)/*t0[605] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Substring", [dynamic expression], -1)*/;
$$[420](t0[605],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[605], [dynamic expression])*/;
$$[420](t0[605],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[605], [dynamic expression])*/;
t0[606] = $$[417](t0[596],"Split",$$[-1],-1)/*t0[606] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Split", [dynamic expression], -1)*/;
$$[420](t0[606],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[606], [dynamic expression])*/;
$$[420](t0[606],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[606], [dynamic expression])*/;
t0[607] = $$[417](t0[596],"Split",$$[245],-1)/*t0[607] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Split", [dynamic expression], -1)*/;
t0[608] = $$[417](t0[596],"StartsWith",$$[246],-1)/*t0[608] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "StartsWith", [dynamic expression], -1)*/;
$$[420](t0[608],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[608], [dynamic expression])*/;
t0[609] = $$[417](t0[596],"EndsWith",$$[247],-1)/*t0[609] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "EndsWith", [dynamic expression], -1)*/;
$$[420](t0[609],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[609], [dynamic expression])*/;
t0[610] = $$[417](t0[596],"Match",$$[-1],-1)/*t0[610] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Match", [dynamic expression], -1)*/;
$$[420](t0[610],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[610], [dynamic expression])*/;
t0[611] = $$[417](t0[596],"ToString",$$[248],0)/*t0[611] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[611],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[611], [dynamic expression])*/;
t0[612] = $$[417](t0[596],"Contains",$$[249],-1)/*t0[612] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Contains", [dynamic expression], -1)*/;
$$[420](t0[612],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[612], [dynamic expression])*/;
t0[613] = $$[417](t0[596],"Concat",$$[250],-1)/*t0[613] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
t0[614] = $$[417](t0[596],"Concat",$$[251],-1)/*t0[614] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
t0[615] = $$[417](t0[596],"Concat",$$[252],-1)/*t0[615] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
t0[616] = $$[417](t0[596],"Concat",$$[253],-1)/*t0[616] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
t0[617] = $$[417](t0[596],"NativeConcat",$$[254],-1)/*t0[617] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "NativeConcat", [dynamic expression], -1)*/;
$$[420](t0[617],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[617], [dynamic expression])*/;
t0[618] = $$[417](t0[596],"SafeToString",$$[255],-1)/*t0[618] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "SafeToString", [dynamic expression], -1)*/;
t0[619] = $$[417](t0[596],"Compare",$$[256],-1)/*t0[619] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Compare", [dynamic expression], -1)*/;
t0[620] = $$[417](t0[596],"IsNullOrEmpty",$$[257],-1)/*t0[620] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "IsNullOrEmpty", [dynamic expression], -1)*/;
t0[621] = $$[417](t0[596],"Concat",$$[-1],-1)/*t0[621] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
$$[420](t0[621],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[621], [dynamic expression])*/;
t0[622] = $$[417](t0[596],"Concat",$$[-1],-1)/*t0[622] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
$$[420](t0[622],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[622], [dynamic expression])*/;
t0[623] = $$[417](t0[596],"Concat",$$[-1],-1)/*t0[623] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
$$[420](t0[623],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[623], [dynamic expression])*/;
t0[624] = $$[417](t0[596],"Concat",$$[253],-1)/*t0[624] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "Concat", [dynamic expression], -1)*/;
$$[420](t0[624],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[624], [dynamic expression])*/;
t0[625] = $$[417](t0[596],"op_Equality",$$[-1],-1)/*t0[625] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "op_Equality", [dynamic expression], -1)*/;
$$[420](t0[625],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[625], [dynamic expression])*/;
t0[626] = $$[417](t0[596],"op_Inequality",$$[-1],-1)/*t0[626] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "op_Inequality", [dynamic expression], -1)*/;
$$[420](t0[626],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[626], [dynamic expression])*/;
t0[627] = $$[417](t0[596],"GreaterThan",$$[-1],-1)/*t0[627] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "GreaterThan", [dynamic expression], -1)*/;
$$[420](t0[627],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[627], [dynamic expression])*/;
t0[628] = $$[417](t0[596],"LessThan",$$[-1],-1)/*t0[628] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[596], "LessThan", [dynamic expression], -1)*/;
$$[420](t0[628],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[628], [dynamic expression])*/;
t0[629] = $$[418](t0[596],".ctor",$$[258])/*t0[629] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[596], ".ctor", [dynamic expression])*/;
t0[630] = $$[419](t0[596],"Length",t0[597],null)/*t0[630] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[596], "Length", t0[597], null)*/;
t0[631] = $$[419](t0[596],"Chars",t0[599],null)/*t0[631] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[596], "Chars", t0[599], null)*/;
$$[420](t0[596],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[596], [dynamic expression])*/;
$$[420](t0[596],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[596], [dynamic expression])*/;
$$[420](t0[596],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[596], [dynamic expression])*/;
t0[632] = $$[416]("System","Single",t0[0],120,null,false,false)/*t0[632] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Single", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[632],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[632], [dynamic expression])*/;
$$[420](t0[632],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[632], [dynamic expression])*/;
t0[633] = $$[416]("System","NotImplementedException",t0[0],123,null,false,false)/*t0[633] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NotImplementedException", t0[0], [dynamic expression], null, False, False)*/;
t0[634] = $$[418](t0[633],".ctor",$$[259])/*t0[634] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[633], ".ctor", [dynamic expression])*/;
$$[420](t0[634],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[634], [dynamic expression])*/;
t0[635] = $$[418](t0[633],".ctor",$$[260])/*t0[635] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[633], ".ctor", [dynamic expression])*/;
$$[420](t0[635],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[635], [dynamic expression])*/;
$$[420](t0[633],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[633], [dynamic expression])*/;
t0[636] = $$[416]("System","Int16",t0[0],124,null,false,false)/*t0[636] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Int16", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[636],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[636], [dynamic expression])*/;
t0[637] = $$[416]("System","InvalidOperationException",t0[0],127,null,false,false)/*t0[637] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "InvalidOperationException", t0[0], [dynamic expression], null, False, False)*/;
t0[638] = $$[418](t0[637],".ctor",$$[261])/*t0[638] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[637], ".ctor", [dynamic expression])*/;
t0[639] = $$[416]("System.Resources","ResourceManager",t0[0],128,null,false,false)/*t0[639] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Resources", "ResourceManager", t0[0], [dynamic expression], null, False, False)*/;
t0[640] = $$[417](t0[639],"Initialize",$$[262],-1)/*t0[640] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[639], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[640],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[640], [dynamic expression])*/;
t0[641] = $$[417](t0[639],"RegisterSIP",$$[263],-1)/*t0[641] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[639], "RegisterSIP", [dynamic expression], -1)*/;
t0[642] = $$[417](t0[639],"CleanupAndUnregisterSIP",$$[264],-1)/*t0[642] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[639], "CleanupAndUnregisterSIP", [dynamic expression], -1)*/;
t0[643] = $$[417](t0[639],"RegisterResource",$$[265],-1)/*t0[643] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[639], "RegisterResource", [dynamic expression], -1)*/;
t0[644] = $$[417](t0[639],"FreeResource",$$[266],-1)/*t0[644] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[639], "FreeResource", [dynamic expression], -1)*/;
t0[645] = $$[416]("XaeiOS.Boot","BootMethod",t0[0],130,null,false,false)/*t0[645] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Boot", "BootMethod", t0[0], [dynamic expression], null, False, False)*/;
t0[646] = $$[418](t0[645],".ctor",$$[267])/*t0[646] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[645], ".ctor", [dynamic expression])*/;
t0[647] = $$[416]("System.Threading","ManualResetEvent",t0[0],131,null,false,false)/*t0[647] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ManualResetEvent", t0[0], [dynamic expression], null, False, False)*/;
t0[648] = $$[417](t0[647],"Set",$$[268],-1)/*t0[648] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[647], "Set", [dynamic expression], -1)*/;
$$[420](t0[648],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[648], [dynamic expression])*/;
t0[649] = $$[417](t0[647],"Reset",$$[269],-1)/*t0[649] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[647], "Reset", [dynamic expression], -1)*/;
$$[420](t0[649],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[649], [dynamic expression])*/;
t0[650] = $$[417](t0[647],"WaitOne",$$[270],-1)/*t0[650] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[647], "WaitOne", [dynamic expression], -1)*/;
$$[420](t0[650],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[650], [dynamic expression])*/;
t0[651] = $$[417](t0[647],"Signal",$$[271],-1)/*t0[651] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[647], "Signal", [dynamic expression], -1)*/;
$$[420](t0[651],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[651], [dynamic expression])*/;
t0[652] = $$[418](t0[647],".ctor",$$[272])/*t0[652] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[647], ".ctor", [dynamic expression])*/;
t0[653] = $$[416]("System.Runtime","Property",t0[0],132,null,false,false)/*t0[653] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Property", t0[0], [dynamic expression], null, False, False)*/;
t0[654] = $$[417](t0[653],"get_DeclaringClass",$$[273],-1)/*t0[654] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[654],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[654], [dynamic expression])*/;
$$[420](t0[654],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[654], [dynamic expression])*/;
t0[655] = $$[417](t0[653],"set_DeclaringClass",$$[274],-1)/*t0[655] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "set_DeclaringClass", [dynamic expression], -1)*/;
$$[420](t0[655],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[655], [dynamic expression])*/;
$$[420](t0[655],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[655], [dynamic expression])*/;
t0[656] = $$[417](t0[653],"get_Type",$$[275],-1)/*t0[656] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_Type", [dynamic expression], -1)*/;
$$[420](t0[656],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[656], [dynamic expression])*/;
$$[420](t0[656],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[656], [dynamic expression])*/;
t0[657] = $$[417](t0[653],"set_Type",$$[276],-1)/*t0[657] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "set_Type", [dynamic expression], -1)*/;
$$[420](t0[657],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[657], [dynamic expression])*/;
$$[420](t0[657],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[657], [dynamic expression])*/;
t0[658] = $$[417](t0[653],"get_Name",$$[277],-1)/*t0[658] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[658],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[658], [dynamic expression])*/;
$$[420](t0[658],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[658], [dynamic expression])*/;
t0[659] = $$[417](t0[653],"set_Name",$$[278],-1)/*t0[659] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[659],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[659], [dynamic expression])*/;
$$[420](t0[659],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[659], [dynamic expression])*/;
t0[660] = $$[417](t0[653],"get_FullName",$$[279],-1)/*t0[660] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_FullName", [dynamic expression], -1)*/;
$$[420](t0[660],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[660], [dynamic expression])*/;
t0[661] = $$[417](t0[653],"get_GetMethod",$$[280],-1)/*t0[661] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_GetMethod", [dynamic expression], -1)*/;
$$[420](t0[661],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[661], [dynamic expression])*/;
$$[420](t0[661],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[661], [dynamic expression])*/;
t0[662] = $$[417](t0[653],"set_GetMethod",$$[281],-1)/*t0[662] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "set_GetMethod", [dynamic expression], -1)*/;
$$[420](t0[662],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[662], [dynamic expression])*/;
$$[420](t0[662],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[662], [dynamic expression])*/;
t0[663] = $$[417](t0[653],"get_SetMethod",$$[282],-1)/*t0[663] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_SetMethod", [dynamic expression], -1)*/;
$$[420](t0[663],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[663], [dynamic expression])*/;
$$[420](t0[663],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[663], [dynamic expression])*/;
t0[664] = $$[417](t0[653],"set_SetMethod",$$[283],-1)/*t0[664] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "set_SetMethod", [dynamic expression], -1)*/;
$$[420](t0[664],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[664], [dynamic expression])*/;
$$[420](t0[664],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[664], [dynamic expression])*/;
t0[665] = $$[417](t0[653],"get_CustomAttributes",$$[284],4)/*t0[665] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[653], "get_CustomAttributes", [dynamic expression], [dynamic expression])*/;
$$[420](t0[665],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[665], [dynamic expression])*/;
t0[666] = $$[418](t0[653],".ctor",$$[285])/*t0[666] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[653], ".ctor", [dynamic expression])*/;
$$[420](t0[666],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[666], [dynamic expression])*/;
t0[667] = $$[419](t0[653],"DeclaringClass",t0[654],t0[655])/*t0[667] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "DeclaringClass", t0[654], t0[655])*/;
t0[668] = $$[419](t0[653],"Type",t0[656],t0[657])/*t0[668] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "Type", t0[656], t0[657])*/;
t0[669] = $$[419](t0[653],"Name",t0[658],t0[659])/*t0[669] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "Name", t0[658], t0[659])*/;
t0[670] = $$[419](t0[653],"FullName",t0[660],null)/*t0[670] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "FullName", t0[660], null)*/;
t0[671] = $$[419](t0[653],"GetMethod",t0[661],t0[662])/*t0[671] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "GetMethod", t0[661], t0[662])*/;
t0[672] = $$[419](t0[653],"SetMethod",t0[663],t0[664])/*t0[672] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "SetMethod", t0[663], t0[664])*/;
t0[673] = $$[419](t0[653],"CustomAttributes",t0[665],null)/*t0[673] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[653], "CustomAttributes", t0[665], null)*/;
t0[674] = $$[416]("System","ArgumentException",t0[0],133,null,false,false)/*t0[674] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "ArgumentException", t0[0], [dynamic expression], null, False, False)*/;
t0[675] = $$[418](t0[674],".ctor",$$[286])/*t0[675] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[674], ".ctor", [dynamic expression])*/;
$$[420](t0[675],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[675], [dynamic expression])*/;
$$[420](t0[674],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[674], [dynamic expression])*/;
t0[676] = $$[416]("System","ArgumentOutOfRangeException",t0[0],134,null,false,false)/*t0[676] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "ArgumentOutOfRangeException", t0[0], [dynamic expression], null, False, False)*/;
t0[677] = $$[418](t0[676],".ctor",$$[287])/*t0[677] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[676], ".ctor", [dynamic expression])*/;
$$[420](t0[677],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[677], [dynamic expression])*/;
$$[420](t0[676],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[676], [dynamic expression])*/;
t0[678] = $$[416]("System.Collections.Generic","KeyValuePair`2",t0[0],135,null,false,false)/*t0[678] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "KeyValuePair`2", t0[0], [dynamic expression], null, False, False)*/;
t0[679] = $$[418](t0[678],".ctor",$$[288])/*t0[679] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[678], ".ctor", [dynamic expression])*/;
t0[680] = $$[416]("System.Runtime.CompilerServices","RequiredAttributeAttribute",t0[0],136,null,false,false)/*t0[680] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "RequiredAttributeAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[681] = $$[418](t0[680],".ctor",$$[289])/*t0[681] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[680], ".ctor", [dynamic expression])*/;
$$[420](t0[680],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[680], [dynamic expression])*/;
t0[682] = $$[416]("System.Runtime","CustomAttribute",t0[0],137,null,false,false)/*t0[682] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "CustomAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[683] = $$[417](t0[682],"get_Constructor",$$[290],-1)/*t0[683] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[682], "get_Constructor", [dynamic expression], -1)*/;
$$[420](t0[683],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[683], [dynamic expression])*/;
$$[420](t0[683],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[683], [dynamic expression])*/;
t0[684] = $$[417](t0[682],"set_Constructor",$$[291],-1)/*t0[684] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[682], "set_Constructor", [dynamic expression], -1)*/;
$$[420](t0[684],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[684], [dynamic expression])*/;
$$[420](t0[684],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[684], [dynamic expression])*/;
t0[685] = $$[418](t0[682],".ctor",$$[292])/*t0[685] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[682], ".ctor", [dynamic expression])*/;
$$[420](t0[685],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[685], [dynamic expression])*/;
t0[686] = $$[419](t0[682],"Constructor",t0[683],t0[684])/*t0[686] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[682], "Constructor", t0[683], t0[684])*/;
t0[687] = $$[416]("System.Diagnostics","Debug",t0[0],138,null,false,false)/*t0[687] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Diagnostics", "Debug", t0[0], [dynamic expression], null, False, False)*/;
t0[688] = $$[417](t0[687],"Assert",$$[293],-1)/*t0[688] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[687], "Assert", [dynamic expression], -1)*/;
t0[689] = $$[416]("System","Console",t0[0],139,null,false,false)/*t0[689] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Console", t0[0], [dynamic expression], null, False, False)*/;
t0[690] = $$[417](t0[689],"get_Out",$$[294],-1)/*t0[690] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "get_Out", [dynamic expression], -1)*/;
t0[691] = $$[417](t0[689],"ReadLine",$$[295],-1)/*t0[691] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "ReadLine", [dynamic expression], -1)*/;
t0[692] = $$[417](t0[689],"Read",$$[296],-1)/*t0[692] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "Read", [dynamic expression], -1)*/;
t0[693] = $$[417](t0[689],"get_Title",$$[297],-1)/*t0[693] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "get_Title", [dynamic expression], -1)*/;
t0[694] = $$[417](t0[689],"set_Title",$$[298],-1)/*t0[694] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "set_Title", [dynamic expression], -1)*/;
t0[695] = $$[417](t0[689],"Write",$$[299],-1)/*t0[695] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "Write", [dynamic expression], -1)*/;
t0[696] = $$[417](t0[689],"WriteLine",$$[300],-1)/*t0[696] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "WriteLine", [dynamic expression], -1)*/;
t0[697] = $$[417](t0[689],"WriteLine",$$[301],-1)/*t0[697] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "WriteLine", [dynamic expression], -1)*/;
t0[698] = $$[417](t0[689],"WriteLine",$$[302],-1)/*t0[698] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "WriteLine", [dynamic expression], -1)*/;
t0[699] = $$[417](t0[689],"SetOut",$$[303],-1)/*t0[699] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[689], "SetOut", [dynamic expression], -1)*/;
t0[700] = $$[419](t0[689],"Out",t0[690],null)/*t0[700] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[689], "Out", t0[690], null)*/;
t0[701] = $$[419](t0[689],"Title",t0[693],t0[694])/*t0[701] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[689], "Title", t0[693], t0[694])*/;
$$[420](t0[689],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[689], [dynamic expression])*/;
t0[702] = $$[416]("System","UInt16",t0[0],140,null,false,false)/*t0[702] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "UInt16", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[702],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[702], [dynamic expression])*/;
$$[420](t0[702],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[702], [dynamic expression])*/;
t0[703] = $$[416]("System","RuntimeFieldHandle",t0[0],143,null,false,false)/*t0[703] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "RuntimeFieldHandle", t0[0], [dynamic expression], null, False, False)*/;
t0[704] = $$[416]("System","NotSupportedException",t0[0],144,null,false,false)/*t0[704] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NotSupportedException", t0[0], [dynamic expression], null, False, False)*/;
t0[705] = $$[418](t0[704],".ctor",$$[304])/*t0[705] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[704], ".ctor", [dynamic expression])*/;
$$[420](t0[705],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[705], [dynamic expression])*/;
t0[706] = $$[418](t0[704],".ctor",$$[305])/*t0[706] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[704], ".ctor", [dynamic expression])*/;
$$[420](t0[706],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[706], [dynamic expression])*/;
t0[707] = $$[418](t0[704],".ctor",$$[306])/*t0[707] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[704], ".ctor", [dynamic expression])*/;
$$[420](t0[707],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[707], [dynamic expression])*/;
$$[420](t0[704],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[704], [dynamic expression])*/;
t0[708] = $$[416]("System","InvalidCastException",t0[0],145,null,false,false)/*t0[708] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "InvalidCastException", t0[0], [dynamic expression], null, False, False)*/;
t0[709] = $$[418](t0[708],".ctor",$$[307])/*t0[709] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[708], ".ctor", [dynamic expression])*/;
$$[420](t0[709],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[709], [dynamic expression])*/;
t0[710] = $$[416]("System","EventArgs",t0[0],146,null,false,false)/*t0[710] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "EventArgs", t0[0], [dynamic expression], null, False, False)*/;
t0[711] = $$[418](t0[710],".ctor",$$[308])/*t0[711] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[710], ".ctor", [dynamic expression])*/;
t0[712] = $$[418](t0[710],".cctor",$$[309])/*t0[712] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[710], ".cctor", [dynamic expression])*/;
t0[713] = $$[416]("System","Decimal",t0[0],148,null,false,false)/*t0[713] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Decimal", t0[0], [dynamic expression], null, False, False)*/;
t0[714] = $$[417](t0[713],"ToString",$$[310],0)/*t0[714] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[713], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[714],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[714], [dynamic expression])*/;
$$[420](t0[713],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[713], [dynamic expression])*/;
t0[715] = $$[416]("System","Byte",t0[0],149,null,false,false)/*t0[715] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Byte", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[715],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[715], [dynamic expression])*/;
t0[716] = $$[416]("System.Runtime.CompilerServices","MethodImplAttribute",t0[0],152,null,false,false)/*t0[716] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "MethodImplAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[717] = $$[417](t0[716],"get_Options",$$[311],-1)/*t0[717] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[716], "get_Options", [dynamic expression], -1)*/;
t0[718] = $$[418](t0[716],".ctor",$$[312])/*t0[718] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[716], ".ctor", [dynamic expression])*/;
t0[719] = $$[418](t0[716],".ctor",$$[313])/*t0[719] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[716], ".ctor", [dynamic expression])*/;
t0[720] = $$[419](t0[716],"Options",t0[717],null)/*t0[720] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[716], "Options", t0[717], null)*/;
$$[420](t0[716],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[716], [dynamic expression])*/;
t0[721] = $$[416]("System.Runtime","Method",t0[0],155,null,false,false)/*t0[721] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Method", t0[0], [dynamic expression], null, False, False)*/;
t0[722] = $$[417](t0[721],"get_VTableSlot",$$[320],-1)/*t0[722] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[721], "get_VTableSlot", [dynamic expression], -1)*/;
$$[420](t0[722],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[722], [dynamic expression])*/;
$$[420](t0[722],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[722], [dynamic expression])*/;
t0[723] = $$[417](t0[721],"set_VTableSlot",$$[321],-1)/*t0[723] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[721], "set_VTableSlot", [dynamic expression], -1)*/;
$$[420](t0[723],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[723], [dynamic expression])*/;
$$[420](t0[723],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[723], [dynamic expression])*/;
t0[724] = $$[418](t0[721],".ctor",$$[322])/*t0[724] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[721], ".ctor", [dynamic expression])*/;
$$[420](t0[724],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[724], [dynamic expression])*/;
t0[725] = $$[419](t0[721],"VTableSlot",t0[722],t0[723])/*t0[725] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[721], "VTableSlot", t0[722], t0[723])*/;
t0[726] = $$[416]("System.Collections","ICollection",t0[0],156,null,true,false)/*t0[726] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "ICollection", t0[0], [dynamic expression], null, True, False)*/;
t0[727] = $$[417](t0[726],"get_Count",null,0)/*t0[727] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[726], "get_Count", null, [dynamic expression])*/;
t0[728] = $$[417](t0[726],"get_IsSynchronized",null,1)/*t0[728] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[726], "get_IsSynchronized", null, [dynamic expression])*/;
t0[729] = $$[417](t0[726],"get_SyncRoot",null,2)/*t0[729] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[726], "get_SyncRoot", null, [dynamic expression])*/;
t0[730] = $$[417](t0[726],"CopyTo",null,3)/*t0[730] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[726], "CopyTo", null, [dynamic expression])*/;
t0[731] = $$[419](t0[726],"Count",t0[727],null)/*t0[731] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[726], "Count", t0[727], null)*/;
t0[732] = $$[419](t0[726],"IsSynchronized",t0[728],null)/*t0[732] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[726], "IsSynchronized", t0[728], null)*/;
t0[733] = $$[419](t0[726],"SyncRoot",t0[729],null)/*t0[733] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[726], "SyncRoot", t0[729], null)*/;
$$[420](t0[726],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[726], [dynamic expression])*/;
t0[734] = $$[416]("System.Runtime.CompilerServices","MethodImplOptions",t0[0],158,null,false,false)/*t0[734] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "MethodImplOptions", t0[0], [dynamic expression], null, False, False)*/;
t0[735] = $$[416]("XaeiOS.Process.ImageFormat","ObjectImage",t0[0],166,null,false,false)/*t0[735] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process.ImageFormat", "ObjectImage", t0[0], [dynamic expression], null, False, False)*/;
t0[736] = $$[417](t0[735],"GetMetadata",$$[324],-1)/*t0[736] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[735], "GetMetadata", [dynamic expression], -1)*/;
t0[737] = $$[417](t0[735],"GetFixups",$$[325],-1)/*t0[737] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[735], "GetFixups", [dynamic expression], -1)*/;
t0[738] = $$[418](t0[735],".ctor",$$[326])/*t0[738] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[735], ".ctor", [dynamic expression])*/;
t0[739] = $$[416]("System","ExecutionEngineException",t0[0],167,null,false,false)/*t0[739] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "ExecutionEngineException", t0[0], [dynamic expression], null, False, False)*/;
t0[740] = $$[418](t0[739],".ctor",$$[327])/*t0[740] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[739], ".ctor", [dynamic expression])*/;
$$[420](t0[740],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[740], [dynamic expression])*/;
t0[741] = $$[416]("System.Collections.Generic","IDictionary`2",t0[0],168,null,true,false)/*t0[741] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "IDictionary`2", t0[0], [dynamic expression], null, True, False)*/;
t0[742] = $$[417](t0[741],"get_Count",null,0)/*t0[742] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "get_Count", null, [dynamic expression])*/;
t0[743] = $$[417](t0[741],"get_Item",null,1)/*t0[743] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "get_Item", null, [dynamic expression])*/;
t0[744] = $$[417](t0[741],"set_Item",null,2)/*t0[744] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "set_Item", null, [dynamic expression])*/;
t0[745] = $$[417](t0[741],"get_Keys",null,3)/*t0[745] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "get_Keys", null, [dynamic expression])*/;
t0[746] = $$[417](t0[741],"ContainsKey",null,4)/*t0[746] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "ContainsKey", null, [dynamic expression])*/;
t0[747] = $$[417](t0[741],"ContainsValue",null,5)/*t0[747] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "ContainsValue", null, [dynamic expression])*/;
t0[748] = $$[417](t0[741],"Remove",null,6)/*t0[748] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "Remove", null, [dynamic expression])*/;
t0[749] = $$[417](t0[741],"Clear",null,7)/*t0[749] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[741], "Clear", null, [dynamic expression])*/;
t0[750] = $$[419](t0[741],"Count",t0[742],null)/*t0[750] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[741], "Count", t0[742], null)*/;
t0[751] = $$[419](t0[741],"Item",t0[743],t0[744])/*t0[751] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[741], "Item", t0[743], t0[744])*/;
t0[752] = $$[419](t0[741],"Keys",t0[745],null)/*t0[752] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[741], "Keys", t0[745], null)*/;
$$[420](t0[741],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[741], [dynamic expression])*/;
$$[420](t0[741],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[741], [dynamic expression])*/;
$$[420](t0[741],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[741], [dynamic expression])*/;
t0[753] = $$[416]("System.Collections.Generic","Dictionary`2",t0[0],169,null,false,false)/*t0[753] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "Dictionary`2", t0[0], [dynamic expression], null, False, False)*/;
t0[754] = $$[417](t0[753],"get_Count",$$[328],4)/*t0[754] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "get_Count", [dynamic expression], [dynamic expression])*/;
t0[755] = $$[417](t0[753],"get_Item",$$[329],5)/*t0[755] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "get_Item", [dynamic expression], [dynamic expression])*/;
t0[756] = $$[417](t0[753],"set_Item",$$[330],6)/*t0[756] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "set_Item", [dynamic expression], [dynamic expression])*/;
t0[757] = $$[417](t0[753],"get_Keys",$$[331],7)/*t0[757] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "get_Keys", [dynamic expression], [dynamic expression])*/;
t0[758] = $$[417](t0[753],"ContainsKey",$$[332],8)/*t0[758] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "ContainsKey", [dynamic expression], [dynamic expression])*/;
t0[759] = $$[417](t0[753],"ContainsValue",$$[333],9)/*t0[759] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "ContainsValue", [dynamic expression], [dynamic expression])*/;
t0[760] = $$[417](t0[753],"Remove",$$[334],10)/*t0[760] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "Remove", [dynamic expression], [dynamic expression])*/;
t0[761] = $$[417](t0[753],"Clear",$$[335],11)/*t0[761] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "Clear", [dynamic expression], [dynamic expression])*/;
t0[762] = $$[417](t0[753],"GetValues",$$[336],-1)/*t0[762] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[753], "GetValues", [dynamic expression], -1)*/;
t0[763] = $$[418](t0[753],".ctor",$$[337])/*t0[763] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[753], ".ctor", [dynamic expression])*/;
t0[764] = $$[418](t0[753],".ctor",$$[338])/*t0[764] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[753], ".ctor", [dynamic expression])*/;
t0[765] = $$[419](t0[753],"Count",t0[754],null)/*t0[765] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[753], "Count", t0[754], null)*/;
t0[766] = $$[419](t0[753],"Item",t0[755],t0[756])/*t0[766] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[753], "Item", t0[755], t0[756])*/;
t0[767] = $$[419](t0[753],"Keys",t0[757],null)/*t0[767] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[753], "Keys", t0[757], null)*/;
$$[420](t0[753],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[753], [dynamic expression])*/;
$$[420](t0[753],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[753], [dynamic expression])*/;
$$[420](t0[753],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[753], [dynamic expression])*/;
t0[768] = $$[416]("XaeiOS","OSCorlib",t0[0],170,null,false,false)/*t0[768] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "OSCorlib", t0[0], [dynamic expression], null, False, False)*/;
t0[769] = $$[417](t0[768],"Initialize",$$[339],-1)/*t0[769] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[768], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[769],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[769], [dynamic expression])*/;
t0[770] = $$[416]("System","IntPtr",t0[0],173,null,false,false)/*t0[770] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "IntPtr", t0[0], [dynamic expression], null, False, False)*/;
t0[771] = $$[416]("System","UIntPtr",t0[0],174,null,false,false)/*t0[771] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "UIntPtr", t0[0], [dynamic expression], null, False, False)*/;
t0[772] = $$[416]("System","Boolean",t0[0],175,null,false,false)/*t0[772] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Boolean", t0[0], [dynamic expression], null, False, False)*/;
t0[773] = $$[418](t0[772],".cctor",$$[340])/*t0[773] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[772], ".cctor", [dynamic expression])*/;
$$[420](t0[773],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[773], [dynamic expression])*/;
$$[420](t0[772],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[772], [dynamic expression])*/;
$$[420](t0[772],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[772], [dynamic expression])*/;
t0[774] = $$[416]("System.Runtime.InteropServices","ExposedCallbackDelegate",t0[0],178,null,false,false)/*t0[774] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "ExposedCallbackDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[775] = $$[417](t0[774],"Invoke",null,5)/*t0[775] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[774], "Invoke", null, [dynamic expression])*/;
t0[776] = $$[417](t0[774],"BeginInvoke",null,8)/*t0[776] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[774], "BeginInvoke", null, [dynamic expression])*/;
t0[777] = $$[417](t0[774],"EndInvoke",null,9)/*t0[777] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[774], "EndInvoke", null, [dynamic expression])*/;
t0[778] = $$[418](t0[774],".ctor",null)/*t0[778] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[774], ".ctor", null)*/;
t0[779] = $$[416]("System.Runtime.InteropServices","NativeDelegateAttribute",t0[0],226,null,false,false)/*t0[779] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "NativeDelegateAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[780] = $$[418](t0[779],".ctor",$$[406])/*t0[780] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[779], ".ctor", [dynamic expression])*/;
$$[420](t0[779],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[779], [dynamic expression])*/;
$$[420](t0[774],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[774], [dynamic expression])*/;
t0[781] = $$[416]("System.Threading","Monitor",t0[0],179,null,false,false)/*t0[781] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "Monitor", t0[0], [dynamic expression], null, False, False)*/;
t0[782] = $$[417](t0[781],"Enter",$$[341],-1)/*t0[782] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[781], "Enter", [dynamic expression], -1)*/;
t0[783] = $$[417](t0[781],"Exit",$$[342],-1)/*t0[783] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[781], "Exit", [dynamic expression], -1)*/;
t0[784] = $$[417](t0[781],"TryEnter",$$[343],-1)/*t0[784] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[781], "TryEnter", [dynamic expression], -1)*/;
t0[785] = $$[417](t0[781],"Wait",$$[344],-1)/*t0[785] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[781], "Wait", [dynamic expression], -1)*/;
t0[786] = $$[417](t0[781],"GetThreadSync",$$[345],-1)/*t0[786] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[781], "GetThreadSync", [dynamic expression], -1)*/;
$$[420](t0[786],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[786], [dynamic expression])*/;
t0[787] = $$[416]("","MonitorLock",t0[0],180,null,false,false)/*t0[787] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "MonitorLock", t0[0], [dynamic expression], null, False, False)*/;
t0[788] = $$[417](t0[787],"Acquire",$$[346],-1)/*t0[788] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[787], "Acquire", [dynamic expression], -1)*/;
$$[420](t0[788],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[788], [dynamic expression])*/;
t0[789] = $$[417](t0[787],"TryAcquire",$$[347],-1)/*t0[789] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[787], "TryAcquire", [dynamic expression], -1)*/;
$$[420](t0[789],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[789], [dynamic expression])*/;
t0[790] = $$[417](t0[787],"Release",$$[348],-1)/*t0[790] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[787], "Release", [dynamic expression], -1)*/;
$$[420](t0[790],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[790], [dynamic expression])*/;
t0[791] = $$[418](t0[787],".ctor",$$[349])/*t0[791] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[787], ".ctor", [dynamic expression])*/;
t0[792] = $$[416]("System.Threading","ThreadPool",t0[0],181,null,false,false)/*t0[792] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadPool", t0[0], [dynamic expression], null, False, False)*/;
t0[793] = $$[416]("System.Runtime","XaeiOSObject",t0[0],182,null,false,false)/*t0[793] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "XaeiOSObject", t0[0], [dynamic expression], null, False, False)*/;
t0[794] = $$[417](t0[793],"get_VTable",$$[-1],-1)/*t0[794] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "get_VTable", [dynamic expression], -1)*/;
$$[420](t0[794],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[794], [dynamic expression])*/;
t0[795] = $$[417](t0[793],"set_VTable",$$[-1],-1)/*t0[795] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "set_VTable", [dynamic expression], -1)*/;
$$[420](t0[795],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[795], [dynamic expression])*/;
t0[796] = $$[417](t0[793],"get_ThreadSync",$$[-1],-1)/*t0[796] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "get_ThreadSync", [dynamic expression], -1)*/;
$$[420](t0[796],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[796], [dynamic expression])*/;
t0[797] = $$[417](t0[793],"set_ThreadSync",$$[-1],-1)/*t0[797] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "set_ThreadSync", [dynamic expression], -1)*/;
$$[420](t0[797],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[797], [dynamic expression])*/;
t0[798] = $$[417](t0[793],"get_HashCode",$$[-1],-1)/*t0[798] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "get_HashCode", [dynamic expression], -1)*/;
$$[420](t0[798],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[798], [dynamic expression])*/;
t0[799] = $$[417](t0[793],"set_HashCode",$$[-1],-1)/*t0[799] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "set_HashCode", [dynamic expression], -1)*/;
$$[420](t0[799],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[799], [dynamic expression])*/;
t0[800] = $$[417](t0[793],"ToXaeiOSObject",$$[-1],-1)/*t0[800] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[793], "ToXaeiOSObject", [dynamic expression], -1)*/;
$$[420](t0[800],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[800], [dynamic expression])*/;
t0[801] = $$[418](t0[793],".ctor",$$[350])/*t0[801] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[793], ".ctor", [dynamic expression])*/;
t0[802] = $$[419](t0[793],"VTable",t0[794],t0[795])/*t0[802] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[793], "VTable", t0[794], t0[795])*/;
t0[803] = $$[419](t0[793],"ThreadSync",t0[796],t0[797])/*t0[803] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[793], "ThreadSync", t0[796], t0[797])*/;
t0[804] = $$[419](t0[793],"HashCode",t0[798],t0[799])/*t0[804] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[793], "HashCode", t0[798], t0[799])*/;
$$[420](t0[793],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[793], [dynamic expression])*/;
t0[805] = $$[416]("System.Runtime","Assembly",t0[0],183,null,false,false)/*t0[805] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime", "Assembly", t0[0], [dynamic expression], null, False, False)*/;
t0[806] = $$[417](t0[805],"get_Name",$$[351],-1)/*t0[806] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[805], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[806],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[806], [dynamic expression])*/;
$$[420](t0[806],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[806], [dynamic expression])*/;
t0[807] = $$[417](t0[805],"set_Name",$$[352],-1)/*t0[807] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[805], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[807],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[807], [dynamic expression])*/;
$$[420](t0[807],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[807], [dynamic expression])*/;
t0[808] = $$[417](t0[805],"get_Classes",$$[353],-1)/*t0[808] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[805], "get_Classes", [dynamic expression], -1)*/;
$$[420](t0[808],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[808], [dynamic expression])*/;
t0[809] = $$[417](t0[805],"get_CustomAttributes",$$[354],4)/*t0[809] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[805], "get_CustomAttributes", [dynamic expression], [dynamic expression])*/;
$$[420](t0[809],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[809], [dynamic expression])*/;
t0[810] = $$[418](t0[805],".ctor",$$[355])/*t0[810] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[805], ".ctor", [dynamic expression])*/;
$$[420](t0[810],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[810], [dynamic expression])*/;
t0[811] = $$[419](t0[805],"Name",t0[806],t0[807])/*t0[811] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[805], "Name", t0[806], t0[807])*/;
t0[812] = $$[419](t0[805],"Classes",t0[808],null)/*t0[812] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[805], "Classes", t0[808], null)*/;
t0[813] = $$[419](t0[805],"CustomAttributes",t0[809],null)/*t0[813] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[805], "CustomAttributes", t0[809], null)*/;
t0[814] = $$[416]("System.Collections","Queue",t0[0],184,null,false,false)/*t0[814] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "Queue", t0[0], [dynamic expression], null, False, False)*/;
t0[815] = $$[417](t0[814],"get_Count",$$[356],4)/*t0[815] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "get_Count", [dynamic expression], [dynamic expression])*/;
t0[816] = $$[417](t0[814],"get_IsSynchronized",$$[357],5)/*t0[816] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "get_IsSynchronized", [dynamic expression], [dynamic expression])*/;
$$[420](t0[816],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[816], [dynamic expression])*/;
t0[817] = $$[417](t0[814],"set_IsSynchronized",$$[358],-1)/*t0[817] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "set_IsSynchronized", [dynamic expression], -1)*/;
$$[420](t0[817],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[817], [dynamic expression])*/;
t0[818] = $$[417](t0[814],"get_SyncRoot",$$[359],6)/*t0[818] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "get_SyncRoot", [dynamic expression], [dynamic expression])*/;
$$[420](t0[818],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[818], [dynamic expression])*/;
t0[819] = $$[417](t0[814],"set_SyncRoot",$$[360],-1)/*t0[819] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "set_SyncRoot", [dynamic expression], -1)*/;
$$[420](t0[819],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[819], [dynamic expression])*/;
t0[820] = $$[417](t0[814],"Clear",$$[361],7)/*t0[820] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Clear", [dynamic expression], [dynamic expression])*/;
t0[821] = $$[417](t0[814],"Clone",$$[362],8)/*t0[821] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Clone", [dynamic expression], [dynamic expression])*/;
t0[822] = $$[417](t0[814],"Contains",$$[363],9)/*t0[822] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Contains", [dynamic expression], [dynamic expression])*/;
t0[823] = $$[417](t0[814],"CopyTo",$$[364],10)/*t0[823] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "CopyTo", [dynamic expression], [dynamic expression])*/;
t0[824] = $$[417](t0[814],"Dequeue",$$[365],11)/*t0[824] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Dequeue", [dynamic expression], [dynamic expression])*/;
t0[825] = $$[417](t0[814],"Enqueue",$$[366],12)/*t0[825] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Enqueue", [dynamic expression], [dynamic expression])*/;
t0[826] = $$[417](t0[814],"GetEnumerator",$$[367],13)/*t0[826] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "GetEnumerator", [dynamic expression], [dynamic expression])*/;
t0[827] = $$[417](t0[814],"Peek",$$[368],14)/*t0[827] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Peek", [dynamic expression], [dynamic expression])*/;
t0[828] = $$[417](t0[814],"Synchronized",$$[369],-1)/*t0[828] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "Synchronized", [dynamic expression], -1)*/;
t0[829] = $$[417](t0[814],"ToArray",$$[370],15)/*t0[829] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "ToArray", [dynamic expression], [dynamic expression])*/;
t0[830] = $$[417](t0[814],"TrimToSize",$$[371],16)/*t0[830] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[814], "TrimToSize", [dynamic expression], [dynamic expression])*/;
t0[831] = $$[418](t0[814],".ctor",$$[372])/*t0[831] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[814], ".ctor", [dynamic expression])*/;
t0[832] = $$[418](t0[814],".ctor",$$[373])/*t0[832] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[814], ".ctor", [dynamic expression])*/;
t0[833] = $$[419](t0[814],"Count",t0[815],null)/*t0[833] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[814], "Count", t0[815], null)*/;
t0[834] = $$[419](t0[814],"IsSynchronized",t0[816],t0[817])/*t0[834] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[814], "IsSynchronized", t0[816], t0[817])*/;
t0[835] = $$[419](t0[814],"SyncRoot",t0[818],t0[819])/*t0[835] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[814], "SyncRoot", t0[818], t0[819])*/;
$$[420](t0[814],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[814], [dynamic expression])*/;
$$[420](t0[814],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[814], [dynamic expression])*/;
t0[836] = $$[416]("System.Collections.Generic","IList`1",t0[0],185,null,true,false)/*t0[836] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "IList`1", t0[0], [dynamic expression], null, True, False)*/;
t0[837] = $$[417](t0[836],"get_Item",null,0)/*t0[837] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[836], "get_Item", null, [dynamic expression])*/;
t0[838] = $$[417](t0[836],"set_Item",null,1)/*t0[838] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[836], "set_Item", null, [dynamic expression])*/;
t0[839] = $$[417](t0[836],"Add",null,2)/*t0[839] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[836], "Add", null, [dynamic expression])*/;
t0[840] = $$[417](t0[836],"Clear",null,3)/*t0[840] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[836], "Clear", null, [dynamic expression])*/;
t0[841] = $$[417](t0[836],"get_Count",null,4)/*t0[841] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[836], "get_Count", null, [dynamic expression])*/;
t0[842] = $$[419](t0[836],"Item",t0[837],t0[838])/*t0[842] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[836], "Item", t0[837], t0[838])*/;
t0[843] = $$[419](t0[836],"Count",t0[841],null)/*t0[843] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[836], "Count", t0[841], null)*/;
$$[420](t0[836],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[836], [dynamic expression])*/;
$$[420](t0[836],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[836], [dynamic expression])*/;
t0[844] = $$[416]("System.Collections.Generic","List`1",t0[0],186,null,false,false)/*t0[844] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections.Generic", "List`1", t0[0], [dynamic expression], null, False, False)*/;
t0[845] = $$[417](t0[844],"get_Item",$$[374],4)/*t0[845] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "get_Item", [dynamic expression], [dynamic expression])*/;
t0[846] = $$[417](t0[844],"set_Item",$$[375],5)/*t0[846] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "set_Item", [dynamic expression], [dynamic expression])*/;
t0[847] = $$[417](t0[844],"System.Collections.IList.get_Item",$$[376],6)/*t0[847] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "System.Collections.IList.get_Item", [dynamic expression], [dynamic expression])*/;
t0[848] = $$[417](t0[844],"System.Collections.IList.set_Item",$$[377],7)/*t0[848] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "System.Collections.IList.set_Item", [dynamic expression], [dynamic expression])*/;
t0[849] = $$[417](t0[844],"Clear",$$[378],8)/*t0[849] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "Clear", [dynamic expression], [dynamic expression])*/;
t0[850] = $$[417](t0[844],"Add",$$[379],9)/*t0[850] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "Add", [dynamic expression], [dynamic expression])*/;
t0[851] = $$[417](t0[844],"System.Collections.IList.Add",$$[380],10)/*t0[851] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "System.Collections.IList.Add", [dynamic expression], [dynamic expression])*/;
t0[852] = $$[417](t0[844],"get_Count",$$[381],11)/*t0[852] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "get_Count", [dynamic expression], [dynamic expression])*/;
t0[853] = $$[417](t0[844],"GetEnumerator",$$[382],12)/*t0[853] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "GetEnumerator", [dynamic expression], [dynamic expression])*/;
t0[854] = $$[417](t0[844],"System.Collections.IEnumerable.GetEnumerator",$$[383],13)/*t0[854] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[844], "System.Collections.IEnumerable.GetEnumerator", [dynamic expression], [dynamic expression])*/;
t0[855] = $$[418](t0[844],".ctor",$$[384])/*t0[855] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[844], ".ctor", [dynamic expression])*/;
t0[856] = $$[419](t0[844],"Item",t0[845],t0[846])/*t0[856] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[844], "Item", t0[845], t0[846])*/;
t0[857] = $$[419](t0[844],"System.Collections.IList.Item",t0[847],t0[848])/*t0[857] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[844], "System.Collections.IList.Item", t0[847], t0[848])*/;
t0[858] = $$[419](t0[844],"Count",t0[852],null)/*t0[858] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[844], "Count", t0[852], null)*/;
$$[420](t0[844],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[844], [dynamic expression])*/;
$$[420](t0[844],$$[319].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[844], [dynamic expression])*/;
t0[859] = $$[416]("","Enumerator",t0[0],187,null,false,false)/*t0[859] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "Enumerator", t0[0], [dynamic expression], null, False, False)*/;
t0[860] = $$[417](t0[859],"get_Current",$$[385],4)/*t0[860] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[859], "get_Current", [dynamic expression], [dynamic expression])*/;
t0[861] = $$[417](t0[859],"System.Collections.IEnumerator.get_Current",$$[386],5)/*t0[861] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[859], "System.Collections.IEnumerator.get_Current", [dynamic expression], [dynamic expression])*/;
t0[862] = $$[417](t0[859],"MoveNext",$$[387],6)/*t0[862] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[859], "MoveNext", [dynamic expression], [dynamic expression])*/;
t0[863] = $$[417](t0[859],"Reset",$$[388],7)/*t0[863] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[859], "Reset", [dynamic expression], [dynamic expression])*/;
t0[864] = $$[417](t0[859],"Dispose",$$[389],8)/*t0[864] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[859], "Dispose", [dynamic expression], [dynamic expression])*/;
t0[865] = $$[418](t0[859],".ctor",$$[390])/*t0[865] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[859], ".ctor", [dynamic expression])*/;
t0[866] = $$[419](t0[859],"Current",t0[860],null)/*t0[866] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[859], "Current", t0[860], null)*/;
t0[867] = $$[419](t0[859],"System.Collections.IEnumerator.Current",t0[861],null)/*t0[867] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[859], "System.Collections.IEnumerator.Current", t0[861], null)*/;
t0[868] = $$[416]("System.Collections","ArrayList",t0[0],188,null,false,false)/*t0[868] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Collections", "ArrayList", t0[0], [dynamic expression], null, False, False)*/;
t0[869] = $$[418](t0[868],".ctor",$$[391])/*t0[869] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[868], ".ctor", [dynamic expression])*/;
t0[870] = $$[416]("System","TypeCode",t0[0],189,null,false,false)/*t0[870] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "TypeCode", t0[0], [dynamic expression], null, False, False)*/;
t0[871] = $$[416]("System","Char",t0[0],208,null,false,false)/*t0[871] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Char", t0[0], [dynamic expression], null, False, False)*/;
t0[872] = $$[417](t0[871],"Match",$$[-1],-1)/*t0[872] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[871], "Match", [dynamic expression], -1)*/;
$$[420](t0[872],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[872], [dynamic expression])*/;
t0[873] = $$[417](t0[871],"ToString",$$[392],0)/*t0[873] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[871], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[873],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[873], [dynamic expression])*/;
t0[874] = $$[417](t0[871],"op_Explicit",$$[-1],-1)/*t0[874] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[871], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[874],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[874], [dynamic expression])*/;
t0[875] = $$[417](t0[871],"op_Explicit",$$[-1],-1)/*t0[875] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[871], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[875],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[875], [dynamic expression])*/;
$$[420](t0[871],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[871], [dynamic expression])*/;
$$[420](t0[871],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[871], [dynamic expression])*/;
t0[876] = $$[416]("XaeiOS.Process","DynamicLinker",t0[0],211,null,false,false)/*t0[876] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "DynamicLinker", t0[0], [dynamic expression], null, False, False)*/;
t0[877] = $$[417](t0[876],"Initialize",$$[393],-1)/*t0[877] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[876], "Initialize", [dynamic expression], -1)*/;
t0[878] = $$[417](t0[876],"LoadObjectImage",$$[394],-1)/*t0[878] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[876], "LoadObjectImage", [dynamic expression], -1)*/;
t0[879] = $$[417](t0[876],"SetEntryPointObjectImage",$$[395],-1)/*t0[879] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[876], "SetEntryPointObjectImage", [dynamic expression], -1)*/;
t0[880] = $$[417](t0[876],"Link",$$[396],-1)/*t0[880] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[876], "Link", [dynamic expression], -1)*/;
t0[881] = $$[418](t0[876],".ctor",$$[397])/*t0[881] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[876], ".ctor", [dynamic expression])*/;
t0[882] = $$[416]("XaeiOS.Boot","BootManager",t0[0],215,null,false,false)/*t0[882] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Boot", "BootManager", t0[0], [dynamic expression], null, False, False)*/;
t0[883] = $$[417](t0[882],"Boot",$$[398],-1)/*t0[883] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "Boot", [dynamic expression], -1)*/;
$$[420](t0[883],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[883], [dynamic expression])*/;
t0[884] = $$[417](t0[882],"BootModuleEntryPoint",$$[399],-1)/*t0[884] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "BootModuleEntryPoint", [dynamic expression], -1)*/;
$$[420](t0[884],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[884], [dynamic expression])*/;
t0[885] = $$[417](t0[882],"BootCallback",$$[400],-1)/*t0[885] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "BootCallback", [dynamic expression], -1)*/;
$$[420](t0[885],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[885], [dynamic expression])*/;
t0[886] = $$[417](t0[882],"CreateInitProcess",$$[401],-1)/*t0[886] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "CreateInitProcess", [dynamic expression], -1)*/;
t0[887] = $$[417](t0[882],"InvokeStaticConstructorsAndCallInitFunction",$$[402],-1)/*t0[887] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "InvokeStaticConstructorsAndCallInitFunction", [dynamic expression], -1)*/;
t0[888] = $$[417](t0[882],"GetModuleEntryPoint",$$[-1],-1)/*t0[888] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "GetModuleEntryPoint", [dynamic expression], -1)*/;
$$[420](t0[888],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[888], [dynamic expression])*/;
t0[889] = $$[417](t0[882],"GetModuleStaticConstructors",$$[-1],-1)/*t0[889] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[882], "GetModuleStaticConstructors", [dynamic expression], -1)*/;
$$[420](t0[889],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[889], [dynamic expression])*/;
t0[890] = $$[416]("System","NativeVoidDelegate",t0[0],219,null,false,false)/*t0[890] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeVoidDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[891] = $$[417](t0[890],"Invoke",null,5)/*t0[891] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[890], "Invoke", null, [dynamic expression])*/;
t0[892] = $$[417](t0[890],"BeginInvoke",null,8)/*t0[892] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[890], "BeginInvoke", null, [dynamic expression])*/;
t0[893] = $$[417](t0[890],"EndInvoke",null,9)/*t0[893] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[890], "EndInvoke", null, [dynamic expression])*/;
t0[894] = $$[418](t0[890],".ctor",null)/*t0[894] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[890], ".ctor", null)*/;
$$[420](t0[890],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[890], [dynamic expression])*/;
t0[895] = $$[416]("System","VoidDelegate",t0[0],220,null,false,false)/*t0[895] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "VoidDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[896] = $$[417](t0[895],"Invoke",null,4)/*t0[896] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[895], "Invoke", null, [dynamic expression])*/;
t0[897] = $$[417](t0[895],"BeginInvoke",null,8)/*t0[897] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[895], "BeginInvoke", null, [dynamic expression])*/;
t0[898] = $$[417](t0[895],"EndInvoke",null,9)/*t0[898] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[895], "EndInvoke", null, [dynamic expression])*/;
t0[899] = $$[418](t0[895],".ctor",null)/*t0[899] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[895], ".ctor", null)*/;
t0[900] = $$[416]("System","Int32",t0[0],221,null,false,false)/*t0[900] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Int32", t0[0], [dynamic expression], null, False, False)*/;
t0[901] = $$[417](t0[900],"op_Implicit",$$[-1],-1)/*t0[901] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[900], "op_Implicit", [dynamic expression], -1)*/;
$$[420](t0[901],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[901], [dynamic expression])*/;
t0[902] = $$[417](t0[900],"op_Explicit",$$[-1],-1)/*t0[902] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[900], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[902],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[902], [dynamic expression])*/;
t0[903] = $$[417](t0[900],"ToString",$$[403],0)/*t0[903] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[900], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[903],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[903], [dynamic expression])*/;
t0[904] = $$[417](t0[900],"ToString",$$[-1],-1)/*t0[904] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[900], "ToString", [dynamic expression], -1)*/;
$$[420](t0[904],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[904], [dynamic expression])*/;
t0[905] = $$[417](t0[900],"GetHashCode",$$[404],1)/*t0[905] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[900], "GetHashCode", [dynamic expression], [dynamic expression])*/;
$$[420](t0[900],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[900], [dynamic expression])*/;
$$[420](t0[900],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[900], [dynamic expression])*/;
t0[906] = $$[416]("System","NativeError",t0[0],224,null,false,false)/*t0[906] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "NativeError", t0[0], [dynamic expression], null, False, False)*/;
t0[907] = $$[417](t0[906],"ToString",$$[405],0)/*t0[907] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[906], "ToString", [dynamic expression], [dynamic expression])*/;
t0[908] = $$[417](t0[906],"NativeToString",$$[-1],-1)/*t0[908] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[906], "NativeToString", [dynamic expression], -1)*/;
$$[420](t0[908],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[908], [dynamic expression])*/;
t0[909] = $$[418](t0[906],".ctor",$$[-1])/*t0[909] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[906], ".ctor", [dynamic expression])*/;
$$[420](t0[909],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[909], [dynamic expression])*/;
t0[910] = $$[418](t0[906],".ctor",$$[-1])/*t0[910] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[906], ".ctor", [dynamic expression])*/;
$$[420](t0[910],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[910], [dynamic expression])*/;
$$[420](t0[906],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[906], [dynamic expression])*/;
t0[911] = $$[416]("System.Diagnostics","Logging",t0[0],225,null,false,false)/*t0[911] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Diagnostics", "Logging", t0[0], [dynamic expression], null, False, False)*/;
t0[912] = $$[417](t0[911],"Info",$$[-1],-1)/*t0[912] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[911], "Info", [dynamic expression], -1)*/;
$$[420](t0[912],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[912], [dynamic expression])*/;
t0[913] = $$[417](t0[911],"Debug",$$[-1],-1)/*t0[913] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[911], "Debug", [dynamic expression], -1)*/;
$$[420](t0[913],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[913], [dynamic expression])*/;
t0[914] = $$[417](t0[911],"Warn",$$[-1],-1)/*t0[914] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[911], "Warn", [dynamic expression], -1)*/;
$$[420](t0[914],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[914], [dynamic expression])*/;
t0[915] = $$[417](t0[911],"Trace",$$[-1],-1)/*t0[915] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[911], "Trace", [dynamic expression], -1)*/;
$$[420](t0[915],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[915], [dynamic expression])*/;
t0[916] = $$[416]("System.Runtime.CompilerServices","RuntimeHelpers",t0[0],227,null,false,false)/*t0[916] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "RuntimeHelpers", t0[0], [dynamic expression], null, False, False)*/;
t0[917] = $$[417](t0[916],"Initialize",$$[407],-1)/*t0[917] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "Initialize", [dynamic expression], -1)*/;
t0[918] = $$[417](t0[916],"GetKeys",$$[-1],-1)/*t0[918] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GetKeys", [dynamic expression], -1)*/;
$$[420](t0[918],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[918], [dynamic expression])*/;
t0[919] = $$[417](t0[916],"GenerateHashCode",$$[408],-1)/*t0[919] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GenerateHashCode", [dynamic expression], -1)*/;
$$[420](t0[919],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[919], [dynamic expression])*/;
t0[920] = $$[417](t0[916],"NativeGetHashCode",$$[409],-1)/*t0[920] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "NativeGetHashCode", [dynamic expression], -1)*/;
$$[420](t0[920],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[920], [dynamic expression])*/;
t0[921] = $$[417](t0[916],"Cast",$$[410],-1)/*t0[921] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "Cast", [dynamic expression], -1)*/;
$$[420](t0[921],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[921], [dynamic expression])*/;
t0[922] = $$[417](t0[916],"TryCast",$$[411],-1)/*t0[922] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "TryCast", [dynamic expression], -1)*/;
$$[420](t0[922],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[922], [dynamic expression])*/;
t0[923] = $$[417](t0[916],"ImplementsInterface",$$[412],-1)/*t0[923] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "ImplementsInterface", [dynamic expression], -1)*/;
$$[420](t0[923],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[923], [dynamic expression])*/;
t0[924] = $$[417](t0[916],"TypesEqual",$$[413],-1)/*t0[924] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "TypesEqual", [dynamic expression], -1)*/;
t0[925] = $$[417](t0[916],"InitializeMetadata",$$[414],-1)/*t0[925] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "InitializeMetadata", [dynamic expression], -1)*/;
$$[420](t0[925],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[925], [dynamic expression])*/;
t0[926] = $$[417](t0[916],"CreateAssembly",$$[415],-1)/*t0[926] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateAssembly", [dynamic expression], -1)*/;
$$[420](t0[926],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[926], [dynamic expression])*/;
t0[927] = $$[417](t0[916],"CreateClass",$$[416],-1)/*t0[927] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateClass", [dynamic expression], -1)*/;
$$[420](t0[927],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[927], [dynamic expression])*/;
t0[928] = $$[417](t0[916],"CreateMethod",$$[417],-1)/*t0[928] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateMethod", [dynamic expression], -1)*/;
$$[420](t0[928],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[928], [dynamic expression])*/;
t0[929] = $$[417](t0[916],"CreateConstructor",$$[418],-1)/*t0[929] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateConstructor", [dynamic expression], -1)*/;
$$[420](t0[929],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[929], [dynamic expression])*/;
t0[930] = $$[417](t0[916],"CreateProperty",$$[419],-1)/*t0[930] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateProperty", [dynamic expression], -1)*/;
$$[420](t0[930],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[930], [dynamic expression])*/;
t0[931] = $$[417](t0[916],"CreateCustomAttribute",$$[420],-1)/*t0[931] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateCustomAttribute", [dynamic expression], -1)*/;
$$[420](t0[931],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[931], [dynamic expression])*/;
t0[932] = $$[417](t0[916],"GetMethodNameForStackTrace",$$[421],-1)/*t0[932] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GetMethodNameForStackTrace", [dynamic expression], -1)*/;
$$[420](t0[932],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[932], [dynamic expression])*/;
t0[933] = $$[417](t0[916],"GenerateCodeToDereferenceVTableDataPointer",$$[-1],-1)/*t0[933] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GenerateCodeToDereferenceVTableDataPointer", [dynamic expression], -1)*/;
$$[420](t0[933],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[933], [dynamic expression])*/;
t0[934] = $$[417](t0[916],"GenerateCodeToDereferenceVTableDataPointer",$$[-1],-1)/*t0[934] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GenerateCodeToDereferenceVTableDataPointer", [dynamic expression], -1)*/;
$$[420](t0[934],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[934], [dynamic expression])*/;
t0[935] = $$[417](t0[916],"CreateArray",$$[422],-1)/*t0[935] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "CreateArray", [dynamic expression], -1)*/;
$$[420](t0[935],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[935], [dynamic expression])*/;
t0[936] = $$[417](t0[916],"InitializeArray",$$[423],-1)/*t0[936] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "InitializeArray", [dynamic expression], -1)*/;
t0[937] = $$[417](t0[916],"InitializeInt32Array",$$[424],-1)/*t0[937] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "InitializeInt32Array", [dynamic expression], -1)*/;
$$[420](t0[937],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[937], [dynamic expression])*/;
t0[938] = $$[417](t0[916],"GenerateCodeToInitializeInt32Array",$$[-1],-1)/*t0[938] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[916], "GenerateCodeToInitializeInt32Array", [dynamic expression], -1)*/;
$$[420](t0[938],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[938], [dynamic expression])*/;
t0[939] = $$[416]("System.IO","Stream",t0[0],232,null,false,false)/*t0[939] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.IO", "Stream", t0[0], [dynamic expression], null, False, False)*/;
t0[940] = $$[418](t0[939],".ctor",$$[425])/*t0[940] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[939], ".ctor", [dynamic expression])*/;
t0[941] = $$[416]("XaeiOS","TaskHandle",t0[0],233,null,false,false)/*t0[941] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "TaskHandle", t0[0], [dynamic expression], null, False, False)*/;
t0[942] = $$[417](t0[941],"get_ID",$$[426],-1)/*t0[942] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[941], "get_ID", [dynamic expression], -1)*/;
t0[943] = $$[418](t0[941],".ctor",$$[427])/*t0[943] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[941], ".ctor", [dynamic expression])*/;
t0[944] = $$[419](t0[941],"ID",t0[942],null)/*t0[944] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[941], "ID", t0[942], null)*/;
t0[945] = $$[416]("System.Threading","Condition",t0[0],234,null,false,false)/*t0[945] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "Condition", t0[0], [dynamic expression], null, False, False)*/;
t0[946] = $$[417](t0[945],"Signal",$$[428],-1)/*t0[946] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[945], "Signal", [dynamic expression], -1)*/;
t0[947] = $$[417](t0[945],"Await",$$[429],-1)/*t0[947] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[945], "Await", [dynamic expression], -1)*/;
t0[948] = $$[418](t0[945],".ctor",$$[430])/*t0[948] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[945], ".ctor", [dynamic expression])*/;
t0[949] = $$[416]("System.Threading","TimedCondition",t0[0],235,null,false,false)/*t0[949] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "TimedCondition", t0[0], [dynamic expression], null, False, False)*/;
t0[950] = $$[417](t0[949],"Await",$$[431],-1)/*t0[950] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[949], "Await", [dynamic expression], -1)*/;
$$[420](t0[950],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[950], [dynamic expression])*/;
t0[951] = $$[417](t0[949],"Unblock",$$[432],-1)/*t0[951] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[949], "Unblock", [dynamic expression], -1)*/;
$$[420](t0[951],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[951], [dynamic expression])*/;
t0[952] = $$[418](t0[949],".ctor",$$[433])/*t0[952] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[949], ".ctor", [dynamic expression])*/;
t0[953] = $$[416]("System.Threading","ConditionTimedOutException",t0[0],236,null,false,false)/*t0[953] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ConditionTimedOutException", t0[0], [dynamic expression], null, False, False)*/;
t0[954] = $$[418](t0[953],".ctor",$$[434])/*t0[954] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[953], ".ctor", [dynamic expression])*/;
t0[955] = $$[416]("System","Int64",t0[0],237,null,false,false)/*t0[955] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "Int64", t0[0], [dynamic expression], null, False, False)*/;
t0[956] = $$[417](t0[955],"ToString",$$[435],0)/*t0[956] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[955], "ToString", [dynamic expression], [dynamic expression])*/;
$$[420](t0[956],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[956], [dynamic expression])*/;
t0[957] = $$[417](t0[955],"ToString",$$[-1],-1)/*t0[957] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[955], "ToString", [dynamic expression], -1)*/;
$$[420](t0[957],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[957], [dynamic expression])*/;
$$[420](t0[955],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[955], [dynamic expression])*/;
t0[958] = $$[416]("System","WeakReference",t0[0],240,null,false,false)/*t0[958] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "WeakReference", t0[0], [dynamic expression], null, False, False)*/;
t0[959] = $$[417](t0[958],"get_IsAlive",$$[436],-1)/*t0[959] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[958], "get_IsAlive", [dynamic expression], -1)*/;
t0[960] = $$[417](t0[958],"get_Target",$$[437],-1)/*t0[960] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[958], "get_Target", [dynamic expression], -1)*/;
t0[961] = $$[418](t0[958],".ctor",$$[438])/*t0[961] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[958], ".ctor", [dynamic expression])*/;
t0[962] = $$[419](t0[958],"IsAlive",t0[959],null)/*t0[962] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[958], "IsAlive", t0[959], null)*/;
t0[963] = $$[419](t0[958],"Target",t0[960],null)/*t0[963] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[958], "Target", t0[960], null)*/;
$$[420](t0[958],$$[87].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[958], [dynamic expression])*/;
t0[964] = $$[416]("System.Reflection","RuntimeMethodInfo",t0[0],242,null,false,false)/*t0[964] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Reflection", "RuntimeMethodInfo", t0[0], [dynamic expression], null, False, False)*/;
t0[965] = $$[417](t0[964],"get_DeclaringType",$$[440],4)/*t0[965] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[964], "get_DeclaringType", [dynamic expression], [dynamic expression])*/;
t0[966] = $$[417](t0[964],"get_Name",$$[441],5)/*t0[966] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[964], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[967] = $$[417](t0[964],"Invoke",$$[442],7)/*t0[967] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[964], "Invoke", [dynamic expression], [dynamic expression])*/;
t0[968] = $$[417](t0[964],"IsDefined",$$[443],6)/*t0[968] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[964], "IsDefined", [dynamic expression], [dynamic expression])*/;
t0[969] = $$[418](t0[964],".ctor",$$[444])/*t0[969] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[964], ".ctor", [dynamic expression])*/;
t0[970] = $$[419](t0[964],"DeclaringType",t0[965],null)/*t0[970] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[964], "DeclaringType", t0[965], null)*/;
t0[971] = $$[419](t0[964],"Name",t0[966],null)/*t0[971] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[964], "Name", t0[966], null)*/;
t0[972] = $$[416]("System","UInt32",t0[0],243,null,false,false)/*t0[972] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "UInt32", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[972],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[972], [dynamic expression])*/;
$$[420](t0[972],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[972], [dynamic expression])*/;
t0[973] = $$[416]("XaeiOS","TaskCallback",t0[0],246,null,false,false)/*t0[973] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "TaskCallback", t0[0], [dynamic expression], null, False, False)*/;
t0[974] = $$[417](t0[973],"Invoke",null,5)/*t0[974] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[973], "Invoke", null, [dynamic expression])*/;
t0[975] = $$[417](t0[973],"BeginInvoke",null,8)/*t0[975] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[973], "BeginInvoke", null, [dynamic expression])*/;
t0[976] = $$[417](t0[973],"EndInvoke",null,9)/*t0[976] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[973], "EndInvoke", null, [dynamic expression])*/;
t0[977] = $$[418](t0[973],".ctor",null)/*t0[977] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[973], ".ctor", null)*/;
$$[420](t0[973],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[973], [dynamic expression])*/;
t0[978] = $$[416]("XaeiOS","TaskFunction",t0[0],247,null,false,false)/*t0[978] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "TaskFunction", t0[0], [dynamic expression], null, False, False)*/;
t0[979] = $$[417](t0[978],"Invoke",null,5)/*t0[979] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[978], "Invoke", null, [dynamic expression])*/;
t0[980] = $$[417](t0[978],"BeginInvoke",null,8)/*t0[980] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[978], "BeginInvoke", null, [dynamic expression])*/;
t0[981] = $$[417](t0[978],"EndInvoke",null,9)/*t0[981] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[978], "EndInvoke", null, [dynamic expression])*/;
t0[982] = $$[418](t0[978],".ctor",null)/*t0[982] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[978], ".ctor", null)*/;
$$[420](t0[978],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[978], [dynamic expression])*/;
t0[983] = $$[416]("XaeiOS","TaskPriority",t0[0],248,null,false,false)/*t0[983] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "TaskPriority", t0[0], [dynamic expression], null, False, False)*/;
t0[984] = $$[416]("XaeiOS","TaskExitStatus",t0[0],254,null,false,false)/*t0[984] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "TaskExitStatus", t0[0], [dynamic expression], null, False, False)*/;
t0[985] = $$[416]("System.Threading","ThreadAbortException",t0[0],260,null,false,false)/*t0[985] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Threading", "ThreadAbortException", t0[0], [dynamic expression], null, False, False)*/;
t0[986] = $$[417](t0[985],"get_ExceptionState",$$[447],-1)/*t0[986] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[985], "get_ExceptionState", [dynamic expression], -1)*/;
t0[987] = $$[418](t0[985],".ctor",$$[448])/*t0[987] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[985], ".ctor", [dynamic expression])*/;
t0[988] = $$[418](t0[985],".ctor",$$[449])/*t0[988] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[985], ".ctor", [dynamic expression])*/;
t0[989] = $$[419](t0[985],"ExceptionState",t0[986],null)/*t0[989] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[985], "ExceptionState", t0[986], null)*/;
t0[990] = $$[416]("System.Security","IPermission",t0[0],261,null,true,false)/*t0[990] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Security", "IPermission", t0[0], [dynamic expression], null, True, False)*/;
t0[991] = $$[417](t0[990],"Copy",null,0)/*t0[991] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[990], "Copy", null, [dynamic expression])*/;
t0[992] = $$[417](t0[990],"Demand",null,1)/*t0[992] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[990], "Demand", null, [dynamic expression])*/;
t0[993] = $$[417](t0[990],"Intersect",null,2)/*t0[993] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[990], "Intersect", null, [dynamic expression])*/;
t0[994] = $$[417](t0[990],"IsSubsetOf",null,3)/*t0[994] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[990], "IsSubsetOf", null, [dynamic expression])*/;
t0[995] = $$[417](t0[990],"Union",null,4)/*t0[995] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[990], "Union", null, [dynamic expression])*/;
t0[996] = $$[416]("System.Security.Principal","IPrincipal",t0[0],262,null,true,false)/*t0[996] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Security.Principal", "IPrincipal", t0[0], [dynamic expression], null, True, False)*/;
t0[997] = $$[417](t0[996],"get_Identity",null,0)/*t0[997] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[996], "get_Identity", null, [dynamic expression])*/;
t0[998] = $$[417](t0[996],"IsInRole",null,1)/*t0[998] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[996], "IsInRole", null, [dynamic expression])*/;
t0[999] = $$[419](t0[996],"Identity",t0[997],null)/*t0[999] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[996], "Identity", t0[997], null)*/;
t0[1000] = $$[416]("System.Security.Principal","IIdentity",t0[0],263,null,true,false)/*t0[1000] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Security.Principal", "IIdentity", t0[0], [dynamic expression], null, True, False)*/;
t0[1001] = $$[417](t0[1000],"get_AuthenticationType",null,0)/*t0[1001] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1000], "get_AuthenticationType", null, [dynamic expression])*/;
t0[1002] = $$[417](t0[1000],"get_IsAuthenticated",null,1)/*t0[1002] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1000], "get_IsAuthenticated", null, [dynamic expression])*/;
t0[1003] = $$[417](t0[1000],"get_Name",null,2)/*t0[1003] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1000], "get_Name", null, [dynamic expression])*/;
t0[1004] = $$[419](t0[1000],"AuthenticationType",t0[1001],null)/*t0[1004] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1000], "AuthenticationType", t0[1001], null)*/;
t0[1005] = $$[419](t0[1000],"IsAuthenticated",t0[1002],null)/*t0[1005] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1000], "IsAuthenticated", t0[1002], null)*/;
t0[1006] = $$[419](t0[1000],"Name",t0[1003],null)/*t0[1006] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1000], "Name", t0[1003], null)*/;
t0[1007] = $$[416]("XaeiOS.Security","ExternalIdentity",t0[0],264,null,false,false)/*t0[1007] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Security", "ExternalIdentity", t0[0], [dynamic expression], null, False, False)*/;
t0[1008] = $$[417](t0[1007],"get_AuthenticationType",$$[450],4)/*t0[1008] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1007], "get_AuthenticationType", [dynamic expression], [dynamic expression])*/;
t0[1009] = $$[417](t0[1007],"get_IsAuthenticated",$$[451],5)/*t0[1009] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1007], "get_IsAuthenticated", [dynamic expression], [dynamic expression])*/;
t0[1010] = $$[417](t0[1007],"get_Name",$$[452],6)/*t0[1010] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1007], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[1011] = $$[418](t0[1007],".ctor",$$[453])/*t0[1011] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1007], ".ctor", [dynamic expression])*/;
t0[1012] = $$[419](t0[1007],"AuthenticationType",t0[1008],null)/*t0[1012] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1007], "AuthenticationType", t0[1008], null)*/;
t0[1013] = $$[419](t0[1007],"IsAuthenticated",t0[1009],null)/*t0[1013] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1007], "IsAuthenticated", t0[1009], null)*/;
t0[1014] = $$[419](t0[1007],"Name",t0[1010],null)/*t0[1014] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1007], "Name", t0[1010], null)*/;
t0[1015] = $$[416]("XaeiOS.Security","ExternalPrincipal",t0[0],265,null,false,false)/*t0[1015] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Security", "ExternalPrincipal", t0[0], [dynamic expression], null, False, False)*/;
t0[1016] = $$[417](t0[1015],"get_Identity",$$[454],4)/*t0[1016] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1015], "get_Identity", [dynamic expression], [dynamic expression])*/;
$$[420](t0[1016],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1016], [dynamic expression])*/;
t0[1017] = $$[417](t0[1015],"set_Identity",$$[455],-1)/*t0[1017] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1015], "set_Identity", [dynamic expression], -1)*/;
$$[420](t0[1017],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1017], [dynamic expression])*/;
t0[1018] = $$[417](t0[1015],"IsInRole",$$[456],5)/*t0[1018] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1015], "IsInRole", [dynamic expression], [dynamic expression])*/;
t0[1019] = $$[418](t0[1015],".ctor",$$[457])/*t0[1019] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1015], ".ctor", [dynamic expression])*/;
t0[1020] = $$[419](t0[1015],"Identity",t0[1016],t0[1017])/*t0[1020] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1015], "Identity", t0[1016], t0[1017])*/;
t0[1021] = $$[416]("System.Security","SecurityException",t0[0],266,null,false,false)/*t0[1021] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Security", "SecurityException", t0[0], [dynamic expression], null, False, False)*/;
t0[1022] = $$[418](t0[1021],".ctor",$$[458])/*t0[1022] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1021], ".ctor", [dynamic expression])*/;
t0[1023] = $$[416]("XaeiOS.DataStructures","DoublyLinkedList`1",t0[0],267,null,false,false)/*t0[1023] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.DataStructures", "DoublyLinkedList`1", t0[0], [dynamic expression], null, False, False)*/;
t0[1024] = $$[417](t0[1023],"get_Head",$$[459],-1)/*t0[1024] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1023], "get_Head", [dynamic expression], -1)*/;
t0[1025] = $$[417](t0[1023],"get_Count",$$[460],-1)/*t0[1025] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1023], "get_Count", [dynamic expression], -1)*/;
t0[1026] = $$[417](t0[1023],"Add",$$[461],-1)/*t0[1026] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1023], "Add", [dynamic expression], -1)*/;
t0[1027] = $$[417](t0[1023],"Remove",$$[462],-1)/*t0[1027] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1023], "Remove", [dynamic expression], -1)*/;
t0[1028] = $$[418](t0[1023],".ctor",$$[463])/*t0[1028] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1023], ".ctor", [dynamic expression])*/;
t0[1029] = $$[419](t0[1023],"Head",t0[1024],null)/*t0[1029] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1023], "Head", t0[1024], null)*/;
t0[1030] = $$[419](t0[1023],"Count",t0[1025],null)/*t0[1030] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1023], "Count", t0[1025], null)*/;
t0[1031] = $$[416]("XaeiOS.DataStructures","DoublyLinkedListItem`1",t0[0],268,null,false,false)/*t0[1031] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.DataStructures", "DoublyLinkedListItem`1", t0[0], [dynamic expression], null, False, False)*/;
t0[1032] = $$[418](t0[1031],".ctor",$$[464])/*t0[1032] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1031], ".ctor", [dynamic expression])*/;
t0[1033] = $$[416]("XaeiOS","SIPState",t0[0],269,null,false,false)/*t0[1033] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "SIPState", t0[0], [dynamic expression], null, False, False)*/;
t0[1034] = $$[416]("XaeiOS","SIPManager",t0[0],274,null,false,false)/*t0[1034] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "SIPManager", t0[0], [dynamic expression], null, False, False)*/;
t0[1035] = $$[417](t0[1034],"Initialize",$$[465],-1)/*t0[1035] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "Initialize", [dynamic expression], -1)*/;
t0[1036] = $$[417](t0[1034],"RegisterSIP",$$[466],-1)/*t0[1036] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "RegisterSIP", [dynamic expression], -1)*/;
t0[1037] = $$[417](t0[1034],"UnregisterSIP",$$[467],-1)/*t0[1037] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "UnregisterSIP", [dynamic expression], -1)*/;
t0[1038] = $$[417](t0[1034],"GetSIPs",$$[468],-1)/*t0[1038] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "GetSIPs", [dynamic expression], -1)*/;
t0[1039] = $$[417](t0[1034],"GetSIP",$$[469],-1)/*t0[1039] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "GetSIP", [dynamic expression], -1)*/;
t0[1040] = $$[417](t0[1034],"GetPID",$$[470],-1)/*t0[1040] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1034], "GetPID", [dynamic expression], -1)*/;
$$[420](t0[1040],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1040], [dynamic expression])*/;
t0[1041] = $$[416]("XaeiOS","SIP",t0[0],277,null,false,false)/*t0[1041] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "SIP", t0[0], [dynamic expression], null, False, False)*/;
t0[1042] = $$[417](t0[1041],"get_PID",$$[471],-1)/*t0[1042] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_PID", [dynamic expression], -1)*/;
t0[1043] = $$[417](t0[1041],"set_PID",$$[472],-1)/*t0[1043] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "set_PID", [dynamic expression], -1)*/;
t0[1044] = $$[417](t0[1041],"get_Name",$$[473],-1)/*t0[1044] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_Name", [dynamic expression], -1)*/;
t0[1045] = $$[417](t0[1041],"get_IsDaemon",$$[474],-1)/*t0[1045] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_IsDaemon", [dynamic expression], -1)*/;
$$[420](t0[1045],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1045], [dynamic expression])*/;
t0[1046] = $$[417](t0[1041],"set_IsDaemon",$$[475],-1)/*t0[1046] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "set_IsDaemon", [dynamic expression], -1)*/;
$$[420](t0[1046],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1046], [dynamic expression])*/;
t0[1047] = $$[417](t0[1041],"add_QuitSignal",$$[476],-1)/*t0[1047] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add_QuitSignal", [dynamic expression], -1)*/;
t0[1048] = $$[417](t0[1041],"remove_QuitSignal",$$[477],-1)/*t0[1048] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove_QuitSignal", [dynamic expression], -1)*/;
t0[1049] = $$[417](t0[1041],"add__quitSignal",$$[478],-1)/*t0[1049] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add__quitSignal", [dynamic expression], -1)*/;
t0[1050] = $$[417](t0[1041],"remove__quitSignal",$$[479],-1)/*t0[1050] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove__quitSignal", [dynamic expression], -1)*/;
t0[1051] = $$[417](t0[1041],"add_CustomSignal",$$[480],-1)/*t0[1051] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add_CustomSignal", [dynamic expression], -1)*/;
t0[1052] = $$[417](t0[1041],"remove_CustomSignal",$$[481],-1)/*t0[1052] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove_CustomSignal", [dynamic expression], -1)*/;
t0[1053] = $$[417](t0[1041],"add__customSignal",$$[482],-1)/*t0[1053] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add__customSignal", [dynamic expression], -1)*/;
t0[1054] = $$[417](t0[1041],"remove__customSignal",$$[483],-1)/*t0[1054] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove__customSignal", [dynamic expression], -1)*/;
t0[1055] = $$[417](t0[1041],"add_Exiting",$$[484],-1)/*t0[1055] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add_Exiting", [dynamic expression], -1)*/;
t0[1056] = $$[417](t0[1041],"remove_Exiting",$$[485],-1)/*t0[1056] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove_Exiting", [dynamic expression], -1)*/;
t0[1057] = $$[417](t0[1041],"add__exiting",$$[486],-1)/*t0[1057] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add__exiting", [dynamic expression], -1)*/;
t0[1058] = $$[417](t0[1041],"remove__exiting",$$[487],-1)/*t0[1058] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove__exiting", [dynamic expression], -1)*/;
t0[1059] = $$[417](t0[1041],"add_Exited",$$[488],-1)/*t0[1059] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add_Exited", [dynamic expression], -1)*/;
t0[1060] = $$[417](t0[1041],"remove_Exited",$$[489],-1)/*t0[1060] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove_Exited", [dynamic expression], -1)*/;
t0[1061] = $$[417](t0[1041],"add__exited",$$[490],-1)/*t0[1061] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "add__exited", [dynamic expression], -1)*/;
t0[1062] = $$[417](t0[1041],"remove__exited",$$[491],-1)/*t0[1062] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "remove__exited", [dynamic expression], -1)*/;
t0[1063] = $$[417](t0[1041],"get_Output",$$[492],-1)/*t0[1063] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_Output", [dynamic expression], -1)*/;
$$[420](t0[1063],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1063], [dynamic expression])*/;
t0[1064] = $$[417](t0[1041],"set_Output",$$[493],-1)/*t0[1064] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "set_Output", [dynamic expression], -1)*/;
$$[420](t0[1064],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1064], [dynamic expression])*/;
t0[1065] = $$[417](t0[1041],"get_Error",$$[494],-1)/*t0[1065] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_Error", [dynamic expression], -1)*/;
$$[420](t0[1065],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1065], [dynamic expression])*/;
t0[1066] = $$[417](t0[1041],"set_Error",$$[495],-1)/*t0[1066] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "set_Error", [dynamic expression], -1)*/;
$$[420](t0[1066],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1066], [dynamic expression])*/;
t0[1067] = $$[417](t0[1041],"get_SyncRoot",$$[496],-1)/*t0[1067] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_SyncRoot", [dynamic expression], -1)*/;
$$[420](t0[1067],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1067], [dynamic expression])*/;
t0[1068] = $$[417](t0[1041],"set_SyncRoot",$$[497],-1)/*t0[1068] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "set_SyncRoot", [dynamic expression], -1)*/;
$$[420](t0[1068],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1068], [dynamic expression])*/;
t0[1069] = $$[417](t0[1041],"Start",$$[498],-1)/*t0[1069] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Start", [dynamic expression], -1)*/;
t0[1070] = $$[417](t0[1041],"Start",$$[499],-1)/*t0[1070] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Start", [dynamic expression], -1)*/;
t0[1071] = $$[417](t0[1041],"HandleSignal",$$[500],-1)/*t0[1071] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "HandleSignal", [dynamic expression], -1)*/;
t0[1072] = $$[417](t0[1041],"AddPrincipal",$$[501],-1)/*t0[1072] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "AddPrincipal", [dynamic expression], -1)*/;
t0[1073] = $$[417](t0[1041],"GetPrincipals",$$[502],-1)/*t0[1073] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "GetPrincipals", [dynamic expression], -1)*/;
t0[1074] = $$[417](t0[1041],"GetHashCode",$$[503],1)/*t0[1074] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "GetHashCode", [dynamic expression], [dynamic expression])*/;
t0[1075] = $$[417](t0[1041],"ToString",$$[504],0)/*t0[1075] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "ToString", [dynamic expression], [dynamic expression])*/;
t0[1076] = $$[417](t0[1041],"Equals",$$[505],2)/*t0[1076] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Equals", [dynamic expression], [dynamic expression])*/;
t0[1077] = $$[417](t0[1041],"AddChild",$$[506],-1)/*t0[1077] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "AddChild", [dynamic expression], -1)*/;
t0[1078] = $$[417](t0[1041],"InitializeThread",$$[507],-1)/*t0[1078] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "InitializeThread", [dynamic expression], -1)*/;
t0[1079] = $$[417](t0[1041],"ThreadExited",$$[508],-1)/*t0[1079] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "ThreadExited", [dynamic expression], -1)*/;
t0[1080] = $$[417](t0[1041],"ChildExited",$$[509],-1)/*t0[1080] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "ChildExited", [dynamic expression], -1)*/;
t0[1081] = $$[417](t0[1041],"TryExit",$$[510],-1)/*t0[1081] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "TryExit", [dynamic expression], -1)*/;
t0[1082] = $$[417](t0[1041],"TryExit3",$$[511],-1)/*t0[1082] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "TryExit3", [dynamic expression], -1)*/;
t0[1083] = $$[417](t0[1041],"Exit",$$[512],-1)/*t0[1083] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Exit", [dynamic expression], -1)*/;
t0[1084] = $$[417](t0[1041],"Quit",$$[513],-1)/*t0[1084] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Quit", [dynamic expression], -1)*/;
t0[1085] = $$[417](t0[1041],"Kill",$$[514],-1)/*t0[1085] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "Kill", [dynamic expression], -1)*/;
t0[1086] = $$[417](t0[1041],"InvokeSIP",$$[515],-1)/*t0[1086] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "InvokeSIP", [dynamic expression], -1)*/;
t0[1087] = $$[417](t0[1041],"CreateSystemSIP",$$[516],-1)/*t0[1087] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "CreateSystemSIP", [dynamic expression], -1)*/;
t0[1088] = $$[417](t0[1041],"get_CurrentSIP",$$[517],-1)/*t0[1088] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "get_CurrentSIP", [dynamic expression], -1)*/;
$$[420](t0[1088],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1088], [dynamic expression])*/;
t0[1089] = $$[417](t0[1041],"GetSIPs",$$[518],-1)/*t0[1089] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1041], "GetSIPs", [dynamic expression], -1)*/;
t0[1090] = $$[418](t0[1041],".ctor",$$[519])/*t0[1090] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1041], ".ctor", [dynamic expression])*/;
t0[1091] = $$[418](t0[1041],".ctor",$$[520])/*t0[1091] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1041], ".ctor", [dynamic expression])*/;
t0[1092] = $$[418](t0[1041],".ctor",$$[521])/*t0[1092] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1041], ".ctor", [dynamic expression])*/;
t0[1093] = $$[419](t0[1041],"PID",t0[1042],t0[1043])/*t0[1093] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "PID", t0[1042], t0[1043])*/;
t0[1094] = $$[419](t0[1041],"Name",t0[1044],null)/*t0[1094] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "Name", t0[1044], null)*/;
t0[1095] = $$[419](t0[1041],"IsDaemon",t0[1045],t0[1046])/*t0[1095] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "IsDaemon", t0[1045], t0[1046])*/;
t0[1096] = $$[419](t0[1041],"Output",t0[1063],t0[1064])/*t0[1096] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "Output", t0[1063], t0[1064])*/;
t0[1097] = $$[419](t0[1041],"Error",t0[1065],t0[1066])/*t0[1097] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "Error", t0[1065], t0[1066])*/;
t0[1098] = $$[419](t0[1041],"SyncRoot",t0[1067],t0[1068])/*t0[1098] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "SyncRoot", t0[1067], t0[1068])*/;
t0[1099] = $$[419](t0[1041],"CurrentSIP",t0[1088],null)/*t0[1099] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1041], "CurrentSIP", t0[1088], null)*/;
t0[1100] = $$[416]("","ConsoleTextWriter",t0[0],278,null,false,false)/*t0[1100] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "ConsoleTextWriter", t0[0], [dynamic expression], null, False, False)*/;
t0[1101] = $$[417](t0[1100],"Write",$$[522],4)/*t0[1101] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1100], "Write", [dynamic expression], [dynamic expression])*/;
t0[1102] = $$[417](t0[1100],"ConsoleWrite",$$[-1],-1)/*t0[1102] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1100], "ConsoleWrite", [dynamic expression], -1)*/;
$$[420](t0[1102],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1102], [dynamic expression])*/;
t0[1103] = $$[418](t0[1100],".ctor",$$[523])/*t0[1103] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1100], ".ctor", [dynamic expression])*/;
t0[1104] = $$[416]("XaeiOS.Process","SignalDaemon",t0[0],279,null,false,false)/*t0[1104] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "SignalDaemon", t0[0], [dynamic expression], null, False, False)*/;
t0[1105] = $$[417](t0[1104],"Start",$$[524],-1)/*t0[1105] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1104], "Start", [dynamic expression], -1)*/;
$$[420](t0[1105],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1105], [dynamic expression])*/;
t0[1106] = $$[417](t0[1104],"ExternalSendSignal",$$[525],-1)/*t0[1106] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1104], "ExternalSendSignal", [dynamic expression], -1)*/;
$$[420](t0[1106],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1106], [dynamic expression])*/;
t0[1107] = $$[417](t0[1104],"SendSignal",$$[526],-1)/*t0[1107] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1104], "SendSignal", [dynamic expression], -1)*/;
t0[1108] = $$[417](t0[1104],"<Start>b__0",$$[527],-1)/*t0[1108] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1104], "<Start>b__0", [dynamic expression], -1)*/;
$$[420](t0[1108],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1108], [dynamic expression])*/;
t0[1109] = $$[416]("XaeiOS.Process","SignalHandler",t0[0],283,null,false,false)/*t0[1109] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "SignalHandler", t0[0], [dynamic expression], null, False, False)*/;
t0[1110] = $$[417](t0[1109],"Invoke",null,4)/*t0[1110] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1109], "Invoke", null, [dynamic expression])*/;
t0[1111] = $$[417](t0[1109],"BeginInvoke",null,8)/*t0[1111] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1109], "BeginInvoke", null, [dynamic expression])*/;
t0[1112] = $$[417](t0[1109],"EndInvoke",null,9)/*t0[1112] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1109], "EndInvoke", null, [dynamic expression])*/;
t0[1113] = $$[418](t0[1109],".ctor",null)/*t0[1113] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1109], ".ctor", null)*/;
t0[1114] = $$[416]("XaeiOS.Process","CustomSignalHandler",t0[0],284,null,false,false)/*t0[1114] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "CustomSignalHandler", t0[0], [dynamic expression], null, False, False)*/;
t0[1115] = $$[417](t0[1114],"Invoke",null,4)/*t0[1115] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1114], "Invoke", null, [dynamic expression])*/;
t0[1116] = $$[417](t0[1114],"BeginInvoke",null,8)/*t0[1116] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1114], "BeginInvoke", null, [dynamic expression])*/;
t0[1117] = $$[417](t0[1114],"EndInvoke",null,9)/*t0[1117] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1114], "EndInvoke", null, [dynamic expression])*/;
t0[1118] = $$[418](t0[1114],".ctor",null)/*t0[1118] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1114], ".ctor", null)*/;
t0[1119] = $$[416]("XaeiOS.Process","Signal",t0[0],285,null,false,false)/*t0[1119] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "Signal", t0[0], [dynamic expression], null, False, False)*/;
t0[1120] = $$[416]("XaeiOS.Process","SignalPermission",t0[0],289,null,false,false)/*t0[1120] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Process", "SignalPermission", t0[0], [dynamic expression], null, False, False)*/;
t0[1121] = $$[417](t0[1120],"Copy",$$[528],4)/*t0[1121] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1120], "Copy", [dynamic expression], [dynamic expression])*/;
t0[1122] = $$[417](t0[1120],"Demand",$$[529],5)/*t0[1122] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1120], "Demand", [dynamic expression], [dynamic expression])*/;
t0[1123] = $$[417](t0[1120],"Intersect",$$[530],6)/*t0[1123] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1120], "Intersect", [dynamic expression], [dynamic expression])*/;
t0[1124] = $$[417](t0[1120],"IsSubsetOf",$$[531],7)/*t0[1124] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1120], "IsSubsetOf", [dynamic expression], [dynamic expression])*/;
t0[1125] = $$[417](t0[1120],"Union",$$[532],8)/*t0[1125] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1120], "Union", [dynamic expression], [dynamic expression])*/;
t0[1126] = $$[418](t0[1120],".ctor",$$[533])/*t0[1126] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1120], ".ctor", [dynamic expression])*/;
t0[1127] = $$[416]("XaeiOS.Security","ManifestPrincipal",t0[0],290,null,false,false)/*t0[1127] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Security", "ManifestPrincipal", t0[0], [dynamic expression], null, False, False)*/;
t0[1128] = $$[417](t0[1127],"get_ParentManifest",$$[534],-1)/*t0[1128] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1127], "get_ParentManifest", [dynamic expression], -1)*/;
$$[420](t0[1128],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1128], [dynamic expression])*/;
t0[1129] = $$[417](t0[1127],"set_ParentManifest",$$[535],-1)/*t0[1129] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1127], "set_ParentManifest", [dynamic expression], -1)*/;
$$[420](t0[1129],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1129], [dynamic expression])*/;
t0[1130] = $$[417](t0[1127],"get_Identity",$$[536],4)/*t0[1130] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1127], "get_Identity", [dynamic expression], [dynamic expression])*/;
$$[420](t0[1130],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1130], [dynamic expression])*/;
t0[1131] = $$[417](t0[1127],"set_Identity",$$[537],-1)/*t0[1131] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1127], "set_Identity", [dynamic expression], -1)*/;
$$[420](t0[1131],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1131], [dynamic expression])*/;
t0[1132] = $$[417](t0[1127],"IsInRole",$$[538],5)/*t0[1132] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1127], "IsInRole", [dynamic expression], [dynamic expression])*/;
t0[1133] = $$[418](t0[1127],".ctor",$$[539])/*t0[1133] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1127], ".ctor", [dynamic expression])*/;
t0[1134] = $$[419](t0[1127],"ParentManifest",t0[1128],t0[1129])/*t0[1134] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1127], "ParentManifest", t0[1128], t0[1129])*/;
t0[1135] = $$[419](t0[1127],"Identity",t0[1130],t0[1131])/*t0[1135] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1127], "Identity", t0[1130], t0[1131])*/;
t0[1136] = $$[416]("XaeiOS.Security","RootIdentity",t0[0],291,null,false,false)/*t0[1136] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Security", "RootIdentity", t0[0], [dynamic expression], null, False, False)*/;
t0[1137] = $$[417](t0[1136],"get_AuthenticationType",$$[540],4)/*t0[1137] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1136], "get_AuthenticationType", [dynamic expression], [dynamic expression])*/;
t0[1138] = $$[417](t0[1136],"get_IsAuthenticated",$$[541],5)/*t0[1138] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1136], "get_IsAuthenticated", [dynamic expression], [dynamic expression])*/;
t0[1139] = $$[417](t0[1136],"get_Name",$$[542],6)/*t0[1139] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1136], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[1140] = $$[418](t0[1136],".ctor",$$[543])/*t0[1140] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1136], ".ctor", [dynamic expression])*/;
t0[1141] = $$[419](t0[1136],"AuthenticationType",t0[1137],null)/*t0[1141] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1136], "AuthenticationType", t0[1137], null)*/;
t0[1142] = $$[419](t0[1136],"IsAuthenticated",t0[1138],null)/*t0[1142] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1136], "IsAuthenticated", t0[1138], null)*/;
t0[1143] = $$[419](t0[1136],"Name",t0[1139],null)/*t0[1143] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1136], "Name", t0[1139], null)*/;
t0[1144] = $$[416]("XaeiOS.Security","RootPrincipal",t0[0],292,null,false,false)/*t0[1144] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Security", "RootPrincipal", t0[0], [dynamic expression], null, False, False)*/;
t0[1145] = $$[417](t0[1144],"get_Identity",$$[544],4)/*t0[1145] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1144], "get_Identity", [dynamic expression], [dynamic expression])*/;
$$[420](t0[1145],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1145], [dynamic expression])*/;
t0[1146] = $$[417](t0[1144],"set_Identity",$$[545],-1)/*t0[1146] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1144], "set_Identity", [dynamic expression], -1)*/;
$$[420](t0[1146],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1146], [dynamic expression])*/;
t0[1147] = $$[417](t0[1144],"IsInRole",$$[546],5)/*t0[1147] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1144], "IsInRole", [dynamic expression], [dynamic expression])*/;
t0[1148] = $$[418](t0[1144],".ctor",$$[547])/*t0[1148] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1144], ".ctor", [dynamic expression])*/;
t0[1149] = $$[419](t0[1144],"Identity",t0[1145],t0[1146])/*t0[1149] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1144], "Identity", t0[1145], t0[1146])*/;
t0[1150] = $$[416]("","<>c__DisplayClass1",t0[0],293,null,false,false)/*t0[1150] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[1151] = $$[417](t0[1150],"<CreateInitProcess>b__0",$$[548],-1)/*t0[1151] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1150], "<CreateInitProcess>b__0", [dynamic expression], -1)*/;
t0[1152] = $$[418](t0[1150],".ctor",$$[549])/*t0[1152] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1150], ".ctor", [dynamic expression])*/;
$$[420](t0[1150],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1150], [dynamic expression])*/;
t0[1153] = $$[416]("","<>c__DisplayClass1",t0[0],294,null,false,false)/*t0[1153] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[1154] = $$[417](t0[1153],"<InitializeThread>b__0",$$[550],-1)/*t0[1154] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1153], "<InitializeThread>b__0", [dynamic expression], -1)*/;
t0[1155] = $$[418](t0[1153],".ctor",$$[551])/*t0[1155] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1153], ".ctor", [dynamic expression])*/;
$$[420](t0[1153],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1153], [dynamic expression])*/;
t0[1156] = $$[416]("","<>c__DisplayClass3",t0[0],295,null,false,false)/*t0[1156] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass3", t0[0], [dynamic expression], null, False, False)*/;
t0[1157] = $$[417](t0[1156],"<ExternalSendSignal>b__2",$$[552],-1)/*t0[1157] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1156], "<ExternalSendSignal>b__2", [dynamic expression], -1)*/;
t0[1158] = $$[418](t0[1156],".ctor",$$[553])/*t0[1158] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1156], ".ctor", [dynamic expression])*/;
$$[420](t0[1156],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1156], [dynamic expression])*/;
t0[1159] = $$[416]("","<>c__DisplayClass6",t0[0],296,null,false,false)/*t0[1159] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass6", t0[0], [dynamic expression], null, False, False)*/;
t0[1160] = $$[417](t0[1159],"<SendSignal>b__5",$$[554],-1)/*t0[1160] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1159], "<SendSignal>b__5", [dynamic expression], -1)*/;
t0[1161] = $$[418](t0[1159],".ctor",$$[555])/*t0[1161] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1159], ".ctor", [dynamic expression])*/;
$$[420](t0[1159],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1159], [dynamic expression])*/;
_[297].b = _[0];// XaeiOS.Kernel.TaskPriorityQueue extends System.Object
_[300].b = _[0];// XaeiOS.Kernel.Scheduler extends System.Object
_[314].b = _[10];// XaeiOS.Kernel.Scheduler/ScheduleTaskDelegate extends System.MulticastDelegate
_[315].b = _[10];// XaeiOS.Kernel.Scheduler/HandleExceptionDelegate extends System.MulticastDelegate
_[321].b = _[0];// XaeiOS.SystemCalls extends System.Object
_[322].b = _[1];// XaeiOS.SystemCallAttribute extends System.Attribute
_[323].b = _[0];// XaeiOS.Kernel.XaeiOSException extends System.Object
_[324].b = _[59];// XaeiOS.Kernel.Frame extends System.NativeArray
_[325].b = _[27];// XaeiOS.Kernel.OptimisticStackRebuildingContext extends System.NativeObject
_[326].b = _[0];// XaeiOS.Kernel.Task extends System.Object
_[331].b = _[10];// XaeiOS.Kernel.TaskCallback extends System.MulticastDelegate
_[332].b = _[10];// XaeiOS.Kernel.TaskFunction extends System.MulticastDelegate
_[344].b = _[59];// XaeiOS.Kernel.Continuation extends System.NativeArray
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("XaeiOS.Kernel")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("XaeiOS.Kernel")*/;
t0[1] = $$[416]("XaeiOS.Kernel","TaskPriorityQueue",t0[0],297,null,false,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskPriorityQueue", t0[0], [dynamic expression], null, False, False)*/;
t0[2] = $$[417](t0[1],"Initialize",$$[556],-1)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Initialize", [dynamic expression], -1)*/;
t0[3] = $$[416]("System.Runtime.CompilerServices","XaeiOSMethodImplAttribute",t0[0],153,null,false,false)/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "XaeiOSMethodImplAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[4] = $$[417](t0[3],"get_Options",$$[314],-1)/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "get_Options", [dynamic expression], -1)*/;
t0[5] = $$[417](t0[3],"get_Implementation",$$[315],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "get_Implementation", [dynamic expression], -1)*/;
t0[6] = $$[417](t0[3],"set_Implementation",$$[316],-1)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "set_Implementation", [dynamic expression], -1)*/;
t0[7] = $$[418](t0[3],".ctor",$$[317])/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[3], ".ctor", [dynamic expression])*/;
t0[8] = $$[419](t0[3],"Options",t0[4],null)/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[3], "Options", t0[4], null)*/;
t0[9] = $$[419](t0[3],"Implementation",t0[5],t0[6])/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[3], "Implementation", t0[5], t0[6])*/;
$$[420](t0[3],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[3], [dynamic expression])*/;
$$[420](t0[2],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[2], [dynamic expression])*/;
t0[10] = $$[417](t0[1],"Add",$$[557],-1)/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Add", [dynamic expression], -1)*/;
$$[420](t0[10],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[10], [dynamic expression])*/;
t0[11] = $$[417](t0[1],"Remove",$$[558],-1)/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Remove", [dynamic expression], -1)*/;
$$[420](t0[11],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[11], [dynamic expression])*/;
t0[12] = $$[417](t0[1],"TrickleDown",$$[559],-1)/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "TrickleDown", [dynamic expression], -1)*/;
$$[420](t0[12],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[12], [dynamic expression])*/;
t0[13] = $$[417](t0[1],"BubbleUp",$$[560],-1)/*t0[13] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "BubbleUp", [dynamic expression], -1)*/;
$$[420](t0[13],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[13], [dynamic expression])*/;
t0[14] = $$[417](t0[1],"IsEmpty",$$[561],-1)/*t0[14] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "IsEmpty", [dynamic expression], -1)*/;
$$[420](t0[14],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[14], [dynamic expression])*/;
t0[15] = $$[417](t0[1],"Cleanup",$$[562],-1)/*t0[15] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Cleanup", [dynamic expression], -1)*/;
$$[420](t0[15],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[15], [dynamic expression])*/;
t0[16] = $$[416]("XaeiOS.Kernel","Scheduler",t0[0],300,null,false,false)/*t0[16] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "Scheduler", t0[0], [dynamic expression], null, False, False)*/;
t0[17] = $$[417](t0[16],"get_CurrentTask",$$[563],-1)/*t0[17] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "get_CurrentTask", [dynamic expression], -1)*/;
$$[420](t0[17],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[17], [dynamic expression])*/;
t0[18] = $$[417](t0[16],"get_ExternalTask",$$[564],-1)/*t0[18] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "get_ExternalTask", [dynamic expression], -1)*/;
t0[19] = $$[417](t0[16],"get_InCriticalSection",$$[565],-1)/*t0[19] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "get_InCriticalSection", [dynamic expression], -1)*/;
$$[420](t0[19],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[19], [dynamic expression])*/;
t0[20] = $$[417](t0[16],"EnterCriticalSection",$$[566],-1)/*t0[20] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "EnterCriticalSection", [dynamic expression], -1)*/;
$$[420](t0[20],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[20], [dynamic expression])*/;
t0[21] = $$[417](t0[16],"LeaveCriticalSection",$$[567],-1)/*t0[21] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "LeaveCriticalSection", [dynamic expression], -1)*/;
$$[420](t0[21],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[21], [dynamic expression])*/;
t0[22] = $$[417](t0[16],"Initialize",$$[568],-1)/*t0[22] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[22],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[22], [dynamic expression])*/;
t0[23] = $$[417](t0[16],"RunCpuTimeSlice",$$[569],-1)/*t0[23] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "RunCpuTimeSlice", [dynamic expression], -1)*/;
$$[420](t0[23],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[23], [dynamic expression])*/;
t0[24] = $$[417](t0[16],"CpuCycle",$$[570],-1)/*t0[24] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "CpuCycle", [dynamic expression], -1)*/;
$$[420](t0[24],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[24], [dynamic expression])*/;
t0[25] = $$[417](t0[16],"AdjustMaxTimeSlice",$$[571],-1)/*t0[25] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "AdjustMaxTimeSlice", [dynamic expression], -1)*/;
$$[420](t0[25],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[25], [dynamic expression])*/;
t0[26] = $$[417](t0[16],"ScheduleHandleException",$$[572],-1)/*t0[26] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ScheduleHandleException", [dynamic expression], -1)*/;
$$[420](t0[26],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[26], [dynamic expression])*/;
t0[27] = $$[417](t0[16],"BrokenHandleException",$$[573],-1)/*t0[27] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "BrokenHandleException", [dynamic expression], -1)*/;
t0[28] = $$[417](t0[16],"HandleException",$$[574],-1)/*t0[28] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "HandleException", [dynamic expression], -1)*/;
$$[420](t0[28],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[28], [dynamic expression])*/;
t0[29] = $$[417](t0[16],"ConvertToManagedException",$$[575],-1)/*t0[29] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ConvertToManagedException", [dynamic expression], -1)*/;
$$[420](t0[29],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[29], [dynamic expression])*/;
t0[30] = $$[417](t0[16],"BuildManagedException",$$[576],-1)/*t0[30] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "BuildManagedException", [dynamic expression], -1)*/;
$$[420](t0[30],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[30], [dynamic expression])*/;
t0[31] = $$[417](t0[16],"CleanupTask",$$[577],-1)/*t0[31] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "CleanupTask", [dynamic expression], -1)*/;
$$[420](t0[31],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[31], [dynamic expression])*/;
t0[32] = $$[417](t0[16],"StartCpu",$$[578],-1)/*t0[32] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "StartCpu", [dynamic expression], -1)*/;
$$[420](t0[32],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[32], [dynamic expression])*/;
t0[33] = $$[417](t0[16],"SetInterval",$$[555],-1)/*t0[33] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "SetInterval", [dynamic expression], -1)*/;
$$[420](t0[33],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[33], [dynamic expression])*/;
t0[34] = $$[417](t0[16],"ClearInterval",$$[555],-1)/*t0[34] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ClearInterval", [dynamic expression], -1)*/;
$$[420](t0[34],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[34], [dynamic expression])*/;
t0[35] = $$[417](t0[16],"PauseCpu",$$[579],-1)/*t0[35] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "PauseCpu", [dynamic expression], -1)*/;
$$[420](t0[35],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[35], [dynamic expression])*/;
t0[36] = $$[417](t0[16],"ResumeCpu",$$[580],-1)/*t0[36] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ResumeCpu", [dynamic expression], -1)*/;
$$[420](t0[36],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[36], [dynamic expression])*/;
t0[37] = $$[417](t0[16],"Shutdown",$$[581],-1)/*t0[37] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "Shutdown", [dynamic expression], -1)*/;
$$[420](t0[37],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[37], [dynamic expression])*/;
t0[38] = $$[417](t0[16],"Cleanup",$$[582],-1)/*t0[38] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "Cleanup", [dynamic expression], -1)*/;
$$[420](t0[38],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[38], [dynamic expression])*/;
t0[39] = $$[417](t0[16],"Halt",$$[583],-1)/*t0[39] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "Halt", [dynamic expression], -1)*/;
$$[420](t0[39],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[39], [dynamic expression])*/;
t0[40] = $$[417](t0[16],"DynamicPriority",$$[584],-1)/*t0[40] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "DynamicPriority", [dynamic expression], -1)*/;
$$[420](t0[40],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[40], [dynamic expression])*/;
t0[41] = $$[417](t0[16],"StartTask",$$[585],-1)/*t0[41] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "StartTask", [dynamic expression], -1)*/;
$$[420](t0[41],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[41], [dynamic expression])*/;
t0[42] = $$[417](t0[16],"ScheduleTask",$$[586],-1)/*t0[42] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ScheduleTask", [dynamic expression], -1)*/;
$$[420](t0[42],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[42], [dynamic expression])*/;
t0[43] = $$[417](t0[16],"ScheduleTaskChecked",$$[587],-1)/*t0[43] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "ScheduleTaskChecked", [dynamic expression], -1)*/;
$$[420](t0[43],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[43], [dynamic expression])*/;
t0[44] = $$[417](t0[16],"BlockTask",$$[588],-1)/*t0[44] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "BlockTask", [dynamic expression], -1)*/;
$$[420](t0[44],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[44], [dynamic expression])*/;
t0[45] = $$[417](t0[16],"KillTask",$$[589],-1)/*t0[45] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "KillTask", [dynamic expression], -1)*/;
$$[420](t0[45],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[45], [dynamic expression])*/;
t0[46] = $$[417](t0[16],"GenerateStartTryBlockCode",$$[555],-1)/*t0[46] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateStartTryBlockCode", [dynamic expression], -1)*/;
$$[420](t0[46],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[46], [dynamic expression])*/;
t0[47] = $$[417](t0[16],"GenerateStartWhileNotNullBlockCode",$$[555],-1)/*t0[47] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateStartWhileNotNullBlockCode", [dynamic expression], -1)*/;
$$[420](t0[47],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[47], [dynamic expression])*/;
t0[48] = $$[417](t0[16],"GenerateBreakCode",$$[555],-1)/*t0[48] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateBreakCode", [dynamic expression], -1)*/;
$$[420](t0[48],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[48], [dynamic expression])*/;
t0[49] = $$[417](t0[16],"GenerateStartCatchBlockCode",$$[555],-1)/*t0[49] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateStartCatchBlockCode", [dynamic expression], -1)*/;
$$[420](t0[49],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[49], [dynamic expression])*/;
t0[50] = $$[417](t0[16],"GenerateEndBlockCode",$$[555],-1)/*t0[50] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateEndBlockCode", [dynamic expression], -1)*/;
$$[420](t0[50],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[50], [dynamic expression])*/;
t0[51] = $$[417](t0[16],"GenerateIfValueIsDefinedCode",$$[555],-1)/*t0[51] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateIfValueIsDefinedCode", [dynamic expression], -1)*/;
$$[420](t0[51],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[51], [dynamic expression])*/;
t0[52] = $$[417](t0[16],"GenerateCheckOptimisticStackRebuildingThreshold",$$[555],-1)/*t0[52] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[16], "GenerateCheckOptimisticStackRebuildingThreshold", [dynamic expression], -1)*/;
$$[420](t0[52],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[52], [dynamic expression])*/;
t0[53] = $$[419](t0[16],"CurrentTask",t0[17],null)/*t0[53] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[16], "CurrentTask", t0[17], null)*/;
t0[54] = $$[419](t0[16],"ExternalTask",t0[18],null)/*t0[54] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[16], "ExternalTask", t0[18], null)*/;
t0[55] = $$[419](t0[16],"InCriticalSection",t0[19],null)/*t0[55] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[16], "InCriticalSection", t0[19], null)*/;
t0[56] = $$[416]("","ScheduleTaskDelegate",t0[0],314,null,false,false)/*t0[56] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "ScheduleTaskDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[57] = $$[417](t0[56],"Invoke",null,5)/*t0[57] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[56], "Invoke", null, [dynamic expression])*/;
t0[58] = $$[417](t0[56],"BeginInvoke",null,8)/*t0[58] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[56], "BeginInvoke", null, [dynamic expression])*/;
t0[59] = $$[417](t0[56],"EndInvoke",null,9)/*t0[59] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[56], "EndInvoke", null, [dynamic expression])*/;
t0[60] = $$[418](t0[56],".ctor",null)/*t0[60] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[56], ".ctor", null)*/;
t0[61] = $$[416]("System.Runtime.InteropServices","NativeDelegateAttribute",t0[0],226,null,false,false)/*t0[61] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "NativeDelegateAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[62] = $$[418](t0[61],".ctor",$$[406])/*t0[62] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[61], ".ctor", [dynamic expression])*/;
$$[420](t0[61],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[61], [dynamic expression])*/;
$$[420](t0[56],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[56], [dynamic expression])*/;
t0[63] = $$[416]("","HandleExceptionDelegate",t0[0],315,null,false,false)/*t0[63] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "HandleExceptionDelegate", t0[0], [dynamic expression], null, False, False)*/;
t0[64] = $$[417](t0[63],"Invoke",null,5)/*t0[64] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[63], "Invoke", null, [dynamic expression])*/;
t0[65] = $$[417](t0[63],"BeginInvoke",null,8)/*t0[65] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[63], "BeginInvoke", null, [dynamic expression])*/;
t0[66] = $$[417](t0[63],"EndInvoke",null,9)/*t0[66] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[63], "EndInvoke", null, [dynamic expression])*/;
t0[67] = $$[418](t0[63],".ctor",null)/*t0[67] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[63], ".ctor", null)*/;
$$[420](t0[63],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[63], [dynamic expression])*/;
t0[68] = $$[416]("XaeiOS.Kernel","TaskStatus",t0[0],316,null,false,false)/*t0[68] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskStatus", t0[0], [dynamic expression], null, False, False)*/;
t0[69] = $$[416]("XaeiOS","SystemCalls",t0[0],321,null,false,false)/*t0[69] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "SystemCalls", t0[0], [dynamic expression], null, False, False)*/;
t0[70] = $$[417](t0[69],"GetTask",$$[590],-1)/*t0[70] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "GetTask", [dynamic expression], -1)*/;
$$[420](t0[70],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[70], [dynamic expression])*/;
t0[71] = $$[417](t0[69],"InitializeKernel",$$[591],-1)/*t0[71] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "InitializeKernel", [dynamic expression], -1)*/;
t0[72] = $$[416]("XaeiOS","SystemCallAttribute",t0[0],322,null,false,false)/*t0[72] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS", "SystemCallAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[73] = $$[418](t0[72],".ctor",$$[604])/*t0[73] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[72], ".ctor", [dynamic expression])*/;
t0[74] = $$[416]("System","AttributeUsageAttribute",t0[0],107,null,false,false)/*t0[74] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "AttributeUsageAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[75] = $$[417](t0[74],"get_AllowMultiple",$$[218],-1)/*t0[75] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[74], "get_AllowMultiple", [dynamic expression], -1)*/;
t0[76] = $$[417](t0[74],"set_AllowMultiple",$$[219],-1)/*t0[76] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[74], "set_AllowMultiple", [dynamic expression], -1)*/;
t0[77] = $$[417](t0[74],"get_Inherited",$$[220],-1)/*t0[77] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[74], "get_Inherited", [dynamic expression], -1)*/;
t0[78] = $$[417](t0[74],"set_Inherited",$$[221],-1)/*t0[78] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[74], "set_Inherited", [dynamic expression], -1)*/;
t0[79] = $$[417](t0[74],"get_ValidOn",$$[222],-1)/*t0[79] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[74], "get_ValidOn", [dynamic expression], -1)*/;
t0[80] = $$[418](t0[74],".ctor",$$[223])/*t0[80] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[74], ".ctor", [dynamic expression])*/;
t0[81] = $$[418](t0[74],".ctor",$$[224])/*t0[81] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[74], ".ctor", [dynamic expression])*/;
t0[82] = $$[418](t0[74],".cctor",$$[225])/*t0[82] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[74], ".cctor", [dynamic expression])*/;
t0[83] = $$[419](t0[74],"AllowMultiple",t0[75],t0[76])/*t0[83] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[74], "AllowMultiple", t0[75], t0[76])*/;
t0[84] = $$[419](t0[74],"Inherited",t0[77],t0[78])/*t0[84] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[74], "Inherited", t0[77], t0[78])*/;
t0[85] = $$[419](t0[74],"ValidOn",t0[79],null)/*t0[85] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[74], "ValidOn", t0[79], null)*/;
$$[420](t0[74],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[74], [dynamic expression])*/;
$$[420](t0[72],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[72], [dynamic expression])*/;
$$[420](t0[71],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[71], [dynamic expression])*/;
$$[420](t0[71],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[71], [dynamic expression])*/;
t0[86] = $$[417](t0[69],"StartKernel",$$[592],-1)/*t0[86] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "StartKernel", [dynamic expression], -1)*/;
$$[420](t0[86],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[86], [dynamic expression])*/;
$$[420](t0[86],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[86], [dynamic expression])*/;
t0[87] = $$[417](t0[69],"StartTask",$$[593],-1)/*t0[87] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "StartTask", [dynamic expression], -1)*/;
$$[420](t0[87],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[87], [dynamic expression])*/;
$$[420](t0[87],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[87], [dynamic expression])*/;
t0[88] = $$[417](t0[69],"ScheduleTask",$$[594],-1)/*t0[88] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "ScheduleTask", [dynamic expression], -1)*/;
$$[420](t0[88],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[88], [dynamic expression])*/;
$$[420](t0[88],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[88], [dynamic expression])*/;
t0[89] = $$[417](t0[69],"BlockTask",$$[595],-1)/*t0[89] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "BlockTask", [dynamic expression], -1)*/;
$$[420](t0[89],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[89], [dynamic expression])*/;
$$[420](t0[89],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[89], [dynamic expression])*/;
t0[90] = $$[417](t0[69],"Yield",$$[596],-1)/*t0[90] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "Yield", [dynamic expression], -1)*/;
$$[420](t0[90],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[90], [dynamic expression])*/;
$$[420](t0[90],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[90], [dynamic expression])*/;
t0[91] = $$[417](t0[69],"KillTask",$$[597],-1)/*t0[91] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "KillTask", [dynamic expression], -1)*/;
$$[420](t0[91],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[91], [dynamic expression])*/;
$$[420](t0[91],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[91], [dynamic expression])*/;
t0[92] = $$[417](t0[69],"GetCurrentTask",$$[598],-1)/*t0[92] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "GetCurrentTask", [dynamic expression], -1)*/;
$$[420](t0[92],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[92], [dynamic expression])*/;
$$[420](t0[92],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[92], [dynamic expression])*/;
t0[93] = $$[417](t0[69],"GetExternalTask",$$[599],-1)/*t0[93] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "GetExternalTask", [dynamic expression], -1)*/;
$$[420](t0[93],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[93], [dynamic expression])*/;
$$[420](t0[93],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[93], [dynamic expression])*/;
t0[94] = $$[417](t0[69],"CreateTask",$$[600],-1)/*t0[94] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "CreateTask", [dynamic expression], -1)*/;
$$[420](t0[94],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[94], [dynamic expression])*/;
$$[420](t0[94],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[94], [dynamic expression])*/;
t0[95] = $$[417](t0[69],"GetStackTrace",$$[601],-1)/*t0[95] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "GetStackTrace", [dynamic expression], -1)*/;
$$[420](t0[95],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[95], [dynamic expression])*/;
$$[420](t0[95],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[95], [dynamic expression])*/;
t0[96] = $$[417](t0[69],"InjectException",$$[602],-1)/*t0[96] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "InjectException", [dynamic expression], -1)*/;
$$[420](t0[96],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[96], [dynamic expression])*/;
$$[420](t0[96],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[96], [dynamic expression])*/;
t0[97] = $$[417](t0[69],"InvalidExecutionPointer",$$[603],-1)/*t0[97] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[69], "InvalidExecutionPointer", [dynamic expression], -1)*/;
$$[420](t0[97],$$[604].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[97], [dynamic expression])*/;
$$[420](t0[97],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[97], [dynamic expression])*/;
t0[98] = $$[416]("XaeiOS.Kernel","XaeiOSException",t0[0],323,null,false,false)/*t0[98] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "XaeiOSException", t0[0], [dynamic expression], null, False, False)*/;
t0[99] = $$[417](t0[98],"op_Explicit",$$[555],-1)/*t0[99] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[98], "op_Explicit", [dynamic expression], -1)*/;
t0[100] = $$[416]("System.Runtime.InteropServices","IntrinsicAttribute",t0[0],95,null,false,false)/*t0[100] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "IntrinsicAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[101] = $$[417](t0[100],"get_UseGlobalNamespace",$$[177],-1)/*t0[101] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "get_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[102] = $$[417](t0[100],"set_UseGlobalNamespace",$$[178],-1)/*t0[102] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "set_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[103] = $$[417](t0[100],"get_SetVTable",$$[179],-1)/*t0[103] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "get_SetVTable", [dynamic expression], -1)*/;
t0[104] = $$[417](t0[100],"set_SetVTable",$$[180],-1)/*t0[104] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "set_SetVTable", [dynamic expression], -1)*/;
t0[105] = $$[417](t0[100],"get_Name",$$[181],-1)/*t0[105] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "get_Name", [dynamic expression], -1)*/;
t0[106] = $$[417](t0[100],"set_Name",$$[182],-1)/*t0[106] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[100], "set_Name", [dynamic expression], -1)*/;
t0[107] = $$[418](t0[100],".ctor",$$[183])/*t0[107] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[100], ".ctor", [dynamic expression])*/;
t0[108] = $$[418](t0[100],".ctor",$$[184])/*t0[108] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[100], ".ctor", [dynamic expression])*/;
t0[109] = $$[419](t0[100],"UseGlobalNamespace",t0[101],t0[102])/*t0[109] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[100], "UseGlobalNamespace", t0[101], t0[102])*/;
t0[110] = $$[419](t0[100],"SetVTable",t0[103],t0[104])/*t0[110] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[100], "SetVTable", t0[103], t0[104])*/;
t0[111] = $$[419](t0[100],"Name",t0[105],t0[106])/*t0[111] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[100], "Name", t0[105], t0[106])*/;
$$[420](t0[100],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[100], [dynamic expression])*/;
$$[420](t0[99],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[99], [dynamic expression])*/;
t0[112] = $$[417](t0[98],"op_Explicit",$$[555],-1)/*t0[112] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[98], "op_Explicit", [dynamic expression], -1)*/;
$$[420](t0[112],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[112], [dynamic expression])*/;
t0[113] = $$[418](t0[98],".ctor",$$[605])/*t0[113] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[98], ".ctor", [dynamic expression])*/;
t0[114] = $$[416]("XaeiOS.Kernel","Frame",t0[0],324,null,false,false)/*t0[114] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "Frame", t0[0], [dynamic expression], null, False, False)*/;
t0[115] = $$[417](t0[114],"get_ExceptionCatchPointer",$$[555],-1)/*t0[115] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "get_ExceptionCatchPointer", [dynamic expression], -1)*/;
t0[116] = $$[417](t0[114],"set_ExceptionCatchPointer",$$[555],-1)/*t0[116] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "set_ExceptionCatchPointer", [dynamic expression], -1)*/;
t0[117] = $$[417](t0[114],"get_Exception",$$[555],-1)/*t0[117] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "get_Exception", [dynamic expression], -1)*/;
t0[118] = $$[417](t0[114],"set_Exception",$$[555],-1)/*t0[118] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[114], "set_Exception", [dynamic expression], -1)*/;
t0[119] = $$[418](t0[114],".ctor",$$[606])/*t0[119] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[114], ".ctor", [dynamic expression])*/;
$$[420](t0[119],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[119], [dynamic expression])*/;
t0[120] = $$[419](t0[114],"ExceptionCatchPointer",t0[115],t0[116])/*t0[120] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[114], "ExceptionCatchPointer", t0[115], t0[116])*/;
t0[121] = $$[419](t0[114],"Exception",t0[117],t0[118])/*t0[121] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[114], "Exception", t0[117], t0[118])*/;
$$[420](t0[114],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[114], [dynamic expression])*/;
t0[122] = $$[416]("XaeiOS.Kernel","OptimisticStackRebuildingContext",t0[0],325,null,false,false)/*t0[122] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "OptimisticStackRebuildingContext", t0[0], [dynamic expression], null, False, False)*/;
t0[123] = $$[418](t0[122],".ctor",$$[607])/*t0[123] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[122], ".ctor", [dynamic expression])*/;
$$[420](t0[123],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[123], [dynamic expression])*/;
t0[124] = $$[416]("XaeiOS.Kernel","Task",t0[0],326,null,false,false)/*t0[124] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "Task", t0[0], [dynamic expression], null, False, False)*/;
t0[125] = $$[417](t0[124],"get_TaskCount",$$[608],-1)/*t0[125] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "get_TaskCount", [dynamic expression], -1)*/;
$$[420](t0[125],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[125], [dynamic expression])*/;
t0[126] = $$[417](t0[124],"GetTaskById",$$[609],-1)/*t0[126] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "GetTaskById", [dynamic expression], -1)*/;
$$[420](t0[126],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[126], [dynamic expression])*/;
t0[127] = $$[417](t0[124],"Initialize",$$[610],-1)/*t0[127] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[127],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[127], [dynamic expression])*/;
t0[128] = $$[417](t0[124],"get_Name",$$[611],-1)/*t0[128] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "get_Name", [dynamic expression], -1)*/;
$$[420](t0[128],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[128], [dynamic expression])*/;
t0[129] = $$[417](t0[124],"GetHashCode",$$[612],1)/*t0[129] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "GetHashCode", [dynamic expression], [dynamic expression])*/;
t0[130] = $$[417](t0[124],"ToString",$$[613],0)/*t0[130] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "ToString", [dynamic expression], [dynamic expression])*/;
t0[131] = $$[417](t0[124],"RemoveTask",$$[614],-1)/*t0[131] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "RemoveTask", [dynamic expression], -1)*/;
$$[420](t0[131],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[131], [dynamic expression])*/;
t0[132] = $$[417](t0[124],"Cleanup",$$[615],-1)/*t0[132] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[124], "Cleanup", [dynamic expression], -1)*/;
$$[420](t0[132],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[132], [dynamic expression])*/;
t0[133] = $$[418](t0[124],".ctor",$$[616])/*t0[133] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[124], ".ctor", [dynamic expression])*/;
$$[420](t0[133],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[133], [dynamic expression])*/;
t0[134] = $$[418](t0[124],".ctor",$$[617])/*t0[134] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[124], ".ctor", [dynamic expression])*/;
$$[420](t0[134],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[134], [dynamic expression])*/;
t0[135] = $$[418](t0[124],".ctor",$$[618])/*t0[135] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[124], ".ctor", [dynamic expression])*/;
$$[420](t0[135],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[135], [dynamic expression])*/;
t0[136] = $$[418](t0[124],".ctor",$$[619])/*t0[136] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[124], ".ctor", [dynamic expression])*/;
$$[420](t0[136],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[136], [dynamic expression])*/;
t0[137] = $$[418](t0[124],".ctor",$$[620])/*t0[137] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[124], ".ctor", [dynamic expression])*/;
$$[420](t0[137],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[137], [dynamic expression])*/;
t0[138] = $$[419](t0[124],"TaskCount",t0[125],null)/*t0[138] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[124], "TaskCount", t0[125], null)*/;
t0[139] = $$[419](t0[124],"Name",t0[128],null)/*t0[139] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[124], "Name", t0[128], null)*/;
t0[140] = $$[416]("XaeiOS.Kernel","TaskCallback",t0[0],331,null,false,false)/*t0[140] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskCallback", t0[0], [dynamic expression], null, False, False)*/;
t0[141] = $$[417](t0[140],"Invoke",null,5)/*t0[141] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[140], "Invoke", null, [dynamic expression])*/;
t0[142] = $$[417](t0[140],"BeginInvoke",null,8)/*t0[142] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[140], "BeginInvoke", null, [dynamic expression])*/;
t0[143] = $$[417](t0[140],"EndInvoke",null,9)/*t0[143] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[140], "EndInvoke", null, [dynamic expression])*/;
t0[144] = $$[418](t0[140],".ctor",null)/*t0[144] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[140], ".ctor", null)*/;
$$[420](t0[140],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[140], [dynamic expression])*/;
t0[145] = $$[416]("XaeiOS.Kernel","TaskFunction",t0[0],332,null,false,false)/*t0[145] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskFunction", t0[0], [dynamic expression], null, False, False)*/;
t0[146] = $$[417](t0[145],"Invoke",null,5)/*t0[146] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[145], "Invoke", null, [dynamic expression])*/;
t0[147] = $$[417](t0[145],"BeginInvoke",null,8)/*t0[147] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[145], "BeginInvoke", null, [dynamic expression])*/;
t0[148] = $$[417](t0[145],"EndInvoke",null,9)/*t0[148] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[145], "EndInvoke", null, [dynamic expression])*/;
t0[149] = $$[418](t0[145],".ctor",null)/*t0[149] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[145], ".ctor", null)*/;
$$[420](t0[145],$$[406].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[145], [dynamic expression])*/;
t0[150] = $$[416]("XaeiOS.Kernel","TaskExitStatus",t0[0],333,null,false,false)/*t0[150] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskExitStatus", t0[0], [dynamic expression], null, False, False)*/;
t0[151] = $$[416]("XaeiOS.Kernel","TaskPriority",t0[0],338,null,false,false)/*t0[151] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "TaskPriority", t0[0], [dynamic expression], null, False, False)*/;
t0[152] = $$[416]("XaeiOS.Kernel","Continuation",t0[0],344,null,false,false)/*t0[152] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.Kernel", "Continuation", t0[0], [dynamic expression], null, False, False)*/;
t0[153] = $$[417](t0[152],"Initialize",$$[621],-1)/*t0[153] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[152], "Initialize", [dynamic expression], -1)*/;
$$[420](t0[153],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[153], [dynamic expression])*/;
t0[154] = $$[417](t0[152],"Create",$$[622],-1)/*t0[154] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[152], "Create", [dynamic expression], -1)*/;
$$[420](t0[154],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[154], [dynamic expression])*/;
t0[155] = $$[418](t0[152],".ctor",$$[623])/*t0[155] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[152], ".ctor", [dynamic expression])*/;
$$[420](t0[155],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[155], [dynamic expression])*/;
t0[156] = $$[416]("System","CLSCompliantAttribute",t0[0],259,null,false,false)/*t0[156] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "CLSCompliantAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[157] = $$[417](t0[156],"get_IsCompliant",$$[445],-1)/*t0[157] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[156], "get_IsCompliant", [dynamic expression], -1)*/;
t0[158] = $$[418](t0[156],".ctor",$$[446])/*t0[158] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[156], ".ctor", [dynamic expression])*/;
t0[159] = $$[419](t0[156],"IsCompliant",t0[157],null)/*t0[159] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[156], "IsCompliant", t0[157], null)*/;
$$[420](t0[152],$$[446].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[152], [dynamic expression])*/;
$$[420](t0[152],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[152], [dynamic expression])*/;
_[345].b = _[0];// System.Text.RegularExpressions.Regex extends System.Object
_[346].b = _[0];// System.Text.StringBuilder extends System.Object
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("System")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("System")*/;
t0[1] = $$[416]("System.Text.RegularExpressions","Regex",t0[0],345,null,false,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Text.RegularExpressions", "Regex", t0[0], [dynamic expression], null, False, False)*/;
t0[2] = $$[417](t0[1],"IsMatch",$$[624],-1)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "IsMatch", [dynamic expression], -1)*/;
t0[3] = $$[418](t0[1],".ctor",$$[625])/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1], ".ctor", [dynamic expression])*/;
t0[4] = $$[416]("System.Runtime.CompilerServices","CLRConjugateAttribute",t0[0],46,null,false,false)/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CLRConjugateAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[5] = $$[417](t0[4],"get_ConjugateName",$$[84],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[4], "get_ConjugateName", [dynamic expression], -1)*/;
t0[6] = $$[417](t0[4],"set_ConjugateName",$$[85],-1)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[4], "set_ConjugateName", [dynamic expression], -1)*/;
t0[7] = $$[418](t0[4],".ctor",$$[86])/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[4], ".ctor", [dynamic expression])*/;
t0[8] = $$[419](t0[4],"ConjugateName",t0[5],t0[6])/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[4], "ConjugateName", t0[5], t0[6])*/;
$$[420](t0[4],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[4], [dynamic expression])*/;
$$[420](t0[1],$$[86].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1], [dynamic expression])*/;
t0[9] = $$[416]("System.Text","StringBuilder",t0[0],346,null,false,false)/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Text", "StringBuilder", t0[0], [dynamic expression], null, False, False)*/;
t0[10] = $$[417](t0[9],"Append",$$[626],-1)/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[9], "Append", [dynamic expression], -1)*/;
t0[11] = $$[417](t0[9],"ToString",$$[627],0)/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[9], "ToString", [dynamic expression], [dynamic expression])*/;
t0[12] = $$[418](t0[9],".ctor",$$[628])/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[9], ".ctor", [dynamic expression])*/;
_[355].b = _[0];// System.Browser.XmlHttpRequest.XmlHttpRequestManager extends System.Object
_[361].b = _[0];// System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalSender extends System.Object
_[362].b = _[0];// System.Browser.XmlHttpRequest.XmlHttpRequestManager/OnReadyStateChangeSignalHandler extends System.Object
_[366].b = _[7];// System.Browser.XmlHttpRequest.XmlHttpRequestTimeoutException extends System.Exception
_[368].b = _[0];// System.Browser.Dom.DomManager extends System.Object
_[369].b = _[0];// System.Browser.Dom.DomManager/DomElementResourceWrapper extends System.Object
_[371].b = _[0];// System.Browser.XmlHttpRequest.XmlHttpRequest extends System.Object
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("System.Browser")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("System.Browser")*/;
t0[1] = $$[416]("System.Browser.XmlHttpRequest","IXmlHttpRequest",t0[0],347,null,true,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "IXmlHttpRequest", t0[0], [dynamic expression], null, True, False)*/;
t0[2] = $$[417](t0[1],"Abort",null,0)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Abort", null, [dynamic expression])*/;
t0[3] = $$[416]("System.Runtime.InteropServices","IntrinsicAttribute",t0[0],95,null,false,false)/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "IntrinsicAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[4] = $$[417](t0[3],"get_UseGlobalNamespace",$$[177],-1)/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "get_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[5] = $$[417](t0[3],"set_UseGlobalNamespace",$$[178],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "set_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[6] = $$[417](t0[3],"get_SetVTable",$$[179],-1)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "get_SetVTable", [dynamic expression], -1)*/;
t0[7] = $$[417](t0[3],"set_SetVTable",$$[180],-1)/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "set_SetVTable", [dynamic expression], -1)*/;
t0[8] = $$[417](t0[3],"get_Name",$$[181],-1)/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "get_Name", [dynamic expression], -1)*/;
t0[9] = $$[417](t0[3],"set_Name",$$[182],-1)/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[3], "set_Name", [dynamic expression], -1)*/;
t0[10] = $$[418](t0[3],".ctor",$$[183])/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[3], ".ctor", [dynamic expression])*/;
t0[11] = $$[418](t0[3],".ctor",$$[184])/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[3], ".ctor", [dynamic expression])*/;
t0[12] = $$[419](t0[3],"UseGlobalNamespace",t0[4],t0[5])/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[3], "UseGlobalNamespace", t0[4], t0[5])*/;
t0[13] = $$[419](t0[3],"SetVTable",t0[6],t0[7])/*t0[13] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[3], "SetVTable", t0[6], t0[7])*/;
t0[14] = $$[419](t0[3],"Name",t0[8],t0[9])/*t0[14] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[3], "Name", t0[8], t0[9])*/;
$$[420](t0[3],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[3], [dynamic expression])*/;
$$[420](t0[2],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[2], [dynamic expression])*/;
t0[15] = $$[417](t0[1],"GetAllResponseHeaders",null,1)/*t0[15] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "GetAllResponseHeaders", null, [dynamic expression])*/;
$$[420](t0[15],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[15], [dynamic expression])*/;
t0[16] = $$[417](t0[1],"GetResponseHeader",null,2)/*t0[16] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "GetResponseHeader", null, [dynamic expression])*/;
$$[420](t0[16],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[16], [dynamic expression])*/;
t0[17] = $$[417](t0[1],"Open",null,3)/*t0[17] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Open", null, [dynamic expression])*/;
$$[420](t0[17],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[17], [dynamic expression])*/;
t0[18] = $$[417](t0[1],"Open",null,4)/*t0[18] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Open", null, [dynamic expression])*/;
$$[420](t0[18],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[18], [dynamic expression])*/;
t0[19] = $$[417](t0[1],"Open",null,5)/*t0[19] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Open", null, [dynamic expression])*/;
$$[420](t0[19],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[19], [dynamic expression])*/;
t0[20] = $$[417](t0[1],"Open",null,6)/*t0[20] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Open", null, [dynamic expression])*/;
$$[420](t0[20],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[20], [dynamic expression])*/;
t0[21] = $$[417](t0[1],"Send",null,7)/*t0[21] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Send", null, [dynamic expression])*/;
$$[420](t0[21],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[21], [dynamic expression])*/;
t0[22] = $$[417](t0[1],"SetRequestHeader",null,8)/*t0[22] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "SetRequestHeader", null, [dynamic expression])*/;
$$[420](t0[22],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[22], [dynamic expression])*/;
t0[23] = $$[417](t0[1],"get_ResponseText",null,9)/*t0[23] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_ResponseText", null, [dynamic expression])*/;
t0[24] = $$[417](t0[1],"get_Status",null,10)/*t0[24] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_Status", null, [dynamic expression])*/;
t0[25] = $$[417](t0[1],"get_StatusText",null,11)/*t0[25] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_StatusText", null, [dynamic expression])*/;
t0[26] = $$[417](t0[1],"get_ReadyState",null,12)/*t0[26] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_ReadyState", null, [dynamic expression])*/;
t0[27] = $$[417](t0[1],"get_OnReadyStateChange",null,13)/*t0[27] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_OnReadyStateChange", null, [dynamic expression])*/;
t0[28] = $$[417](t0[1],"set_OnReadyStateChange",null,14)/*t0[28] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "set_OnReadyStateChange", null, [dynamic expression])*/;
t0[29] = $$[419](t0[1],"ResponseText",t0[23],null)/*t0[29] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "ResponseText", t0[23], null)*/;
t0[30] = $$[419](t0[1],"Status",t0[24],null)/*t0[30] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "Status", t0[24], null)*/;
t0[31] = $$[419](t0[1],"StatusText",t0[25],null)/*t0[31] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "StatusText", t0[25], null)*/;
t0[32] = $$[419](t0[1],"ReadyState",t0[26],null)/*t0[32] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "ReadyState", t0[26], null)*/;
t0[33] = $$[419](t0[1],"OnReadyStateChange",t0[27],t0[28])/*t0[33] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "OnReadyStateChange", t0[27], t0[28])*/;
$$[420](t0[1],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[1], [dynamic expression])*/;
t0[34] = $$[416]("System.Browser.XmlHttpRequest","ReadyState",t0[0],348,null,false,false)/*t0[34] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "ReadyState", t0[0], [dynamic expression], null, False, False)*/;
t0[35] = $$[416]("System.Browser.Css","IStyle",t0[0],354,null,true,false)/*t0[35] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.Css", "IStyle", t0[0], [dynamic expression], null, True, False)*/;
t0[36] = $$[417](t0[35],"get_Left",null,0)/*t0[36] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Left", null, [dynamic expression])*/;
t0[37] = $$[417](t0[35],"set_Left",null,1)/*t0[37] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Left", null, [dynamic expression])*/;
t0[38] = $$[417](t0[35],"get_Top",null,2)/*t0[38] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Top", null, [dynamic expression])*/;
t0[39] = $$[417](t0[35],"set_Top",null,3)/*t0[39] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Top", null, [dynamic expression])*/;
t0[40] = $$[417](t0[35],"get_Width",null,4)/*t0[40] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Width", null, [dynamic expression])*/;
t0[41] = $$[417](t0[35],"set_Width",null,5)/*t0[41] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Width", null, [dynamic expression])*/;
t0[42] = $$[417](t0[35],"get_Height",null,6)/*t0[42] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Height", null, [dynamic expression])*/;
t0[43] = $$[417](t0[35],"set_Height",null,7)/*t0[43] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Height", null, [dynamic expression])*/;
t0[44] = $$[417](t0[35],"get_BackgroundColor",null,8)/*t0[44] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_BackgroundColor", null, [dynamic expression])*/;
t0[45] = $$[417](t0[35],"set_BackgroundColor",null,9)/*t0[45] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_BackgroundColor", null, [dynamic expression])*/;
t0[46] = $$[417](t0[35],"get_Position",null,10)/*t0[46] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Position", null, [dynamic expression])*/;
t0[47] = $$[417](t0[35],"set_Position",null,11)/*t0[47] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Position", null, [dynamic expression])*/;
t0[48] = $$[417](t0[35],"get_Opacity",null,12)/*t0[48] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "get_Opacity", null, [dynamic expression])*/;
t0[49] = $$[417](t0[35],"set_Opacity",null,13)/*t0[49] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[35], "set_Opacity", null, [dynamic expression])*/;
t0[50] = $$[419](t0[35],"Left",t0[36],t0[37])/*t0[50] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Left", t0[36], t0[37])*/;
t0[51] = $$[419](t0[35],"Top",t0[38],t0[39])/*t0[51] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Top", t0[38], t0[39])*/;
t0[52] = $$[419](t0[35],"Width",t0[40],t0[41])/*t0[52] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Width", t0[40], t0[41])*/;
t0[53] = $$[419](t0[35],"Height",t0[42],t0[43])/*t0[53] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Height", t0[42], t0[43])*/;
t0[54] = $$[419](t0[35],"BackgroundColor",t0[44],t0[45])/*t0[54] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "BackgroundColor", t0[44], t0[45])*/;
t0[55] = $$[419](t0[35],"Position",t0[46],t0[47])/*t0[55] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Position", t0[46], t0[47])*/;
t0[56] = $$[419](t0[35],"Opacity",t0[48],t0[49])/*t0[56] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[35], "Opacity", t0[48], t0[49])*/;
$$[420](t0[35],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[35], [dynamic expression])*/;
t0[57] = $$[416]("System.Browser.XmlHttpRequest","XmlHttpRequestManager",t0[0],355,null,false,false)/*t0[57] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "XmlHttpRequestManager", t0[0], [dynamic expression], null, False, False)*/;
t0[58] = $$[417](t0[57],"StartDriver",$$[629],-1)/*t0[58] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "StartDriver", [dynamic expression], -1)*/;
t0[59] = $$[416]("System.Runtime.CompilerServices","XaeiOSMethodImplAttribute",t0[0],153,null,false,false)/*t0[59] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "XaeiOSMethodImplAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[60] = $$[417](t0[59],"get_Options",$$[314],-1)/*t0[60] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[59], "get_Options", [dynamic expression], -1)*/;
t0[61] = $$[417](t0[59],"get_Implementation",$$[315],-1)/*t0[61] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[59], "get_Implementation", [dynamic expression], -1)*/;
t0[62] = $$[417](t0[59],"set_Implementation",$$[316],-1)/*t0[62] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[59], "set_Implementation", [dynamic expression], -1)*/;
t0[63] = $$[418](t0[59],".ctor",$$[317])/*t0[63] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[59], ".ctor", [dynamic expression])*/;
t0[64] = $$[419](t0[59],"Options",t0[60],null)/*t0[64] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[59], "Options", t0[60], null)*/;
t0[65] = $$[419](t0[59],"Implementation",t0[61],t0[62])/*t0[65] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[59], "Implementation", t0[61], t0[62])*/;
$$[420](t0[59],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[59], [dynamic expression])*/;
$$[420](t0[58],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[58], [dynamic expression])*/;
t0[66] = $$[417](t0[57],"HandleCustomSignal",$$[630],-1)/*t0[66] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "HandleCustomSignal", [dynamic expression], -1)*/;
t0[67] = $$[417](t0[57],"CreateOnReadyStateChangeSignalSender",$$[631],-1)/*t0[67] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "CreateOnReadyStateChangeSignalSender", [dynamic expression], -1)*/;
t0[68] = $$[417](t0[57],"DestroyOnReadyStateChangeSignalSender",$$[632],-1)/*t0[68] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "DestroyOnReadyStateChangeSignalSender", [dynamic expression], -1)*/;
t0[69] = $$[417](t0[57],"GetXmlHttpRequest",$$[633],-1)/*t0[69] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "GetXmlHttpRequest", [dynamic expression], -1)*/;
t0[70] = $$[417](t0[57],"DoSimpleXmlHttpRequest",$$[634],-1)/*t0[70] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "DoSimpleXmlHttpRequest", [dynamic expression], -1)*/;
t0[71] = $$[417](t0[57],"DoSimpleXmlHttpRequest",$$[635],-1)/*t0[71] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "DoSimpleXmlHttpRequest", [dynamic expression], -1)*/;
t0[72] = $$[417](t0[57],"DoSimpleXmlHttpRequest",$$[636],-1)/*t0[72] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "DoSimpleXmlHttpRequest", [dynamic expression], -1)*/;
t0[73] = $$[417](t0[57],"DoSimpleXmlHttpRequest",$$[637],-1)/*t0[73] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "DoSimpleXmlHttpRequest", [dynamic expression], -1)*/;
t0[74] = $$[417](t0[57],"_doSimpleXmlHttpRequest",$$[638],-1)/*t0[74] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "_doSimpleXmlHttpRequest", [dynamic expression], -1)*/;
t0[75] = $$[417](t0[57],"NativeGetXmlHttpRequest",$$[628],-1)/*t0[75] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "NativeGetXmlHttpRequest", [dynamic expression], -1)*/;
$$[420](t0[75],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[75], [dynamic expression])*/;
t0[76] = $$[417](t0[57],"<StartDriver>b__0",$$[639],-1)/*t0[76] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[57], "<StartDriver>b__0", [dynamic expression], -1)*/;
t0[77] = $$[416]("System.Runtime.CompilerServices","CompilerGeneratedAttribute",t0[0],241,null,false,false)/*t0[77] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CompilerGeneratedAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[78] = $$[418](t0[77],".ctor",$$[439])/*t0[78] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[77], ".ctor", [dynamic expression])*/;
$$[420](t0[77],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[77], [dynamic expression])*/;
$$[420](t0[76],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[76], [dynamic expression])*/;
t0[79] = $$[418](t0[57],".cctor",$$[640])/*t0[79] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[57], ".cctor", [dynamic expression])*/;
t0[80] = $$[416]("","OnReadyStateChangeSignalSender",t0[0],361,null,false,false)/*t0[80] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "OnReadyStateChangeSignalSender", t0[0], [dynamic expression], null, False, False)*/;
t0[81] = $$[417](t0[80],"SendSignal",$$[641],-1)/*t0[81] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[80], "SendSignal", [dynamic expression], -1)*/;
$$[420](t0[81],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[81], [dynamic expression])*/;
t0[82] = $$[418](t0[80],".ctor",$$[642])/*t0[82] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[80], ".ctor", [dynamic expression])*/;
t0[83] = $$[416]("","OnReadyStateChangeSignalHandler",t0[0],362,null,false,false)/*t0[83] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "OnReadyStateChangeSignalHandler", t0[0], [dynamic expression], null, False, False)*/;
t0[84] = $$[417](t0[83],"OnReadyStateChange",$$[643],-1)/*t0[84] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "OnReadyStateChange", [dynamic expression], -1)*/;
t0[85] = $$[418](t0[83],".ctor",$$[644])/*t0[85] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[83], ".ctor", [dynamic expression])*/;
t0[86] = $$[416]("System.Browser.XmlHttpRequest","RequestMethod",t0[0],363,null,false,false)/*t0[86] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "RequestMethod", t0[0], [dynamic expression], null, False, False)*/;
t0[87] = $$[416]("System.Browser.XmlHttpRequest","XmlHttpRequestTimeoutException",t0[0],366,null,false,false)/*t0[87] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "XmlHttpRequestTimeoutException", t0[0], [dynamic expression], null, False, False)*/;
t0[88] = $$[417](t0[87],"get_XmlHttpRequest",$$[645],-1)/*t0[88] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[87], "get_XmlHttpRequest", [dynamic expression], -1)*/;
$$[420](t0[88],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[88], [dynamic expression])*/;
t0[89] = $$[417](t0[87],"set_XmlHttpRequest",$$[646],-1)/*t0[89] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[87], "set_XmlHttpRequest", [dynamic expression], -1)*/;
$$[420](t0[89],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[89], [dynamic expression])*/;
t0[90] = $$[418](t0[87],".ctor",$$[647])/*t0[90] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[87], ".ctor", [dynamic expression])*/;
t0[91] = $$[419](t0[87],"XmlHttpRequest",t0[88],t0[89])/*t0[91] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[87], "XmlHttpRequest", t0[88], t0[89])*/;
t0[92] = $$[416]("System.Browser.Dom","IDomNode",t0[0],367,null,true,false)/*t0[92] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.Dom", "IDomNode", t0[0], [dynamic expression], null, True, False)*/;
t0[93] = $$[417](t0[92],"get_ParentNode",null,0)/*t0[93] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[92], "get_ParentNode", null, [dynamic expression])*/;
t0[94] = $$[417](t0[92],"RemoveChild",null,1)/*t0[94] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[92], "RemoveChild", null, [dynamic expression])*/;
$$[420](t0[94],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[94], [dynamic expression])*/;
t0[95] = $$[417](t0[92],"AppendChild",null,2)/*t0[95] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[92], "AppendChild", null, [dynamic expression])*/;
$$[420](t0[95],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[95], [dynamic expression])*/;
t0[96] = $$[419](t0[92],"ParentNode",t0[93],null)/*t0[96] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[92], "ParentNode", t0[93], null)*/;
$$[420](t0[92],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[92], [dynamic expression])*/;
t0[97] = $$[416]("System.Browser.Dom","DomManager",t0[0],368,null,false,false)/*t0[97] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.Dom", "DomManager", t0[0], [dynamic expression], null, False, False)*/;
t0[98] = $$[417](t0[97],"get_Document",$$[628],-1)/*t0[98] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "get_Document", [dynamic expression], -1)*/;
$$[420](t0[98],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[98], [dynamic expression])*/;
t0[99] = $$[417](t0[97],"GetDocumentElement",$$[628],-1)/*t0[99] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "GetDocumentElement", [dynamic expression], -1)*/;
$$[420](t0[99],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[99], [dynamic expression])*/;
t0[100] = $$[417](t0[97],"GetDocumentBody",$$[628],-1)/*t0[100] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "GetDocumentBody", [dynamic expression], -1)*/;
$$[420](t0[100],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[100], [dynamic expression])*/;
t0[101] = $$[417](t0[97],"CreateElement",$$[648],-1)/*t0[101] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "CreateElement", [dynamic expression], -1)*/;
t0[102] = $$[417](t0[97],"RegisterElement",$$[649],-1)/*t0[102] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[97], "RegisterElement", [dynamic expression], -1)*/;
t0[103] = $$[419](t0[97],"Document",t0[98],null)/*t0[103] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[97], "Document", t0[98], null)*/;
t0[104] = $$[416]("","DomElementResourceWrapper",t0[0],369,null,false,false)/*t0[104] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "DomElementResourceWrapper", t0[0], [dynamic expression], null, False, False)*/;
t0[105] = $$[417](t0[104],"Dispose",$$[650],4)/*t0[105] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[104], "Dispose", [dynamic expression], [dynamic expression])*/;
t0[106] = $$[417](t0[104],"ToString",$$[651],0)/*t0[106] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[104], "ToString", [dynamic expression], [dynamic expression])*/;
t0[107] = $$[418](t0[104],".ctor",$$[652])/*t0[107] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[104], ".ctor", [dynamic expression])*/;
t0[108] = $$[416]("System.Browser.Dom","IDomElement",t0[0],370,null,true,false)/*t0[108] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.Dom", "IDomElement", t0[0], [dynamic expression], null, True, False)*/;
t0[109] = $$[417](t0[108],"get_Style",null,0)/*t0[109] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[108], "get_Style", null, [dynamic expression])*/;
t0[110] = $$[417](t0[108],"get_InnerHtml",null,1)/*t0[110] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[108], "get_InnerHtml", null, [dynamic expression])*/;
t0[111] = $$[417](t0[108],"set_InnerHtml",null,2)/*t0[111] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[108], "set_InnerHtml", null, [dynamic expression])*/;
t0[112] = $$[417](t0[108],"GetAttribute",null,3)/*t0[112] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[108], "GetAttribute", null, [dynamic expression])*/;
$$[420](t0[112],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[112], [dynamic expression])*/;
t0[113] = $$[417](t0[108],"SetAttribute",null,4)/*t0[113] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[108], "SetAttribute", null, [dynamic expression])*/;
$$[420](t0[113],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[113], [dynamic expression])*/;
t0[114] = $$[419](t0[108],"Style",t0[109],null)/*t0[114] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[108], "Style", t0[109], null)*/;
t0[115] = $$[419](t0[108],"InnerHtml",t0[110],t0[111])/*t0[115] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[108], "InnerHtml", t0[110], t0[111])*/;
$$[420](t0[108],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[108], [dynamic expression])*/;
t0[116] = $$[416]("System.Browser.XmlHttpRequest","XmlHttpRequest",t0[0],371,null,false,false)/*t0[116] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.XmlHttpRequest", "XmlHttpRequest", t0[0], [dynamic expression], null, False, False)*/;
t0[117] = $$[417](t0[116],"Abort",$$[653],-1)/*t0[117] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Abort", [dynamic expression], -1)*/;
t0[118] = $$[417](t0[116],"GetAllResponseHeaders",$$[654],-1)/*t0[118] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "GetAllResponseHeaders", [dynamic expression], -1)*/;
t0[119] = $$[417](t0[116],"GetResponseHeader",$$[655],-1)/*t0[119] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "GetResponseHeader", [dynamic expression], -1)*/;
t0[120] = $$[417](t0[116],"Open",$$[656],-1)/*t0[120] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Open", [dynamic expression], -1)*/;
t0[121] = $$[417](t0[116],"Open",$$[657],-1)/*t0[121] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Open", [dynamic expression], -1)*/;
t0[122] = $$[417](t0[116],"Open",$$[658],-1)/*t0[122] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Open", [dynamic expression], -1)*/;
t0[123] = $$[417](t0[116],"Open",$$[659],-1)/*t0[123] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Open", [dynamic expression], -1)*/;
t0[124] = $$[417](t0[116],"Send",$$[660],-1)/*t0[124] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "Send", [dynamic expression], -1)*/;
t0[125] = $$[417](t0[116],"SetRequestHeader",$$[661],-1)/*t0[125] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "SetRequestHeader", [dynamic expression], -1)*/;
t0[126] = $$[417](t0[116],"get_ResponseText",$$[662],-1)/*t0[126] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "get_ResponseText", [dynamic expression], -1)*/;
t0[127] = $$[417](t0[116],"get_Status",$$[663],-1)/*t0[127] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "get_Status", [dynamic expression], -1)*/;
t0[128] = $$[417](t0[116],"get_StatusText",$$[664],-1)/*t0[128] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "get_StatusText", [dynamic expression], -1)*/;
t0[129] = $$[417](t0[116],"get_ReadyState",$$[665],-1)/*t0[129] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "get_ReadyState", [dynamic expression], -1)*/;
$$[420](t0[129],$$[317].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[129], [dynamic expression])*/;
t0[130] = $$[417](t0[116],"get_OnReadyStateChange",$$[666],-1)/*t0[130] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "get_OnReadyStateChange", [dynamic expression], -1)*/;
t0[131] = $$[417](t0[116],"set_OnReadyStateChange",$$[667],-1)/*t0[131] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "set_OnReadyStateChange", [dynamic expression], -1)*/;
t0[132] = $$[417](t0[116],"ToString",$$[668],0)/*t0[132] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "ToString", [dynamic expression], [dynamic expression])*/;
t0[133] = $$[418](t0[116],".ctor",$$[669])/*t0[133] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[116], ".ctor", [dynamic expression])*/;
t0[134] = $$[419](t0[116],"ResponseText",t0[126],null)/*t0[134] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[116], "ResponseText", t0[126], null)*/;
t0[135] = $$[419](t0[116],"Status",t0[127],null)/*t0[135] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[116], "Status", t0[127], null)*/;
t0[136] = $$[419](t0[116],"StatusText",t0[128],null)/*t0[136] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[116], "StatusText", t0[128], null)*/;
t0[137] = $$[419](t0[116],"ReadyState",t0[129],null)/*t0[137] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[116], "ReadyState", t0[129], null)*/;
t0[138] = $$[419](t0[116],"OnReadyStateChange",t0[130],t0[131])/*t0[138] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[116], "OnReadyStateChange", t0[130], t0[131])*/;
t0[139] = $$[416]("System.Browser.Dom","IDomDocument",t0[0],372,null,true,false)/*t0[139] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Browser.Dom", "IDomDocument", t0[0], [dynamic expression], null, True, False)*/;
t0[140] = $$[417](t0[139],"CreateElement",null,0)/*t0[140] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[139], "CreateElement", null, [dynamic expression])*/;
$$[420](t0[140],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[140], [dynamic expression])*/;
t0[141] = $$[417](t0[139],"GetElementById",null,1)/*t0[141] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[139], "GetElementById", null, [dynamic expression])*/;
$$[420](t0[141],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[141], [dynamic expression])*/;
$$[420](t0[139],$$[183].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[139], [dynamic expression])*/;
_[373].b = _[0];// XaeiOS.ProcessViewer.ProcessViewer extends System.Object
_[374].b = _[0];// XaeiOS.ProcessViewer.Program extends System.Object
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("XaeiOS.ProcessViewer")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("XaeiOS.ProcessViewer")*/;
t0[1] = $$[416]("XaeiOS.ProcessViewer","ProcessViewer",t0[0],373,null,false,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.ProcessViewer", "ProcessViewer", t0[0], [dynamic expression], null, False, False)*/;
t0[2] = $$[417](t0[1],"get_UpdateInterval",$$[670],-1)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "get_UpdateInterval", [dynamic expression], -1)*/;
t0[3] = $$[416]("System.Runtime.CompilerServices","CompilerGeneratedAttribute",t0[0],241,null,false,false)/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CompilerGeneratedAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[4] = $$[418](t0[3],".ctor",$$[439])/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[3], ".ctor", [dynamic expression])*/;
$$[420](t0[3],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[3], [dynamic expression])*/;
$$[420](t0[2],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[2], [dynamic expression])*/;
t0[5] = $$[417](t0[1],"set_UpdateInterval",$$[671],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "set_UpdateInterval", [dynamic expression], -1)*/;
$$[420](t0[5],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[5], [dynamic expression])*/;
t0[6] = $$[417](t0[1],"Start",$$[672],-1)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Start", [dynamic expression], -1)*/;
t0[7] = $$[417](t0[1],"BuildUI",$$[673],-1)/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "BuildUI", [dynamic expression], -1)*/;
t0[8] = $$[417](t0[1],"BuildSIPTable",$$[674],-1)/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "BuildSIPTable", [dynamic expression], -1)*/;
t0[9] = $$[417](t0[1],"BuildThreadTable",$$[675],-1)/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "BuildThreadTable", [dynamic expression], -1)*/;
t0[10] = $$[417](t0[1],"UpdateSIPs",$$[676],-1)/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "UpdateSIPs", [dynamic expression], -1)*/;
t0[11] = $$[417](t0[1],"UpdateThreads",$$[677],-1)/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "UpdateThreads", [dynamic expression], -1)*/;
t0[12] = $$[418](t0[1],".ctor",$$[678])/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1], ".ctor", [dynamic expression])*/;
t0[13] = $$[419](t0[1],"UpdateInterval",t0[2],t0[5])/*t0[13] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[1], "UpdateInterval", t0[2], t0[5])*/;
t0[14] = $$[416]("XaeiOS.ProcessViewer","Program",t0[0],374,null,false,false)/*t0[14] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.ProcessViewer", "Program", t0[0], [dynamic expression], null, False, False)*/;
t0[15] = $$[417](t0[14],"Main",$$[679],-1)/*t0[15] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[14], "Main", [dynamic expression], -1)*/;
t0[16] = $$[418](t0[14],".ctor",$$[680])/*t0[16] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[14], ".ctor", [dynamic expression])*/;
_[375].b = _[0];// XaeiOS.TestSuite.TestRunner extends System.Object
_[383].b = _[7];// XaeiOS.TestSuite.AssertException extends System.Exception
_[385].b = _[0];// XaeiOS.TestSuite.TestBase extends System.Object
_[386].b = _[385];// XaeiOS.TestSuite.Tests.XmlHttpRequestTest extends XaeiOS.TestSuite.TestBase
_[387].b = _[385];// XaeiOS.TestSuite.Tests.DictionaryRemoveSSABugTest extends XaeiOS.TestSuite.TestBase
_[388].b = _[385];// XaeiOS.TestSuite.Tests.SingleThreadedPerformanceTest extends XaeiOS.TestSuite.TestBase
_[389].b = _[385];// XaeiOS.TestSuite.Tests.ThreadSleepTest extends XaeiOS.TestSuite.TestBase
_[390].b = _[385];// XaeiOS.TestSuite.Tests.AlertHelloWorldTest extends XaeiOS.TestSuite.TestBase
_[391].b = _[0];// XaeiOS.TestSuite.Assert extends System.Object
_[392].b = _[385];// XaeiOS.TestSuite.Tests.EventTest extends XaeiOS.TestSuite.TestBase
_[393].b = _[0];// XaeiOS.TestSuite.TestSuite extends System.Object
_[394].b = _[393];// XaeiOS.TestSuite.Tests.CompilerBugsTestSuite extends XaeiOS.TestSuite.TestSuite
_[396].b = _[385];// XaeiOS.TestSuite.Tests.CompilerFlowControlTest extends XaeiOS.TestSuite.TestBase
_[397].b = _[385];// XaeiOS.TestSuite.Tests.MultiThreadingTest extends XaeiOS.TestSuite.TestBase
_[398].b = _[393];// XaeiOS.TestSuite.Tests.ReflectionTestSuite extends XaeiOS.TestSuite.TestSuite
_[399].b = _[1];// XaeiOS.TestSuite.Tests.ReflectionTestSuite/ReflectionTestAttribute extends System.Attribute
_[400].b = _[393];// XaeiOS.TestSuite.Tests.ExceptionHandlingTestSuite extends XaeiOS.TestSuite.TestSuite
_[401].b = _[385];// XaeiOS.TestSuite.Tests.NullReferenceExceptionTest extends XaeiOS.TestSuite.TestBase
_[402].b = _[385];// XaeiOS.TestSuite.Tests.SynchronizationTest extends XaeiOS.TestSuite.TestBase
_[403].b = _[385];// XaeiOS.TestSuite.Tests.DomTest extends XaeiOS.TestSuite.TestBase
_[404].b = _[385];// XaeiOS.TestSuite.Tests.ResourceTest extends XaeiOS.TestSuite.TestBase
_[405].b = _[0];// XaeiOS.TestSuite.Tests.DomElementResource extends System.Object
_[406].b = _[393];// XaeiOS.TestSuite.Tests.ClassStructureTestSuite extends XaeiOS.TestSuite.TestSuite
_[408].b = _[0];// XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase extends System.Object
_[409].b = _[408];// XaeiOS.TestSuite.Tests.ClassStructureTestSuite/RegularAdder extends XaeiOS.TestSuite.Tests.ClassStructureTestSuite/AdderBase
_[410].b = _[0];// XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass1 extends System.Object
_[412].b = _[0];// XaeiOS.TestSuite.Tests.ClassStructureTestSuite/StaticConstructorClass2 extends System.Object
_[414].b = _[1];// XaeiOS.TestSuite.TestAttribute extends System.Attribute
_[415].b = _[385];// XaeiOS.TestSuite.Tests.MultiThreadingStressTest extends XaeiOS.TestSuite.TestBase
_[416].b = _[393];// XaeiOS.TestSuite.QuickSortTestSuite extends XaeiOS.TestSuite.TestSuite
_[417].b = _[10];// XaeiOS.TestSuite.Comparison`1 extends System.MulticastDelegate
_[418].b = _[393];// XaeiOS.TestSuite.Tests.ThreadingTestSuite extends XaeiOS.TestSuite.TestSuite
_[419].b = _[0];// XaeiOS.TestSuite.Tests.CompilerBugsTestSuite/<>c__DisplayClass1 extends System.Object
_[420].b = _[0];// XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass1 extends System.Object
_[421].b = _[0];// XaeiOS.TestSuite.Tests.DomTest/<>c__DisplayClass3 extends System.Object
_[422].b = _[0];// <PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1} extends System.Object
_[425].b = _[0];// XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass1 extends System.Object
_[426].b = _[0];// XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass4 extends System.Object
_[427].b = _[0];// XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClass7 extends System.Object
_[428].b = _[0];// XaeiOS.TestSuite.Tests.ThreadingTestSuite/<>c__DisplayClassa extends System.Object
var t0 = {}/* t0 = [dynamic expression]*/;
$$[414]()/*System.Runtime.CompilerServices.RuntimeHelpers::InitializeMetadata()*/;t0[0] = $$[415]("XaeiOS.TestSuite")/*t0[0] = System.Runtime.CompilerServices.RuntimeHelpers::CreateAssembly("XaeiOS.TestSuite")*/;
t0[1] = $$[416]("XaeiOS.TestSuite","TestRunner",t0[0],375,null,false,false)/*t0[1] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "TestRunner", t0[0], [dynamic expression], null, False, False)*/;
t0[2] = $$[417](t0[1],"Main",$$[681],-1)/*t0[2] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Main", [dynamic expression], -1)*/;
t0[3] = $$[417](t0[1],"RunProcessViewer",$$[682],-1)/*t0[3] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "RunProcessViewer", [dynamic expression], -1)*/;
t0[4] = $$[417](t0[1],"RunTestSuite",$$[683],-1)/*t0[4] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "RunTestSuite", [dynamic expression], -1)*/;
t0[5] = $$[417](t0[1],"GetTestCases",$$[684],-1)/*t0[5] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "GetTestCases", [dynamic expression], -1)*/;
t0[6] = $$[417](t0[1],"RunTests",$$[685],-1)/*t0[6] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "RunTests", [dynamic expression], -1)*/;
t0[7] = $$[417](t0[1],"PerformTest",$$[686],-1)/*t0[7] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "PerformTest", [dynamic expression], -1)*/;
t0[8] = $$[417](t0[1],"Log",$$[687],-1)/*t0[8] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Log", [dynamic expression], -1)*/;
t0[9] = $$[417](t0[1],"Log",$$[688],-1)/*t0[9] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "Log", [dynamic expression], -1)*/;
t0[10] = $$[417](t0[1],"<RunProcessViewer>b__0",$$[689],-1)/*t0[10] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "<RunProcessViewer>b__0", [dynamic expression], -1)*/;
t0[11] = $$[416]("System.Runtime.CompilerServices","CompilerGeneratedAttribute",t0[0],241,null,false,false)/*t0[11] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.CompilerServices", "CompilerGeneratedAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[12] = $$[418](t0[11],".ctor",$$[439])/*t0[12] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[11], ".ctor", [dynamic expression])*/;
$$[420](t0[11],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[11], [dynamic expression])*/;
$$[420](t0[10],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[10], [dynamic expression])*/;
t0[13] = $$[417](t0[1],"<RunProcessViewer>b__1",$$[690],-1)/*t0[13] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "<RunProcessViewer>b__1", [dynamic expression], -1)*/;
$$[420](t0[13],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[13], [dynamic expression])*/;
t0[14] = $$[417](t0[1],"<RunTestSuite>b__4",$$[691],-1)/*t0[14] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "<RunTestSuite>b__4", [dynamic expression], -1)*/;
$$[420](t0[14],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[14], [dynamic expression])*/;
t0[15] = $$[417](t0[1],"<RunTestSuite>b__5",$$[692],-1)/*t0[15] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[1], "<RunTestSuite>b__5", [dynamic expression], -1)*/;
$$[420](t0[15],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[15], [dynamic expression])*/;
t0[16] = $$[418](t0[1],".cctor",$$[693])/*t0[16] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[1], ".cctor", [dynamic expression])*/;
t0[17] = $$[416]("XaeiOS.TestSuite","AssertException",t0[0],383,null,false,false)/*t0[17] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "AssertException", t0[0], [dynamic expression], null, False, False)*/;
t0[18] = $$[418](t0[17],".ctor",$$[694])/*t0[18] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[17], ".ctor", [dynamic expression])*/;
t0[19] = $$[416]("XaeiOS.TestSuite","ITest",t0[0],384,null,true,false)/*t0[19] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "ITest", t0[0], [dynamic expression], null, True, False)*/;
t0[20] = $$[417](t0[19],"get_Name",null,0)/*t0[20] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[19], "get_Name", null, [dynamic expression])*/;
t0[21] = $$[417](t0[19],"get_Passed",null,1)/*t0[21] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[19], "get_Passed", null, [dynamic expression])*/;
t0[22] = $$[417](t0[19],"get_Exception",null,2)/*t0[22] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[19], "get_Exception", null, [dynamic expression])*/;
t0[23] = $$[417](t0[19],"Test",null,3)/*t0[23] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[19], "Test", null, [dynamic expression])*/;
t0[24] = $$[419](t0[19],"Name",t0[20],null)/*t0[24] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[19], "Name", t0[20], null)*/;
t0[25] = $$[419](t0[19],"Passed",t0[21],null)/*t0[25] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[19], "Passed", t0[21], null)*/;
t0[26] = $$[419](t0[19],"Exception",t0[22],null)/*t0[26] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[19], "Exception", t0[22], null)*/;
t0[27] = $$[416]("XaeiOS.TestSuite","TestBase",t0[0],385,null,false,false)/*t0[27] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "TestBase", t0[0], [dynamic expression], null, False, False)*/;
t0[28] = $$[417](t0[27],"get_Name",$$[695],4)/*t0[28] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "get_Name", [dynamic expression], [dynamic expression])*/;
t0[29] = $$[417](t0[27],"get_Passed",$$[696],5)/*t0[29] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "get_Passed", [dynamic expression], [dynamic expression])*/;
t0[30] = $$[417](t0[27],"get_Exception",$$[697],6)/*t0[30] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "get_Exception", [dynamic expression], [dynamic expression])*/;
t0[31] = $$[417](t0[27],"Test",$$[698],7)/*t0[31] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "Test", [dynamic expression], [dynamic expression])*/;
t0[32] = $$[417](t0[27],"PerformTest",null,8)/*t0[32] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "PerformTest", null, [dynamic expression])*/;
t0[33] = $$[417](t0[27],"TestFailed",$$[699],-1)/*t0[33] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "TestFailed", [dynamic expression], -1)*/;
t0[34] = $$[417](t0[27],"Log",$$[700],-1)/*t0[34] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "Log", [dynamic expression], -1)*/;
t0[35] = $$[417](t0[27],"Assert",$$[701],-1)/*t0[35] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "Assert", [dynamic expression], -1)*/;
t0[36] = $$[417](t0[27],"Fail",$$[702],-1)/*t0[36] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "Fail", [dynamic expression], -1)*/;
t0[37] = $$[417](t0[27],"AssertEquals",$$[703],-1)/*t0[37] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "AssertEquals", [dynamic expression], -1)*/;
t0[38] = $$[417](t0[27],"AssertEquals",$$[704],-1)/*t0[38] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "AssertEquals", [dynamic expression], -1)*/;
t0[39] = $$[417](t0[27],"AssertEquals",$$[705],-1)/*t0[39] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "AssertEquals", [dynamic expression], -1)*/;
t0[40] = $$[417](t0[27],"AssertEquals",$$[706],-1)/*t0[40] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[27], "AssertEquals", [dynamic expression], -1)*/;
t0[41] = $$[418](t0[27],".ctor",$$[707])/*t0[41] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[27], ".ctor", [dynamic expression])*/;
t0[42] = $$[419](t0[27],"Name",t0[28],null)/*t0[42] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[27], "Name", t0[28], null)*/;
t0[43] = $$[419](t0[27],"Passed",t0[29],null)/*t0[43] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[27], "Passed", t0[29], null)*/;
t0[44] = $$[419](t0[27],"Exception",t0[30],null)/*t0[44] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[27], "Exception", t0[30], null)*/;
t0[45] = $$[416]("XaeiOS.TestSuite.Tests","XmlHttpRequestTest",t0[0],386,null,false,false)/*t0[45] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "XmlHttpRequestTest", t0[0], [dynamic expression], null, False, False)*/;
t0[46] = $$[417](t0[45],"PerformTest",$$[708],8)/*t0[46] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[45], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[47] = $$[418](t0[45],".ctor",$$[709])/*t0[47] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[45], ".ctor", [dynamic expression])*/;
t0[48] = $$[416]("XaeiOS.TestSuite.Tests","DictionaryRemoveSSABugTest",t0[0],387,null,false,false)/*t0[48] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "DictionaryRemoveSSABugTest", t0[0], [dynamic expression], null, False, False)*/;
t0[49] = $$[417](t0[48],"PerformTest",$$[710],8)/*t0[49] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[48], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[50] = $$[417](t0[48],"Add",$$[711],-1)/*t0[50] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[48], "Add", [dynamic expression], -1)*/;
t0[51] = $$[417](t0[48],"Remove",$$[712],-1)/*t0[51] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[48], "Remove", [dynamic expression], -1)*/;
t0[52] = $$[418](t0[48],".ctor",$$[713])/*t0[52] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[48], ".ctor", [dynamic expression])*/;
t0[53] = $$[416]("XaeiOS.TestSuite.Tests","SingleThreadedPerformanceTest",t0[0],388,null,false,false)/*t0[53] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "SingleThreadedPerformanceTest", t0[0], [dynamic expression], null, False, False)*/;
t0[54] = $$[417](t0[53],"PerformTest",$$[714],8)/*t0[54] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[53], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[55] = $$[418](t0[53],".ctor",$$[715])/*t0[55] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[53], ".ctor", [dynamic expression])*/;
t0[56] = $$[416]("XaeiOS.TestSuite.Tests","ThreadSleepTest",t0[0],389,null,false,false)/*t0[56] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ThreadSleepTest", t0[0], [dynamic expression], null, False, False)*/;
t0[57] = $$[417](t0[56],"PerformTest",$$[716],8)/*t0[57] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[56], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[58] = $$[418](t0[56],".ctor",$$[717])/*t0[58] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[56], ".ctor", [dynamic expression])*/;
t0[59] = $$[416]("XaeiOS.TestSuite.Tests","AlertHelloWorldTest",t0[0],390,null,false,false)/*t0[59] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "AlertHelloWorldTest", t0[0], [dynamic expression], null, False, False)*/;
t0[60] = $$[417](t0[59],"PerformTest",$$[718],8)/*t0[60] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[59], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[61] = $$[417](t0[59],"Alert",$$[680],-1)/*t0[61] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[59], "Alert", [dynamic expression], -1)*/;
t0[62] = $$[416]("System.Runtime.InteropServices","IntrinsicAttribute",t0[0],95,null,false,false)/*t0[62] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System.Runtime.InteropServices", "IntrinsicAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[63] = $$[417](t0[62],"get_UseGlobalNamespace",$$[177],-1)/*t0[63] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "get_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[64] = $$[417](t0[62],"set_UseGlobalNamespace",$$[178],-1)/*t0[64] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "set_UseGlobalNamespace", [dynamic expression], -1)*/;
t0[65] = $$[417](t0[62],"get_SetVTable",$$[179],-1)/*t0[65] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "get_SetVTable", [dynamic expression], -1)*/;
t0[66] = $$[417](t0[62],"set_SetVTable",$$[180],-1)/*t0[66] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "set_SetVTable", [dynamic expression], -1)*/;
t0[67] = $$[417](t0[62],"get_Name",$$[181],-1)/*t0[67] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "get_Name", [dynamic expression], -1)*/;
t0[68] = $$[417](t0[62],"set_Name",$$[182],-1)/*t0[68] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[62], "set_Name", [dynamic expression], -1)*/;
t0[69] = $$[418](t0[62],".ctor",$$[183])/*t0[69] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[62], ".ctor", [dynamic expression])*/;
t0[70] = $$[418](t0[62],".ctor",$$[184])/*t0[70] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[62], ".ctor", [dynamic expression])*/;
t0[71] = $$[419](t0[62],"UseGlobalNamespace",t0[63],t0[64])/*t0[71] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[62], "UseGlobalNamespace", t0[63], t0[64])*/;
t0[72] = $$[419](t0[62],"SetVTable",t0[65],t0[66])/*t0[72] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[62], "SetVTable", t0[65], t0[66])*/;
t0[73] = $$[419](t0[62],"Name",t0[67],t0[68])/*t0[73] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[62], "Name", t0[67], t0[68])*/;
$$[420](t0[62],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[62], [dynamic expression])*/;
$$[420](t0[61],$$[184].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[61], [dynamic expression])*/;
t0[74] = $$[418](t0[59],".ctor",$$[719])/*t0[74] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[59], ".ctor", [dynamic expression])*/;
t0[75] = $$[416]("XaeiOS.TestSuite","Assert",t0[0],391,null,false,false)/*t0[75] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "Assert", t0[0], [dynamic expression], null, False, False)*/;
t0[76] = $$[417](t0[75],"AssertTrue",$$[720],-1)/*t0[76] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertTrue", [dynamic expression], -1)*/;
t0[77] = $$[417](t0[75],"Fail",$$[721],-1)/*t0[77] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "Fail", [dynamic expression], -1)*/;
t0[78] = $$[417](t0[75],"AssertEquals",$$[722],-1)/*t0[78] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertEquals", [dynamic expression], -1)*/;
t0[79] = $$[417](t0[75],"AssertEquals",$$[723],-1)/*t0[79] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertEquals", [dynamic expression], -1)*/;
t0[80] = $$[417](t0[75],"AssertEquals",$$[724],-1)/*t0[80] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertEquals", [dynamic expression], -1)*/;
t0[81] = $$[417](t0[75],"AssertEquals",$$[725],-1)/*t0[81] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertEquals", [dynamic expression], -1)*/;
t0[82] = $$[417](t0[75],"AssertNotNull",$$[726],-1)/*t0[82] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[75], "AssertNotNull", [dynamic expression], -1)*/;
t0[83] = $$[416]("XaeiOS.TestSuite.Tests","EventTest",t0[0],392,null,false,false)/*t0[83] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "EventTest", t0[0], [dynamic expression], null, False, False)*/;
t0[84] = $$[417](t0[83],"add_MyEvent",$$[727],-1)/*t0[84] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "add_MyEvent", [dynamic expression], -1)*/;
t0[85] = $$[417](t0[83],"remove_MyEvent",$$[728],-1)/*t0[85] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "remove_MyEvent", [dynamic expression], -1)*/;
t0[86] = $$[417](t0[83],"add_NullEvent",$$[729],-1)/*t0[86] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "add_NullEvent", [dynamic expression], -1)*/;
t0[87] = $$[417](t0[83],"remove_NullEvent",$$[730],-1)/*t0[87] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "remove_NullEvent", [dynamic expression], -1)*/;
t0[88] = $$[417](t0[83],"PerformTest",$$[731],8)/*t0[88] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[89] = $$[417](t0[83],"EventTest_MyEvent3",$$[732],-1)/*t0[89] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "EventTest_MyEvent3", [dynamic expression], -1)*/;
t0[90] = $$[417](t0[83],"EventTest_MyEvent2",$$[733],-1)/*t0[90] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "EventTest_MyEvent2", [dynamic expression], -1)*/;
t0[91] = $$[417](t0[83],"EventTest_MyEvent",$$[734],-1)/*t0[91] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[83], "EventTest_MyEvent", [dynamic expression], -1)*/;
t0[92] = $$[418](t0[83],".ctor",$$[735])/*t0[92] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[83], ".ctor", [dynamic expression])*/;
t0[93] = $$[416]("XaeiOS.TestSuite","TestSuite",t0[0],393,null,false,false)/*t0[93] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "TestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[94] = $$[417](t0[93],"Assert",$$[736],-1)/*t0[94] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "Assert", [dynamic expression], -1)*/;
t0[95] = $$[417](t0[93],"Fail",$$[737],-1)/*t0[95] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "Fail", [dynamic expression], -1)*/;
t0[96] = $$[417](t0[93],"AssertEquals",$$[738],-1)/*t0[96] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "AssertEquals", [dynamic expression], -1)*/;
t0[97] = $$[417](t0[93],"AssertEquals",$$[739],-1)/*t0[97] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "AssertEquals", [dynamic expression], -1)*/;
t0[98] = $$[417](t0[93],"AssertEquals",$$[740],-1)/*t0[98] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "AssertEquals", [dynamic expression], -1)*/;
t0[99] = $$[417](t0[93],"AssertEquals",$$[741],-1)/*t0[99] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "AssertEquals", [dynamic expression], -1)*/;
t0[100] = $$[417](t0[93],"AssertNotNull",$$[742],-1)/*t0[100] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "AssertNotNull", [dynamic expression], -1)*/;
t0[101] = $$[417](t0[93],"get_Name",$$[743],4)/*t0[101] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "get_Name", [dynamic expression], [dynamic expression])*/;
$$[420](t0[101],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[101], [dynamic expression])*/;
t0[102] = $$[417](t0[93],"set_Name",$$[744],-1)/*t0[102] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "set_Name", [dynamic expression], -1)*/;
$$[420](t0[102],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[102], [dynamic expression])*/;
t0[103] = $$[417](t0[93],"get_Passed",$$[745],5)/*t0[103] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "get_Passed", [dynamic expression], [dynamic expression])*/;
$$[420](t0[103],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[103], [dynamic expression])*/;
t0[104] = $$[417](t0[93],"set_Passed",$$[746],-1)/*t0[104] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "set_Passed", [dynamic expression], -1)*/;
$$[420](t0[104],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[104], [dynamic expression])*/;
t0[105] = $$[417](t0[93],"get_Exception",$$[747],6)/*t0[105] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "get_Exception", [dynamic expression], [dynamic expression])*/;
$$[420](t0[105],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[105], [dynamic expression])*/;
t0[106] = $$[417](t0[93],"set_Exception",$$[748],-1)/*t0[106] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "set_Exception", [dynamic expression], -1)*/;
$$[420](t0[106],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[106], [dynamic expression])*/;
t0[107] = $$[417](t0[93],"Test",$$[749],7)/*t0[107] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "Test", [dynamic expression], [dynamic expression])*/;
t0[108] = $$[417](t0[93],"GetTestCases",$$[750],-1)/*t0[108] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "GetTestCases", [dynamic expression], -1)*/;
t0[109] = $$[417](t0[93],"Log",$$[751],-1)/*t0[109] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "Log", [dynamic expression], -1)*/;
t0[110] = $$[417](t0[93],"Setup",$$[752],8)/*t0[110] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "Setup", [dynamic expression], [dynamic expression])*/;
t0[111] = $$[417](t0[93],"TearDown",$$[753],9)/*t0[111] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[93], "TearDown", [dynamic expression], [dynamic expression])*/;
t0[112] = $$[418](t0[93],".ctor",$$[754])/*t0[112] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[93], ".ctor", [dynamic expression])*/;
t0[113] = $$[419](t0[93],"Name",t0[101],t0[102])/*t0[113] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[93], "Name", t0[101], t0[102])*/;
t0[114] = $$[419](t0[93],"Passed",t0[103],t0[104])/*t0[114] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[93], "Passed", t0[103], t0[104])*/;
t0[115] = $$[419](t0[93],"Exception",t0[105],t0[106])/*t0[115] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[93], "Exception", t0[105], t0[106])*/;
t0[116] = $$[416]("XaeiOS.TestSuite.Tests","CompilerBugsTestSuite",t0[0],394,null,false,false)/*t0[116] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "CompilerBugsTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[117] = $$[417](t0[116],"TestMethodInliningBreaksLoops",$$[755],-1)/*t0[117] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "TestMethodInliningBreaksLoops", [dynamic expression], -1)*/;
t0[118] = $$[416]("XaeiOS.TestSuite","TestAttribute",t0[0],414,null,false,false)/*t0[118] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "TestAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[119] = $$[418](t0[118],".ctor",$$[813])/*t0[119] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[118], ".ctor", [dynamic expression])*/;
t0[120] = $$[416]("System","AttributeUsageAttribute",t0[0],107,null,false,false)/*t0[120] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("System", "AttributeUsageAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[121] = $$[417](t0[120],"get_AllowMultiple",$$[218],-1)/*t0[121] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[120], "get_AllowMultiple", [dynamic expression], -1)*/;
t0[122] = $$[417](t0[120],"set_AllowMultiple",$$[219],-1)/*t0[122] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[120], "set_AllowMultiple", [dynamic expression], -1)*/;
t0[123] = $$[417](t0[120],"get_Inherited",$$[220],-1)/*t0[123] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[120], "get_Inherited", [dynamic expression], -1)*/;
t0[124] = $$[417](t0[120],"set_Inherited",$$[221],-1)/*t0[124] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[120], "set_Inherited", [dynamic expression], -1)*/;
t0[125] = $$[417](t0[120],"get_ValidOn",$$[222],-1)/*t0[125] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[120], "get_ValidOn", [dynamic expression], -1)*/;
t0[126] = $$[418](t0[120],".ctor",$$[223])/*t0[126] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[120], ".ctor", [dynamic expression])*/;
t0[127] = $$[418](t0[120],".ctor",$$[224])/*t0[127] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[120], ".ctor", [dynamic expression])*/;
t0[128] = $$[418](t0[120],".cctor",$$[225])/*t0[128] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[120], ".cctor", [dynamic expression])*/;
t0[129] = $$[419](t0[120],"AllowMultiple",t0[121],t0[122])/*t0[129] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[120], "AllowMultiple", t0[121], t0[122])*/;
t0[130] = $$[419](t0[120],"Inherited",t0[123],t0[124])/*t0[130] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[120], "Inherited", t0[123], t0[124])*/;
t0[131] = $$[419](t0[120],"ValidOn",t0[125],null)/*t0[131] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[120], "ValidOn", t0[125], null)*/;
$$[420](t0[120],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[120], [dynamic expression])*/;
$$[420](t0[118],$$[223].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[118], [dynamic expression])*/;
$$[420](t0[117],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[117], [dynamic expression])*/;
t0[132] = $$[417](t0[116],"CompareInts",$$[756],-1)/*t0[132] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "CompareInts", [dynamic expression], -1)*/;
t0[133] = $$[417](t0[116],"GetPivotPoint",$$[757],-1)/*t0[133] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "GetPivotPoint", [dynamic expression], -1)*/;
t0[134] = $$[417](t0[116],"GreaterThanOrEqualTo",$$[758],-1)/*t0[134] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "GreaterThanOrEqualTo", [dynamic expression], -1)*/;
t0[135] = $$[417](t0[116],"LessThanOrEqualTo",$$[759],-1)/*t0[135] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "LessThanOrEqualTo", [dynamic expression], -1)*/;
t0[136] = $$[417](t0[116],"GetPivotPoint2",$$[760],-1)/*t0[136] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[116], "GetPivotPoint2", [dynamic expression], -1)*/;
t0[137] = $$[418](t0[116],".ctor",$$[761])/*t0[137] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[116], ".ctor", [dynamic expression])*/;
t0[138] = $$[416]("XaeiOS.TestSuite.Tests","CompilerFlowControlTest",t0[0],396,null,false,false)/*t0[138] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "CompilerFlowControlTest", t0[0], [dynamic expression], null, False, False)*/;
t0[139] = $$[417](t0[138],"PerformTest",$$[762],8)/*t0[139] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[138], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[140] = $$[417](t0[138],"TestScore",$$[763],-1)/*t0[140] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[138], "TestScore", [dynamic expression], -1)*/;
t0[141] = $$[418](t0[138],".ctor",$$[764])/*t0[141] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[138], ".ctor", [dynamic expression])*/;
t0[142] = $$[416]("XaeiOS.TestSuite.Tests","MultiThreadingTest",t0[0],397,null,false,false)/*t0[142] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "MultiThreadingTest", t0[0], [dynamic expression], null, False, False)*/;
t0[143] = $$[417](t0[142],"PerformTest",$$[765],8)/*t0[143] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[142], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[144] = $$[417](t0[142],"ThreadOneStart",$$[766],-1)/*t0[144] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[142], "ThreadOneStart", [dynamic expression], -1)*/;
t0[145] = $$[417](t0[142],"ThreadTwoStart",$$[767],-1)/*t0[145] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[142], "ThreadTwoStart", [dynamic expression], -1)*/;
t0[146] = $$[418](t0[142],".ctor",$$[768])/*t0[146] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[142], ".ctor", [dynamic expression])*/;
t0[147] = $$[416]("XaeiOS.TestSuite.Tests","ReflectionTestSuite",t0[0],398,null,false,false)/*t0[147] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ReflectionTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[148] = $$[417](t0[147],"TestGetTypeByName",$$[769],-1)/*t0[148] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestGetTypeByName", [dynamic expression], -1)*/;
$$[420](t0[148],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[148], [dynamic expression])*/;
t0[149] = $$[417](t0[147],"TestGetType",$$[770],-1)/*t0[149] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestGetType", [dynamic expression], -1)*/;
$$[420](t0[149],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[149], [dynamic expression])*/;
t0[150] = $$[417](t0[147],"TestGetMethods",$$[771],-1)/*t0[150] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestGetMethods", [dynamic expression], -1)*/;
$$[420](t0[150],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[150], [dynamic expression])*/;
t0[151] = $$[417](t0[147],"TestGetProperties",$$[772],-1)/*t0[151] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestGetProperties", [dynamic expression], -1)*/;
$$[420](t0[151],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[151], [dynamic expression])*/;
t0[152] = $$[417](t0[147],"TestSetProperty",$$[773],-1)/*t0[152] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestSetProperty", [dynamic expression], -1)*/;
$$[420](t0[152],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[152], [dynamic expression])*/;
t0[153] = $$[417](t0[147],"TestIsDefinedOnType",$$[774],-1)/*t0[153] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestIsDefinedOnType", [dynamic expression], -1)*/;
$$[420](t0[153],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[153], [dynamic expression])*/;
t0[154] = $$[417](t0[147],"TestActivator",$$[775],-1)/*t0[154] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "TestActivator", [dynamic expression], -1)*/;
$$[420](t0[154],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[154], [dynamic expression])*/;
t0[155] = $$[417](t0[147],"get_MyProperty",$$[776],-1)/*t0[155] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "get_MyProperty", [dynamic expression], -1)*/;
$$[420](t0[155],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[155], [dynamic expression])*/;
t0[156] = $$[417](t0[147],"set_MyProperty",$$[777],-1)/*t0[156] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[147], "set_MyProperty", [dynamic expression], -1)*/;
$$[420](t0[156],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[156], [dynamic expression])*/;
t0[157] = $$[418](t0[147],".ctor",$$[778])/*t0[157] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[147], ".ctor", [dynamic expression])*/;
t0[158] = $$[419](t0[147],"MyProperty",t0[155],t0[156])/*t0[158] = System.Runtime.CompilerServices.RuntimeHelpers::CreateProperty(t0[147], "MyProperty", t0[155], t0[156])*/;
t0[159] = $$[416]("","ReflectionTestAttribute",t0[0],399,null,false,false)/*t0[159] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "ReflectionTestAttribute", t0[0], [dynamic expression], null, False, False)*/;
t0[160] = $$[418](t0[159],".ctor",$$[779])/*t0[160] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[159], ".ctor", [dynamic expression])*/;
$$[420](t0[147],$$[779].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[147], [dynamic expression])*/;
t0[161] = $$[416]("XaeiOS.TestSuite.Tests","ExceptionHandlingTestSuite",t0[0],400,null,false,false)/*t0[161] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ExceptionHandlingTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[162] = $$[417](t0[161],"FirstTest",$$[780],-1)/*t0[162] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "FirstTest", [dynamic expression], -1)*/;
$$[420](t0[162],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[162], [dynamic expression])*/;
t0[163] = $$[417](t0[161],"SecondTest",$$[781],-1)/*t0[163] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "SecondTest", [dynamic expression], -1)*/;
$$[420](t0[163],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[163], [dynamic expression])*/;
t0[164] = $$[417](t0[161],"SecondTestHelper",$$[782],-1)/*t0[164] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "SecondTestHelper", [dynamic expression], -1)*/;
t0[165] = $$[417](t0[161],"TestBasicTryCatchFinally",$$[783],-1)/*t0[165] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestBasicTryCatchFinally", [dynamic expression], -1)*/;
$$[420](t0[165],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[165], [dynamic expression])*/;
t0[166] = $$[417](t0[161],"TestBasicTryCatchFinallyThrowException",$$[784],-1)/*t0[166] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestBasicTryCatchFinallyThrowException", [dynamic expression], -1)*/;
$$[420](t0[166],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[166], [dynamic expression])*/;
t0[167] = $$[417](t0[161],"TestBasicNestedTryCatchFinally",$$[785],-1)/*t0[167] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestBasicNestedTryCatchFinally", [dynamic expression], -1)*/;
$$[420](t0[167],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[167], [dynamic expression])*/;
t0[168] = $$[417](t0[161],"TestComplexNestedTryCatchFinally",$$[786],-1)/*t0[168] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestComplexNestedTryCatchFinally", [dynamic expression], -1)*/;
$$[420](t0[168],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[168], [dynamic expression])*/;
t0[169] = $$[417](t0[161],"TestFinallyExecutesAfterCatchBlockThrows",$$[787],-1)/*t0[169] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestFinallyExecutesAfterCatchBlockThrows", [dynamic expression], -1)*/;
$$[420](t0[169],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[169], [dynamic expression])*/;
t0[170] = $$[417](t0[161],"TestFinallyExecutesAfterCatchBlockThrows2",$$[788],-1)/*t0[170] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[161], "TestFinallyExecutesAfterCatchBlockThrows2", [dynamic expression], -1)*/;
$$[420](t0[170],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[170], [dynamic expression])*/;
t0[171] = $$[418](t0[161],".ctor",$$[789])/*t0[171] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[161], ".ctor", [dynamic expression])*/;
t0[172] = $$[416]("XaeiOS.TestSuite.Tests","NullReferenceExceptionTest",t0[0],401,null,false,false)/*t0[172] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "NullReferenceExceptionTest", t0[0], [dynamic expression], null, False, False)*/;
t0[173] = $$[417](t0[172],"PerformTest",$$[790],8)/*t0[173] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[172], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[174] = $$[418](t0[172],".ctor",$$[791])/*t0[174] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[172], ".ctor", [dynamic expression])*/;
t0[175] = $$[416]("XaeiOS.TestSuite.Tests","SynchronizationTest",t0[0],402,null,false,false)/*t0[175] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "SynchronizationTest", t0[0], [dynamic expression], null, False, False)*/;
t0[176] = $$[417](t0[175],"PerformTest",$$[792],8)/*t0[176] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[175], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[177] = $$[417](t0[175],"ControllerThreadStart",$$[793],-1)/*t0[177] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[175], "ControllerThreadStart", [dynamic expression], -1)*/;
t0[178] = $$[418](t0[175],".ctor",$$[794])/*t0[178] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[175], ".ctor", [dynamic expression])*/;
t0[179] = $$[416]("XaeiOS.TestSuite.Tests","DomTest",t0[0],403,null,false,false)/*t0[179] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "DomTest", t0[0], [dynamic expression], null, False, False)*/;
t0[180] = $$[417](t0[179],"PerformTest",$$[795],8)/*t0[180] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[179], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[181] = $$[417](t0[179],"MoveElement",$$[796],-1)/*t0[181] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[179], "MoveElement", [dynamic expression], -1)*/;
t0[182] = $$[418](t0[179],".ctor",$$[797])/*t0[182] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[179], ".ctor", [dynamic expression])*/;
t0[183] = $$[416]("XaeiOS.TestSuite.Tests","ResourceTest",t0[0],404,null,false,false)/*t0[183] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ResourceTest", t0[0], [dynamic expression], null, False, False)*/;
t0[184] = $$[417](t0[183],"PerformTest",$$[798],8)/*t0[184] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[183], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[185] = $$[418](t0[183],".ctor",$$[799])/*t0[185] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[183], ".ctor", [dynamic expression])*/;
t0[186] = $$[416]("XaeiOS.TestSuite.Tests","DomElementResource",t0[0],405,null,false,false)/*t0[186] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "DomElementResource", t0[0], [dynamic expression], null, False, False)*/;
t0[187] = $$[417](t0[186],"Dispose",$$[800],4)/*t0[187] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[186], "Dispose", [dynamic expression], [dynamic expression])*/;
t0[188] = $$[417](t0[186],"ToString",$$[801],0)/*t0[188] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[186], "ToString", [dynamic expression], [dynamic expression])*/;
t0[189] = $$[418](t0[186],".ctor",$$[802])/*t0[189] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[186], ".ctor", [dynamic expression])*/;
t0[190] = $$[416]("XaeiOS.TestSuite.Tests","ClassStructureTestSuite",t0[0],406,null,false,false)/*t0[190] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ClassStructureTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[191] = $$[417](t0[190],"TestOverrideInterfaceMethodOfAbstractBaseClass",$$[803],-1)/*t0[191] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[190], "TestOverrideInterfaceMethodOfAbstractBaseClass", [dynamic expression], -1)*/;
$$[420](t0[191],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[191], [dynamic expression])*/;
t0[192] = $$[417](t0[190],"TestStaticConstructorsWorked",$$[804],-1)/*t0[192] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[190], "TestStaticConstructorsWorked", [dynamic expression], -1)*/;
$$[420](t0[192],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[192], [dynamic expression])*/;
t0[193] = $$[418](t0[190],".ctor",$$[805])/*t0[193] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[190], ".ctor", [dynamic expression])*/;
t0[194] = $$[416]("","IAdder",t0[0],407,null,true,false)/*t0[194] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "IAdder", t0[0], [dynamic expression], null, True, False)*/;
t0[195] = $$[417](t0[194],"AddTen",null,0)/*t0[195] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[194], "AddTen", null, [dynamic expression])*/;
t0[196] = $$[416]("","AdderBase",t0[0],408,null,false,false)/*t0[196] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "AdderBase", t0[0], [dynamic expression], null, False, False)*/;
t0[197] = $$[417](t0[196],"AddTen",null,4)/*t0[197] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[196], "AddTen", null, [dynamic expression])*/;
t0[198] = $$[418](t0[196],".ctor",$$[806])/*t0[198] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[196], ".ctor", [dynamic expression])*/;
t0[199] = $$[416]("","RegularAdder",t0[0],409,null,false,false)/*t0[199] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "RegularAdder", t0[0], [dynamic expression], null, False, False)*/;
t0[200] = $$[417](t0[199],"AddTen",$$[807],4)/*t0[200] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[199], "AddTen", [dynamic expression], [dynamic expression])*/;
t0[201] = $$[418](t0[199],".ctor",$$[808])/*t0[201] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[199], ".ctor", [dynamic expression])*/;
t0[202] = $$[416]("","StaticConstructorClass1",t0[0],410,null,false,false)/*t0[202] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "StaticConstructorClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[203] = $$[418](t0[202],".cctor",$$[809])/*t0[203] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[202], ".cctor", [dynamic expression])*/;
t0[204] = $$[418](t0[202],".ctor",$$[810])/*t0[204] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[202], ".ctor", [dynamic expression])*/;
t0[205] = $$[416]("","StaticConstructorClass2",t0[0],412,null,false,false)/*t0[205] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "StaticConstructorClass2", t0[0], [dynamic expression], null, False, False)*/;
t0[206] = $$[418](t0[205],".cctor",$$[811])/*t0[206] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[205], ".cctor", [dynamic expression])*/;
t0[207] = $$[418](t0[205],".ctor",$$[812])/*t0[207] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[205], ".ctor", [dynamic expression])*/;
t0[208] = $$[416]("XaeiOS.TestSuite.Tests","MultiThreadingStressTest",t0[0],415,null,false,false)/*t0[208] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "MultiThreadingStressTest", t0[0], [dynamic expression], null, False, False)*/;
t0[209] = $$[417](t0[208],"PerformTest",$$[814],8)/*t0[209] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[208], "PerformTest", [dynamic expression], [dynamic expression])*/;
t0[210] = $$[417](t0[208],"ThreadStarted",$$[815],-1)/*t0[210] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[208], "ThreadStarted", [dynamic expression], -1)*/;
t0[211] = $$[417](t0[208],"Work",$$[816],-1)/*t0[211] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[208], "Work", [dynamic expression], -1)*/;
t0[212] = $$[417](t0[208],"ThreadFinished",$$[817],-1)/*t0[212] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[208], "ThreadFinished", [dynamic expression], -1)*/;
t0[213] = $$[418](t0[208],".ctor",$$[818])/*t0[213] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[208], ".ctor", [dynamic expression])*/;
t0[214] = $$[416]("XaeiOS.TestSuite","QuickSortTestSuite",t0[0],416,null,false,false)/*t0[214] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "QuickSortTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[215] = $$[417](t0[214],"TestQuickSort",$$[819],-1)/*t0[215] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "TestQuickSort", [dynamic expression], -1)*/;
$$[420](t0[215],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[215], [dynamic expression])*/;
t0[216] = $$[417](t0[214],"CompareInts",$$[820],-1)/*t0[216] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "CompareInts", [dynamic expression], -1)*/;
t0[217] = $$[417](t0[214],"Sort",$$[821],-1)/*t0[217] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "Sort", [dynamic expression], -1)*/;
t0[218] = $$[417](t0[214],"GetPivotPoint",$$[822],-1)/*t0[218] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "GetPivotPoint", [dynamic expression], -1)*/;
t0[219] = $$[417](t0[214],"Sorting",$$[823],-1)/*t0[219] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "Sorting", [dynamic expression], -1)*/;
t0[220] = $$[417](t0[214],"GreaterThanOrEqualTo",$$[824],-1)/*t0[220] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "GreaterThanOrEqualTo", [dynamic expression], -1)*/;
t0[221] = $$[417](t0[214],"LessThanOrEqualTo",$$[825],-1)/*t0[221] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[214], "LessThanOrEqualTo", [dynamic expression], -1)*/;
t0[222] = $$[418](t0[214],".ctor",$$[826])/*t0[222] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[214], ".ctor", [dynamic expression])*/;
t0[223] = $$[416]("XaeiOS.TestSuite","Comparison`1",t0[0],417,null,false,false)/*t0[223] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite", "Comparison`1", t0[0], [dynamic expression], null, False, False)*/;
t0[224] = $$[417](t0[223],"Invoke",null,4)/*t0[224] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[223], "Invoke", null, [dynamic expression])*/;
t0[225] = $$[417](t0[223],"BeginInvoke",null,8)/*t0[225] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[223], "BeginInvoke", null, [dynamic expression])*/;
t0[226] = $$[417](t0[223],"EndInvoke",null,9)/*t0[226] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[223], "EndInvoke", null, [dynamic expression])*/;
t0[227] = $$[418](t0[223],".ctor",null)/*t0[227] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[223], ".ctor", null)*/;
t0[228] = $$[416]("XaeiOS.TestSuite.Tests","ThreadingTestSuite",t0[0],418,null,false,false)/*t0[228] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("XaeiOS.TestSuite.Tests", "ThreadingTestSuite", t0[0], [dynamic expression], null, False, False)*/;
t0[229] = $$[417](t0[228],"TestAbortThread",$$[827],-1)/*t0[229] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[228], "TestAbortThread", [dynamic expression], -1)*/;
$$[420](t0[229],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[229], [dynamic expression])*/;
t0[230] = $$[417](t0[228],"TestAbortThreadWithState",$$[828],-1)/*t0[230] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[228], "TestAbortThreadWithState", [dynamic expression], -1)*/;
$$[420](t0[230],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[230], [dynamic expression])*/;
t0[231] = $$[417](t0[228],"TestLockIdiom",$$[829],-1)/*t0[231] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[228], "TestLockIdiom", [dynamic expression], -1)*/;
$$[420](t0[231],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[231], [dynamic expression])*/;
t0[232] = $$[417](t0[228],"TestLockIdiomUnlocksWhenExceptionsAreThrown",$$[830],-1)/*t0[232] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[228], "TestLockIdiomUnlocksWhenExceptionsAreThrown", [dynamic expression], -1)*/;
$$[420](t0[232],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[232], [dynamic expression])*/;
t0[233] = $$[417](t0[228],"TestManualResetEvent",$$[831],-1)/*t0[233] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[228], "TestManualResetEvent", [dynamic expression], -1)*/;
$$[420](t0[233],$$[813].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[233], [dynamic expression])*/;
t0[234] = $$[418](t0[228],".ctor",$$[832])/*t0[234] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[228], ".ctor", [dynamic expression])*/;
t0[235] = $$[416]("","<>c__DisplayClass1",t0[0],419,null,false,false)/*t0[235] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[236] = $$[417](t0[235],"<TestMethodInliningBreaksLoops>b__0",$$[833],-1)/*t0[236] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[235], "<TestMethodInliningBreaksLoops>b__0", [dynamic expression], -1)*/;
t0[237] = $$[418](t0[235],".ctor",$$[834])/*t0[237] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[235], ".ctor", [dynamic expression])*/;
$$[420](t0[235],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[235], [dynamic expression])*/;
t0[238] = $$[416]("","<>c__DisplayClass1",t0[0],420,null,false,false)/*t0[238] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[239] = $$[418](t0[238],".ctor",$$[835])/*t0[239] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[238], ".ctor", [dynamic expression])*/;
$$[420](t0[238],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[238], [dynamic expression])*/;
t0[240] = $$[416]("","<>c__DisplayClass3",t0[0],421,null,false,false)/*t0[240] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass3", t0[0], [dynamic expression], null, False, False)*/;
t0[241] = $$[417](t0[240],"<PerformTest>b__0",$$[836],-1)/*t0[241] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[240], "<PerformTest>b__0", [dynamic expression], -1)*/;
t0[242] = $$[418](t0[240],".ctor",$$[837])/*t0[242] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[240], ".ctor", [dynamic expression])*/;
$$[420](t0[240],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[240], [dynamic expression])*/;
t0[243] = $$[416]("","<PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}",t0[0],422,null,false,false)/*t0[243] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<PrivateImplementationDetails>{D12C596F-15E5-4714-8E33-42B221F927D1}", t0[0], [dynamic expression], null, False, False)*/;
$$[420](t0[243],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[243], [dynamic expression])*/;
t0[244] = $$[416]("","__StaticArrayInitTypeSize=24",t0[0],424,null,false,false)/*t0[244] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "__StaticArrayInitTypeSize=24", t0[0], [dynamic expression], null, False, False)*/;
t0[245] = $$[416]("","<>c__DisplayClass1",t0[0],425,null,false,false)/*t0[245] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass1", t0[0], [dynamic expression], null, False, False)*/;
t0[246] = $$[417](t0[245],"<TestAbortThread>b__0",$$[838],-1)/*t0[246] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[245], "<TestAbortThread>b__0", [dynamic expression], -1)*/;
t0[247] = $$[418](t0[245],".ctor",$$[839])/*t0[247] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[245], ".ctor", [dynamic expression])*/;
$$[420](t0[245],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[245], [dynamic expression])*/;
t0[248] = $$[416]("","<>c__DisplayClass4",t0[0],426,null,false,false)/*t0[248] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass4", t0[0], [dynamic expression], null, False, False)*/;
t0[249] = $$[417](t0[248],"<TestAbortThreadWithState>b__3",$$[840],-1)/*t0[249] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[248], "<TestAbortThreadWithState>b__3", [dynamic expression], -1)*/;
t0[250] = $$[418](t0[248],".ctor",$$[841])/*t0[250] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[248], ".ctor", [dynamic expression])*/;
$$[420](t0[248],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[248], [dynamic expression])*/;
t0[251] = $$[416]("","<>c__DisplayClass7",t0[0],427,null,false,false)/*t0[251] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClass7", t0[0], [dynamic expression], null, False, False)*/;
t0[252] = $$[417](t0[251],"<TestLockIdiomUnlocksWhenExceptionsAreThrown>b__6",$$[842],-1)/*t0[252] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[251], "<TestLockIdiomUnlocksWhenExceptionsAreThrown>b__6", [dynamic expression], -1)*/;
t0[253] = $$[418](t0[251],".ctor",$$[843])/*t0[253] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[251], ".ctor", [dynamic expression])*/;
$$[420](t0[251],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[251], [dynamic expression])*/;
t0[254] = $$[416]("","<>c__DisplayClassa",t0[0],428,null,false,false)/*t0[254] = System.Runtime.CompilerServices.RuntimeHelpers::CreateClass("", "<>c__DisplayClassa", t0[0], [dynamic expression], null, False, False)*/;
t0[255] = $$[417](t0[254],"<TestManualResetEvent>b__9",$$[844],-1)/*t0[255] = System.Runtime.CompilerServices.RuntimeHelpers::CreateMethod(t0[254], "<TestManualResetEvent>b__9", [dynamic expression], -1)*/;
t0[256] = $$[418](t0[254],".ctor",$$[845])/*t0[256] = System.Runtime.CompilerServices.RuntimeHelpers::CreateConstructor(t0[254], ".ctor", [dynamic expression])*/;
$$[420](t0[254],$$[439].m)/*System.Runtime.CompilerServices.RuntimeHelpers::CreateCustomAttribute(t0[254], [dynamic expression])*/;
},StaticConstructors:[$$[77],$$[225],$$[309],$$[340],$$[640],$$[693],$$[809],$$[811]],Boot:$$[399],EntryPoint:$$[681]};